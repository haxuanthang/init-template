{"version":3,"sources":["node_modules/three/build/three.module.js","app.js"],"names":["REVISION","MOUSE","LEFT","MIDDLE","RIGHT","ROTATE","DOLLY","PAN","TOUCH","DOLLY_PAN","DOLLY_ROTATE","CullFaceNone","CullFaceBack","CullFaceFront","CullFaceFrontBack","BasicShadowMap","PCFShadowMap","PCFSoftShadowMap","VSMShadowMap","FrontSide","BackSide","DoubleSide","FlatShading","SmoothShading","NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending","AddEquation","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","NeverDepth","AlwaysDepth","LessDepth","LessEqualDepth","EqualDepth","GreaterEqualDepth","GreaterDepth","NotEqualDepth","MultiplyOperation","MixOperation","AddOperation","NoToneMapping","LinearToneMapping","ReinhardToneMapping","CineonToneMapping","ACESFilmicToneMapping","CustomToneMapping","UVMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","CubeUVReflectionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipmapNearestFilter","NearestMipMapNearestFilter","NearestMipmapLinearFilter","NearestMipMapLinearFilter","LinearFilter","LinearMipmapNearestFilter","LinearMipMapNearestFilter","LinearMipmapLinearFilter","LinearMipMapLinearFilter","UnsignedByteType","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","FloatType","HalfFloatType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedInt248Type","AlphaFormat","RGBFormat","RGBAFormat","LuminanceFormat","LuminanceAlphaFormat","DepthFormat","DepthStencilFormat","RedFormat","RedIntegerFormat","RGFormat","RGIntegerFormat","RGBAIntegerFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","RGB_ETC1_Format","RGB_ETC2_Format","RGBA_ETC2_EAC_Format","RGBA_ASTC_4x4_Format","RGBA_ASTC_5x4_Format","RGBA_ASTC_5x5_Format","RGBA_ASTC_6x5_Format","RGBA_ASTC_6x6_Format","RGBA_ASTC_8x5_Format","RGBA_ASTC_8x6_Format","RGBA_ASTC_8x8_Format","RGBA_ASTC_10x5_Format","RGBA_ASTC_10x6_Format","RGBA_ASTC_10x8_Format","RGBA_ASTC_10x10_Format","RGBA_ASTC_12x10_Format","RGBA_ASTC_12x12_Format","RGBA_BPTC_Format","LoopOnce","LoopRepeat","LoopPingPong","InterpolateDiscrete","InterpolateLinear","InterpolateSmooth","ZeroCurvatureEnding","ZeroSlopeEnding","WrapAroundEnding","NormalAnimationBlendMode","AdditiveAnimationBlendMode","TrianglesDrawMode","TriangleStripDrawMode","TriangleFanDrawMode","LinearEncoding","sRGBEncoding","BasicDepthPacking","RGBADepthPacking","TangentSpaceNormalMap","ObjectSpaceNormalMap","NoColorSpace","SRGBColorSpace","LinearSRGBColorSpace","ZeroStencilOp","KeepStencilOp","ReplaceStencilOp","IncrementStencilOp","DecrementStencilOp","IncrementWrapStencilOp","DecrementWrapStencilOp","InvertStencilOp","NeverStencilFunc","LessStencilFunc","EqualStencilFunc","LessEqualStencilFunc","GreaterStencilFunc","NotEqualStencilFunc","GreaterEqualStencilFunc","AlwaysStencilFunc","StaticDrawUsage","DynamicDrawUsage","StreamDrawUsage","StaticReadUsage","DynamicReadUsage","StreamReadUsage","StaticCopyUsage","DynamicCopyUsage","StreamCopyUsage","GLSL1","GLSL3","_SRGBAFormat","EventDispatcher","type","listener","_listeners","undefined","listeners","indexOf","push","listenerArray","index","splice","event","target","array","slice","i","l","length","call","_lut","toString","_seed","DEG2RAD","Math","PI","RAD2DEG","generateUUID","d0","random","d1","d2","d3","uuid","toLowerCase","clamp","value","min","max","euclideanModulo","n","m","mapLinear","x","a1","a2","b1","b2","inverseLerp","y","lerp","t","damp","lambda","dt","exp","pingpong","abs","smoothstep","smootherstep","randInt","low","high","floor","randFloat","randFloatSpread","range","seededRandom","s","imul","degToRad","degrees","radToDeg","radians","isPowerOfTwo","ceilPowerOfTwo","pow","ceil","log","LN2","floorPowerOfTwo","setQuaternionFromProperEuler","q","a","b","c","order","cos","sin","c2","s2","c13","s13","c1_3","s1_3","c3_1","s3_1","set","console","warn","denormalize$1","constructor","Float32Array","Uint16Array","Uint8Array","Int16Array","Int8Array","Error","normalize","round","MathUtils","Object","freeze","__proto__","denormalize","Vector2","scalar","v","w","addVectors","subVectors","multiplyScalar","e","elements","minVal","maxVal","divideScalar","sqrt","angle","atan2","distanceToSquared","dx","dy","alpha","v1","v2","offset","attribute","getX","getY","center","Symbol","iterator","prototype","isVector2","Matrix3","arguments","error","n11","n12","n13","n21","n22","n23","n31","n32","n33","te","me","xAxis","yAxis","zAxis","setFromMatrix3Column","multiplyMatrices","ae","be","a11","a12","a13","a21","a22","a23","a31","a32","a33","b11","b12","b13","b21","b22","b23","b31","b32","b33","d","f","g","h","t11","t12","t13","det","detInv","tmp","matrix4","setFromMatrix4","invert","transpose","r","tx","ty","sx","sy","rotation","cx","cy","theta","matrix","fromArray","isMatrix3","arrayNeedsUint32","TYPED_ARRAYS","Uint8ClampedArray","Int32Array","Uint32Array","Float64Array","getTypedArray","buffer","createElementNS","name","document","SRGBToLinear","LinearToSRGB","FN","ColorManagement","legacyMode","workingColorSpace","colorSpace","convert","color","sourceColorSpace","targetColorSpace","fn","fromWorkingColorSpace","toWorkingColorSpace","_colorKeywords","_rgb","_hslA","_hslB","hue2rgb","p","toComponents","source","Color","setRGB","isColor","copy","setHex","setStyle","hex","style","handleAlpha","string","parseFloat","exec","components","parseInt","setHSL","size","charAt","setColorName","copySRGBToLinear","copyLinearToSRGB","getHex","hue","saturation","lightness","delta","getHSL","color1","color2","getZ","normalized","NAMES","_canvas","ImageUtils","image","test","src","HTMLCanvasElement","canvas","width","height","context","getContext","ImageData","putImageData","drawImage","toDataURL","HTMLImageElement","ImageBitmap","imageData","getImageData","data","Source","version","meta","isRootObject","images","output","url","Array","isArray","isDataTexture","serializeImage","getDataURL","isSource","textureId","Texture","DEFAULT_IMAGE","mapping","DEFAULT_MAPPING","wrapS","wrapT","magFilter","minFilter","format","anisotropy","encoding","defineProperty","mipmaps","internalFormat","repeat","matrixAutoUpdate","generateMipmaps","premultiplyAlpha","flipY","unpackAlignment","userData","onUpdate","isRenderTargetTexture","needsPMREMUpdate","setUvTransform","JSON","parse","stringify","needsUpdate","textures","metadata","generator","toJSON","wrap","dispatchEvent","uv","applyMatrix3","isTexture","Vector4","z","acos","epsilon","epsilon2","m11","m12","m13","m21","m22","m23","m31","m32","m33","xx","yy","zz","xy","xz","yz","getW","isVector4","WebGLRenderTarget","options","depth","scissor","scissorTest","viewport","texture","depthBuffer","stencilBuffer","depthTexture","samples","dispose","clone","assign","isWebGLRenderTarget","DataArrayTexture","wrapR","isDataArrayTexture","WebGLArrayRenderTarget","isWebGLArrayRenderTarget","Data3DTexture","isData3DTexture","WebGL3DRenderTarget","isWebGL3DRenderTarget","WebGLMultipleRenderTargets","count","il","isWebGLMultipleRenderTargets","Quaternion","_x","_y","_z","_w","_onChangeCallback","quaternion","euler","update","isEuler","_order","c1","c3","s1","s3","axis","halfAngle","trace","vFrom","vTo","dot","Number","EPSILON","step","angleTo","slerp","conjugate","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","qb","cosHalfTheta","sqrSinHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","qa","u1","sqrt1u1","sqrtu1","u2","u3","callback","qm","slerpQuaternions","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","x0","y0","z0","w0","x1","y1","z1","w1","dir","sqrSin","len","tDir","isQuaternion","Vector3","multiplyVectors","applyQuaternion","_quaternion$4","setFromEuler","setFromAxisAngle","qx","qy","qz","qw","ix","iy","iz","iw","camera","applyMatrix4","matrixWorldInverse","projectionMatrix","projectionMatrixInverse","matrixWorld","crossVectors","ax","ay","az","bx","by","bz","denominator","lengthSq","planeNormal","_vector$c","projectOnVector","sub","normal","dz","setFromSphericalCoords","radius","phi","sinPhiRadius","setFromCylindricalCoords","setFromMatrixColumn","sz","u","isVector3","Box3","Infinity","minX","minY","minZ","maxX","maxY","maxZ","points","makeEmpty","expandByPoint","halfSize","_vector$b","add","object","precise","expandByObject","box","isEmpty","point","vector","addScalar","updateWorldMatrix","geometry","attributes","position","fromBufferAttribute","boundingBox","computeBoundingBox","_box$3","union","children","sphere","clampPoint","plane","constant","triangle","getCenter","_center","_extents","_v0$2","_v1$7","_v2$3","_f0","_f1","_f2","axes","satForAxes","_triangleNormal","clampedPoint","getSize","_points","setFromPoints","equals","isBox3","_testAxis","v0","extents","j","p0","p1","p2","_box$2","_v1$6","_toFarthestPoint","_toPoint","Sphere","optionalCenter","maxRadiusSq","distanceTo","radiusSum","intersectsSphere","distanceToPoint","deltaLengthSq","expandByScalar","getMaxScaleOnAxis","missingRadiusHalf","_vector$a","_segCenter","_segDir","_diff","_edge1","_edge2","_normal$1","Ray","origin","direction","ray","at","directionDistance","distanceSqToPoint","optionalPointOnRay","optionalPointOnSegment","segExtent","a01","b0","s0","sqrDist","extDet","invDet","tca","radius2","thc","t0","t1","distanceToPlane","distToPoint","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectBox","backfaceCulling","DdN","sign","DdQxE2","DdE1xQ","cross","QdN","transformDirection","Matrix4","n14","n24","n34","n41","n42","n43","n44","scaleX","_v1$5","scaleY","scaleZ","af","bf","ce","cf","de","df","ac","ad","bc","bd","compose","_zero","_one","eye","up","a14","a24","a34","a41","a42","a43","a44","b14","b24","b34","b41","b42","b43","b44","t14","scaleXSq","scaleYSq","scaleZSq","yx","zx","zy","scale","x2","y2","z2","wx","wy","wz","determinant","_m1$2","invSX","invSY","invSZ","setFromRotationMatrix","left","right","top","bottom","near","far","isMatrix4","_matrix$1","_quaternion$3","Euler","DefaultOrder","asin","makeRotationFromQuaternion","newOrder","setFromQuaternion","RotationOrders","Layers","mask","channel","layers","_object3DId","_v1$4","_q1","_m1$1","_target","_position$3","_scale$2","_quaternion$2","_xAxis","_yAxis","_zAxis","_addedEvent","_removedEvent","Object3D","parent","DefaultUp","onRotationChange","onQuaternionChange","_onChange","defineProperties","configurable","enumerable","modelViewMatrix","normalMatrix","DefaultMatrixAutoUpdate","matrixWorldNeedsUpdate","visible","castShadow","receiveShadow","frustumCulled","renderOrder","animations","updateMatrix","premultiply","decompose","multiply","rotateOnAxis","distance","translateOnAxis","setFromMatrixPosition","isCamera","isLight","lookAt","extractRotation","isObject3D","remove","id","getObjectByProperty","child","traverse","traverseVisible","traverseAncestors","force","updateMatrixWorld","updateParents","updateChildren","geometries","materials","shapes","skeletons","nodes","toArray","isInstancedMesh","instanceMatrix","instanceColor","serialize","library","element","isScene","background","environment","isMesh","isLine","isPoints","parameters","shape","isSkinnedMesh","bindMode","bindMatrix","skeleton","material","uuids","animation","extractFromCache","cache","values","key","recursive","_v0$1","_v1$3","_v2$2","_v3$1","_vab","_vac","_vbc","_vap","_vbp","_vcp","Triangle","i0","i1","i2","getNormal","setFromCoplanarPoints","getBarycoord","uv1","uv2","uv3","getUV","containsPoint","isFrontFacing","intersectsTriangle","d4","vc","addScaledVector","d5","d6","vb","va","denom","targetLengthSq","dot00","dot01","dot02","dot11","dot12","invDenom","p3","materialId","Material","blending","side","vertexColors","opacity","transparent","blendSrc","blendDst","blendEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","depthFunc","depthTest","depthWrite","stencilWriteMask","stencilFunc","stencilRef","stencilFuncMask","stencilFail","stencilZFail","stencilZPass","stencilWrite","clippingPlanes","clipIntersection","clipShadows","shadowSide","colorWrite","precision","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","dithering","alphaToCoverage","premultipliedAlpha","toneMapped","_alphaTest","onBeforeCompile","newValue","flatShading","currentValue","roughness","metalness","sheen","sheenColor","sheenRoughness","emissive","emissiveIntensity","specular","specularIntensity","specularColor","shininess","clearcoat","clearcoatRoughness","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","clearcoatNormalScale","map","matcap","alphaMap","lightMap","lightMapIntensity","aoMap","aoMapIntensity","bumpMap","bumpScale","normalMap","normalMapType","normalScale","displacementMap","displacementScale","displacementBias","roughnessMap","metalnessMap","emissiveMap","specularMap","specularIntensityMap","specularColorMap","envMap","combine","envMapIntensity","reflectivity","refractionRatio","gradientMap","transmission","transmissionMap","thickness","thicknessMap","attenuationDistance","attenuationColor","sizeAttenuation","linewidth","dashSize","gapSize","alphaTest","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","fog","srcPlanes","dstPlanes","isMaterial","fromType","MeshBasicMaterial","setValues","isMeshBasicMaterial","_vector$9","_vector2$1","BufferAttribute","itemSize","TypeError","usage","updateRange","index1","index2","colors","vectors","setXY","setXYZ","applyNormalMatrix","onUploadCallback","isBufferAttribute","Int8BufferAttribute","Uint8BufferAttribute","Uint8ClampedBufferAttribute","Int16BufferAttribute","Uint16BufferAttribute","Int32BufferAttribute","Uint32BufferAttribute","Float16BufferAttribute","isFloat16BufferAttribute","Float32BufferAttribute","Float64BufferAttribute","_id$1","_m1","_obj","_offset","_box$1","_boxMorphTargets","_vector$8","BufferGeometry","morphAttributes","morphTargetsRelative","groups","boundingSphere","drawRange","start","materialIndex","getNormalMatrix","tangent","computeBoundingSphere","makeRotationX","makeRotationY","makeRotationZ","makeTranslation","makeScale","negate","translate","setAttribute","morphAttributesPosition","isGLBufferAttribute","setFromBufferAttribute","morphAttribute","isNaN","jl","indices","positions","normals","uvs","nVertices","hasAttribute","tangents","getAttribute","tan1","tan2","vA","vB","vC","uvA","uvB","uvC","sdir","tdir","handleTriangle","isFinite","group","tmp2","n2","handleVertex","positionAttribute","normalAttribute","pA","pB","pC","nA","nB","nC","cb","ab","normalizeNormals","isBufferGeometry","attribute1","attributeArray1","attribute2","attributeArray2","attributeOffset","convertBufferAttribute","array2","isInterleavedBufferAttribute","stride","geometry2","newAttribute","morphArray","addGroup","keys","hasMorphAttributes","attributeArray","setIndex","_inverseMatrix$2","_ray$2","_sphere$3","_vA$1","_vB$1","_vC$1","_tempA","_tempB","_tempC","_morphA","_morphB","_morphC","_uvA$1","_uvB$1","_uvC$1","_intersectionPoint","_intersectionPointWorld","Mesh","updateMorphTargets","morphTargetInfluences","morphTargetDictionary","ml","String","morphTargets","raycaster","intersects","intersectsBox","intersection","morphPosition","groupMaterial","end","checkBufferGeometryIntersection","faceIndex","face","isGeometry","checkIntersection","intersect","intersectTriangle","morphInfluences","influence","boneTransform","BoxGeometry","widthSegments","heightSegments","depthSegments","scope","vertices","numberOfVertices","groupStart","buildPlane","udir","vdir","gridX","gridY","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","groupCount","cloneUniforms","property","mergeUniforms","uniforms","merged","UniformsUtils","merge","default_vertex","default_fragment","ShaderMaterial","defines","vertexShader","fragmentShader","lights","clipping","extensions","derivatives","fragDepth","drawBuffers","shaderTextureLOD","defaultAttributeValues","index0AttributeName","uniformsNeedUpdate","glslVersion","uniform","isShaderMaterial","Camera","PerspectiveCamera","fov","aspect","zoom","focus","view","filmGauge","filmOffset","updateProjectionMatrix","focalLength","vExtentSlope","getFilmHeight","atan","tan","fullWidth","fullHeight","enabled","offsetX","offsetY","skew","getFilmWidth","makePerspective","isPerspectiveCamera","CubeCamera","renderTarget","isWebGLCubeRenderTarget","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","renderer","scene","currentRenderTarget","getRenderTarget","currentToneMapping","toneMapping","currentXrEnabled","xr","setRenderTarget","render","CubeTexture","isCubeTexture","WebGLCubeRenderTarget","shader","tEquirect","mesh","currentMinFilter","stencil","clear","_vector1","_vector2","_normalMatrix","Plane","setFromNormalAndCoplanarPoint","inverseNormalLength","line","startSign","endSign","intersectsPlane","optionalNormalMatrix","referencePoint","coplanarPoint","isPlane","_sphere$2","_vector$7","Frustum","p4","p5","planes","frustum","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","setComponents","sprite","negRadius","WebGLAnimation","isAnimating","animationLoop","requestId","onAnimationFrame","time","frame","requestAnimationFrame","stop","cancelAnimationFrame","setAnimationLoop","setContext","WebGLAttributes","gl","capabilities","isWebGL2","buffers","WeakMap","createBuffer","bufferType","bindBuffer","bufferData","bytesPerElement","BYTES_PER_ELEMENT","updateBuffer","bufferSubData","subarray","get","deleteBuffer","delete","cached","elementSize","PlaneGeometry","width_half","height_half","segment_width","segment_height","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","alphatest_pars_fragment","aomap_fragment","aomap_pars_fragment","begin_vertex","beginnormal_vertex","bsdfs","bumpmap_pars_fragment","clipping_planes_fragment","clipping_planes_pars_fragment","clipping_planes_pars_vertex","clipping_planes_vertex","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","common","cube_uv_reflection_fragment","defaultnormal_vertex","displacementmap_pars_vertex","displacementmap_vertex","emissivemap_fragment","emissivemap_pars_fragment","encodings_fragment","encodings_pars_fragment","envmap_fragment","envmap_common_pars_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_vertex","fog_vertex","fog_pars_vertex","fog_fragment","fog_pars_fragment","gradientmap_pars_fragment","lightmap_fragment","lightmap_pars_fragment","lights_lambert_vertex","lights_pars_begin","envmap_physical_pars_fragment","lights_toon_fragment","lights_toon_pars_fragment","lights_phong_fragment","lights_phong_pars_fragment","lights_physical_fragment","lights_physical_pars_fragment","lights_fragment_begin","lights_fragment_maps","lights_fragment_end","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","metalnessmap_fragment","metalnessmap_pars_fragment","morphcolor_vertex","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normal_fragment_begin","normal_fragment_maps","normal_pars_fragment","normal_pars_vertex","normal_vertex","normalmap_pars_fragment","clearcoat_normal_fragment_begin","clearcoat_normal_fragment_maps","clearcoat_pars_fragment","output_fragment","packing","premultiplied_alpha_fragment","project_vertex","dithering_fragment","dithering_pars_fragment","roughnessmap_fragment","roughnessmap_pars_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","shadowmask_pars_fragment","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","tonemapping_fragment","tonemapping_pars_fragment","transmission_fragment","transmission_pars_fragment","uv_pars_fragment","uv_pars_vertex","uv_vertex","uv2_pars_fragment","uv2_pars_vertex","uv2_vertex","worldpos_vertex","vertex$g","fragment$g","vertex$f","fragment$f","vertex$e","fragment$e","vertex$d","fragment$d","vertex$c","fragment$c","vertex$b","fragment$b","vertex$a","fragment$a","vertex$9","fragment$9","vertex$8","fragment$8","vertex$7","fragment$7","vertex$6","fragment$6","vertex$5","fragment$5","vertex$4","fragment$4","vertex$3","fragment$3","vertex$2","fragment$2","vertex$1","fragment$1","ShaderChunk","background_vert","background_frag","cube_vert","cube_frag","depth_vert","depth_frag","distanceRGBA_vert","distanceRGBA_frag","equirect_vert","equirect_frag","linedashed_vert","linedashed_frag","meshbasic_vert","meshbasic_frag","meshlambert_vert","meshlambert_frag","meshmatcap_vert","meshmatcap_frag","meshnormal_vert","meshnormal_frag","meshphong_vert","meshphong_frag","meshphysical_vert","meshphysical_frag","meshtoon_vert","meshtoon_frag","points_vert","points_frag","shadow_vert","shadow_frag","sprite_vert","sprite_frag","UniformsLib","diffuse","uvTransform","uv2Transform","specularmap","envmap","flipEnvMap","ior","aomap","lightmap","emissivemap","bumpmap","normalmap","displacementmap","roughnessmap","metalnessmap","gradientmap","fogDensity","fogNear","fogFar","fogColor","ambientLightColor","lightProbe","directionalLights","properties","directionalLightShadows","shadowBias","shadowNormalBias","shadowRadius","shadowMapSize","directionalShadowMap","directionalShadowMatrix","spotLights","coneCos","penumbraCos","decay","spotLightShadows","spotShadowMap","spotShadowMatrix","pointLights","pointLightShadows","shadowCameraNear","shadowCameraFar","pointShadowMap","pointShadowMatrix","hemisphereLights","skyColor","groundColor","rectAreaLights","ltc_1","ltc_2","ShaderLib","basic","lambert","phong","standard","toon","dashed","totalSize","t2D","cube","equirect","distanceRGBA","referencePosition","nearDistance","farDistance","shadow","physical","sheenColorMap","sheenRoughnessMap","transmissionSamplerSize","transmissionSamplerMap","WebGLBackground","cubemaps","state","objects","clearColor","clearAlpha","planeMesh","boxMesh","currentBackground","currentBackgroundVersion","currentTonemapping","renderList","forceClear","session","getSession","environmentBlendMode","setClear","autoClear","autoClearColor","autoClearDepth","autoClearStencil","deleteAttribute","onBeforeRender","copyPosition","enableAll","unshift","getClearColor","setClearColor","getClearAlpha","setClearAlpha","WebGLBindingStates","maxVertexAttributes","getParameter","extension","vaoAvailable","bindingStates","defaultState","createBindingState","currentState","forceUpdate","setup","program","updateBuffers","getBindingState","bindVertexArrayObject","saveCache","setupVertexAttributes","createVertexArrayObject","createVertexArray","createVertexArrayOES","vao","bindVertexArray","bindVertexArrayOES","deleteVertexArrayObject","deleteVertexArray","deleteVertexArrayOES","programMap","stateMap","newAttributes","enabledAttributes","attributeDivisors","cachedAttributes","geometryAttributes","attributesNum","programAttributes","getAttributes","programAttribute","location","cachedAttribute","geometryAttribute","initAttributes","enableAttribute","enableAttributeAndDivisor","meshPerAttribute","enableVertexAttribArray","disableUnusedAttributes","disableVertexAttribArray","vertexAttribPointer","vertexAttribIPointer","isInstancedBufferGeometry","materialDefaultAttributeValues","isInstancedInterleavedBuffer","locationSize","_maxInstanceCount","isInstancedBufferAttribute","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","reset","geometryId","programId","releaseStatesOfGeometry","releaseStatesOfProgram","resetDefaultState","WebGLBufferRenderer","info","mode","setMode","drawArrays","renderInstances","primcount","methodName","WebGLCapabilities","maxAnisotropy","getMaxAnisotropy","has","MAX_TEXTURE_MAX_ANISOTROPY_EXT","getMaxPrecision","getShaderPrecisionFormat","WebGL2RenderingContext","WebGL2ComputeRenderingContext","maxPrecision","logarithmicDepthBuffer","maxTextures","maxVertexTextures","maxTextureSize","maxCubemapSize","maxAttributes","maxVertexUniforms","maxVaryings","maxFragmentUniforms","vertexTextures","floatFragmentTextures","floatVertexTextures","maxSamples","WebGLClipping","globalState","numGlobalPlanes","localClippingEnabled","renderingShadows","viewNormalMatrix","numPlanes","numIntersection","init","enableLocalClipping","projectPlanes","beginShadows","endShadows","resetGlobalState","setState","useCache","materialProperties","nGlobal","lGlobal","dstArray","clippingState","skipTransform","nPlanes","flatSize","viewMatrix","i4","WebGLCubeMaps","mapTextureMapping","cubemap","fromEquirectangularTexture","addEventListener","onTextureDispose","removeEventListener","OrthographicCamera","scaleW","scaleH","makeOrthographic","isOrthographicCamera","LOD_MIN","EXTRA_LOD_SIGMA","MAX_SAMPLES","_flatCamera","_clearColor","_oldTarget","PHI","INV_PHI","_axisDirections","PMREMGenerator","_renderer","_pingPongRenderTarget","_lodMax","_cubeSize","_lodPlanes","_sizeLods","_sigmas","_blurMaterial","_cubemapMaterial","_equirectMaterial","_compileMaterial","sigma","_setSize","cubeUVRenderTarget","_allocateTargets","_sceneToCubeUV","_blur","_applyPMREM","_cleanup","equirectangular","_fromTexture","_getCubemapMaterial","_getEquirectMaterial","_dispose","cubeSize","log2","outputTarget","_setViewport","_textureToCubeUV","params","_createRenderTarget","_createPlanes","sizeLods","lodPlanes","sigmas","_getBlurShader","tmpMesh","compile","cubeCamera","upSign","forwardSign","originalAutoClear","backgroundMaterial","backgroundBox","useSolidColor","col","poleAxis","lodIn","lodOut","pingPongRenderTarget","_halfBlur","targetIn","targetOut","sigmaRadians","blurMaterial","STANDARD_DEVIATIONS","blurMesh","blurUniforms","pixels","radiansPerPixel","sigmaPixels","weights","sum","weight","outputSize","lodMax","lod","totalLods","sizeLod","texelSize","cubeFaces","positionSize","uvSize","faceIndexSize","coordinates","fill","shaderMaterial","_getCommonVertexShader","WebGLCubeUVMaps","cubeUVmaps","pmremGenerator","isEquirectMap","isCubeMap","fromEquirectangular","fromCubemap","isCubeTextureComplete","cubemapUV","WebGLExtensions","getExtension","WebGLGeometries","wireframeAttributes","onGeometryDispose","memory","updateWireframeAttribute","geometryIndex","geometryPosition","previousAttribute","getWireframeAttribute","currentAttribute","WebGLIndexedBufferRenderer","drawElements","WebGLInfo","calls","triangles","lines","instanceCount","programs","autoReset","numericalSort","absNumericalSort","morph","WebGLMorphtargets","influencesList","morphTextures","workInfluences","objectInfluences","morphTargetsCount","entry","disposeTexture","hasMorphPosition","hasMorphNormals","hasMorphColors","morphNormals","morphColors","vertexDataCount","vertexDataStride","morphTarget","morphNormal","morphColor","morphInfluencesSum","morphBaseInfluence","getUniforms","setValue","influences","sort","MAX_SAFE_INTEGER","WebGLObjects","updateMap","buffergeometry","hasEventListener","onInstancedMeshDispose","instancedMesh","emptyTexture","emptyArrayTexture","empty3dTexture","emptyCubeTexture","arrayCacheF32","arrayCacheI32","mat4array","mat3array","mat2array","flatten","nBlocks","blockSize","firstElem","arraysEqual","copyArray","allocTexUnits","allocateTextureUnit","setValueV1f","uniform1f","addr","setValueV2f","uniform2f","uniform2fv","setValueV3f","uniform3f","uniform3fv","setValueV4f","uniform4f","uniform4fv","setValueM2","uniformMatrix2fv","setValueM3","uniformMatrix3fv","setValueM4","uniformMatrix4fv","setValueV1i","uniform1i","setValueV2i","uniform2iv","setValueV3i","uniform3iv","setValueV4i","uniform4iv","setValueV1ui","uniform1ui","setValueV2ui","uniform2uiv","setValueV3ui","uniform3uiv","setValueV4ui","uniform4uiv","setValueT1","unit","setTexture2D","setValueT3D1","setTexture3D","setValueT6","setTextureCube","setValueT2DArray1","setTexture2DArray","getSingularSetter","setValueV1fArray","uniform1fv","setValueV2fArray","setValueV3fArray","setValueV4fArray","setValueM2Array","setValueM3Array","setValueM4Array","setValueV1iArray","uniform1iv","setValueV2iArray","setValueV3iArray","setValueV4iArray","setValueV1uiArray","uniform1uiv","setValueV2uiArray","setValueV3uiArray","setValueV4uiArray","setValueT1Array","units","setValueT3DArray","setValueT6Array","setValueT2DArrayArray","getPureArraySetter","SingleUniform","activeInfo","PureArrayUniform","StructuredUniform","seq","RePathPart","addUniform","container","uniformObject","parseUniform","path","pathLength","lastIndex","match","matchEnd","idIsIndex","subscript","next","WebGLUniforms","getProgramParameter","getActiveUniform","getUniformLocation","setOptional","upload","seqWithValue","WebGLShader","createShader","shaderSource","compileShader","programIdCount","handleSource","errorLine","split","lines2","from","to","join","getEncodingComponents","getShaderErrors","status","getShaderParameter","errors","getShaderInfoLog","trim","errorMatches","toUpperCase","getShaderSource","getTexelEncodingFunction","functionName","getToneMappingFunction","toneMappingName","generateExtensions","chunks","extensionDerivatives","envMapCubeUVHeight","tangentSpaceNormalMap","shaderID","extensionFragDepth","rendererExtensionFragDepth","extensionDrawBuffers","rendererExtensionDrawBuffers","extensionShaderTextureLOD","rendererExtensionShaderTextureLod","filter","filterEmptyLine","generateDefines","fetchAttributeLocations","getActiveAttrib","getAttribLocation","replaceLightNums","replace","numDirLights","numSpotLights","numRectAreaLights","numPointLights","numHemiLights","numDirLightShadows","numSpotLightShadows","numPointLightShadows","replaceClippingPlaneNums","numClippingPlanes","numClipIntersection","includePattern","resolveIncludes","includeReplacer","include","deprecatedUnrollLoopPattern","unrollLoopPattern","unrollLoops","loopReplacer","deprecatedLoopReplacer","snippet","generatePrecision","precisionstring","generateShadowMapTypeDefine","shadowMapTypeDefine","shadowMapType","generateEnvMapTypeDefine","envMapTypeDefine","envMapMode","generateEnvMapModeDefine","envMapModeDefine","generateEnvMapBlendingDefine","envMapBlendingDefine","generateCubeUVSize","imageHeight","maxMip","texelHeight","texelWidth","WebGLProgram","cacheKey","envMapCubeUVSize","customExtensions","customDefines","createProgram","prefixVertex","prefixFragment","versionString","isRawShaderMaterial","shaderName","instancing","instancingColor","supportsVertexTextures","useFog","fogExp2","objectSpaceNormalMap","vertexTangents","vertexAlphas","vertexUvs","uvsVertexOnly","skinning","morphTextureStride","doubleSided","flipSided","shadowMapEnabled","decodeVideoTexture","physicallyCorrectLights","opaque","outputEncoding","useDepthPacking","depthPacking","vertexGlsl","fragmentGlsl","glVertexShader","glFragmentShader","attachShader","bindAttribLocation","linkProgram","debug","checkShaderErrors","programLog","getProgramInfoLog","vertexLog","fragmentLog","runnable","haveDiagnostics","vertexErrors","fragmentErrors","getError","diagnostics","prefix","deleteShader","cachedUniforms","destroy","deleteProgram","usedTimes","_id","WebGLShaderCache","shaderCache","Map","materialCache","vertexShaderStage","_getShaderStage","fragmentShaderStage","materialShaders","_getShaderCacheForMaterial","shaderStage","code","Set","stage","WebGLShaderStage","WebGLPrograms","cubeuvmaps","_programLayers","_customShaders","shaderIDs","MeshDepthMaterial","MeshDistanceMaterial","MeshNormalMaterial","MeshLambertMaterial","MeshPhongMaterial","MeshToonMaterial","MeshStandardMaterial","MeshPhysicalMaterial","MeshMatcapMaterial","LineBasicMaterial","LineDashedMaterial","PointsMaterial","ShadowMaterial","SpriteMaterial","getParameters","shadows","isMeshStandardMaterial","customVertexShaderID","customFragmentShaderID","getVertexShaderID","getFragmentShaderID","useAlphaTest","useClearcoat","isXRRenderTarget","isVideoTexture","isFogExp2","directional","spot","rectArea","hemi","shadowMap","customProgramCacheKey","getProgramCacheKey","getProgramCacheKeyParameters","getProgramCacheKeyBooleans","morphAttributeCount","disableAll","enable","acquireProgram","pl","preexistingProgram","releaseProgram","pop","releaseShaderCache","WebGLProperties","painterSortStable","groupOrder","reversePainterSortStable","WebGLRenderList","renderItems","renderItemsIndex","transmissive","getNextRenderItem","renderItem","customOpaqueSort","customTransparentSort","finish","WebGLRenderLists","lists","renderCallDepth","list","UniformsCache","light","halfWidth","halfHeight","ShadowUniformsCache","nextVersion","shadowCastingLightsFirst","lightA","lightB","WebGLLights","shadowCache","hash","directionalLength","pointLength","spotLength","rectAreaLength","hemiLength","numDirectionalShadows","numPointShadows","numSpotShadows","ambient","probe","directionalShadow","spotShadow","rectAreaLTC1","rectAreaLTC2","pointShadow","vector3","matrix42","scaleFactor","intensity","isAmbientLight","isLightProbe","sh","coefficients","isDirectionalLight","shadowUniforms","bias","normalBias","mapSize","isSpotLight","penumbra","isRectAreaLight","isPointLight","isHemisphereLight","LTC_FLOAT_1","LTC_FLOAT_2","LTC_HALF_1","LTC_HALF_2","setupView","identity","WebGLRenderState","lightsArray","shadowsArray","pushLight","pushShadow","shadowLight","setupLights","setupLightsView","WebGLRenderStates","renderStates","renderState","isMeshDepthMaterial","isMeshDistanceMaterial","vertex","fragment","WebGLShadowMap","_objects","_capabilities","_frustum","_shadowMapSize","_viewportSize","_viewport","_depthMaterial","_distanceMaterial","_materialCache","_maxTextureSize","shadowMaterialVertical","VSM_SAMPLES","shadow_pass","resolution","shadowMaterialHorizontal","HORIZONTAL_PASS","fullScreenTri","fullScreenMesh","autoUpdate","activeCubeFace","getActiveCubeFace","activeMipmapLevel","getActiveMipmapLevel","_state","setBlending","setTest","setScissorTest","shadowFrameExtents","getFrameExtents","isPointLightShadow","mapPass","pars","viewportCount","getViewportCount","vp","getViewport","updateMatrices","getFrustum","renderObject","VSMPass","blurSamples","renderBufferDirect","getDepthMaterial","result","customMaterial","customDistanceMaterial","customDepthMaterial","keyA","keyB","materialsForVariant","cachedMaterial","shadowCamera","intersectsObject","k","kl","depthMaterial","WebGLState","ColorBuffer","locked","currentColorMask","currentColorClear","setMask","colorMask","setLocked","lock","DepthBuffer","currentDepthMask","currentDepthFunc","currentDepthClear","disable","depthMask","setFunc","clearDepth","StencilBuffer","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","stencilTest","stencilMask","setOp","stencilOp","clearStencil","colorBuffer","enabledCapabilities","currentBoundFramebuffers","currentDrawbuffers","defaultDrawbuffers","currentProgram","currentBlendingEnabled","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentPremultipledAlpha","currentFlipSided","currentCullFace","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","lineWidthAvailable","glVersion","currentTextureSlot","currentBoundTextures","scissorParam","viewportParam","currentScissor","currentViewport","createTexture","bindTexture","texParameteri","texImage2D","emptyTextures","setFlipSided","setCullFace","bindFramebuffer","framebuffer","drawBuffersWEBGL","useProgram","equationToGL","MIN_EXT","MAX_EXT","factorToGL","blendFuncSeparate","blendFunc","blendEquationSeparate","setMaterial","frontFaceCW","setPolygonOffset","frontFace","cullFace","setLineWidth","lineWidth","factor","activeTexture","webglSlot","webglType","webglTexture","boundTexture","unbindTexture","compressedTexImage2D","apply","texSubImage2D","texSubImage3D","compressedTexSubImage2D","texStorage2D","texStorage3D","texImage3D","WebGLTextures","_gl","utils","multisampledRTTExt","supportsInvalidateFramebuffer","navigator","userAgent","_videoTextures","_sources","useOffscreenCanvas","OffscreenCanvas","err","createCanvas","resizeImage","needsPowerOfTwo","needsNewCanvas","maxSize","isPowerOfTwo$1","textureNeedsPowerOfTwo","textureNeedsGenerateMipmaps","supportsMips","generateMipmap","getInternalFormat","internalFormatName","glFormat","glType","getMipLevels","isFramebufferTexture","isCompressedTexture","filterFallback","deallocateTexture","onRenderTargetDispose","deallocateRenderTarget","textureProperties","__webglInit","webglTextures","__cacheKey","deleteTexture","__webglTexture","renderTargetProperties","deleteFramebuffer","__webglFramebuffer","__webglDepthbuffer","deleteRenderbuffer","__webglMultisampledFramebuffer","__webglColorRenderbuffer","__webglDepthRenderbuffer","attachmentProperties","textureUnits","resetTextureUnits","textureUnit","getTextureCacheKey","slot","updateVideoTexture","__version","complete","uploadTexture","uploadCubeTexture","wrappingToGL","filterToGL","setTextureParameters","textureType","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","initTexture","forceUpload","textureCacheKey","__currentVersion","pixelStorei","verifyColorSpace","glInternalFormat","mipmap","useTexStorage","allocateMemory","levels","isDepthTexture","isCompressed","cubeImage","mipmapImage","setupFrameBufferTexture","attachment","textureTarget","__hasExternalTextures","useMultisampledRTT","framebufferTexture2DMultisampleEXT","getRenderTargetSamples","framebufferTexture2D","setupRenderBufferStorage","renderbuffer","isMultisample","bindRenderbuffer","renderbufferStorageMultisampleEXT","renderbufferStorageMultisample","renderbufferStorage","framebufferRenderbuffer","setupDepthTexture","isCube","webglDepthTexture","setupDepthRenderbuffer","__autoAllocateDepthBuffer","createRenderbuffer","rebindTextures","colorTexture","setupRenderTarget","isMultipleRenderTargets","createFramebuffer","glTextureType","updateRenderTargetMipmap","updateMultisampleRenderTarget","invalidationArray","depthStyle","ignoreDepthValues","__ignoreDepthValues","invalidateFramebuffer","blitFramebuffer","__useRenderToTexture","sRGBToLinear","WebGLUtils","HALF_FLOAT_OES","SRGB_ALPHA_EXT","COMPRESSED_SRGB_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_RGB_ETC1_WEBGL","COMPRESSED_SRGB8_ETC2","COMPRESSED_RGB8_ETC2","COMPRESSED_SRGB8_ALPHA8_ETC2_EAC","COMPRESSED_RGBA8_ETC2_EAC","COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR","COMPRESSED_RGBA_ASTC_4x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR","COMPRESSED_RGBA_ASTC_5x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR","COMPRESSED_RGBA_ASTC_5x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR","COMPRESSED_RGBA_ASTC_6x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR","COMPRESSED_RGBA_ASTC_6x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR","COMPRESSED_RGBA_ASTC_8x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR","COMPRESSED_RGBA_ASTC_8x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR","COMPRESSED_RGBA_ASTC_8x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR","COMPRESSED_RGBA_ASTC_10x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR","COMPRESSED_RGBA_ASTC_10x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR","COMPRESSED_RGBA_ASTC_10x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR","COMPRESSED_RGBA_ASTC_10x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR","COMPRESSED_RGBA_ASTC_12x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR","COMPRESSED_RGBA_ASTC_12x12_KHR","COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT","COMPRESSED_RGBA_BPTC_UNORM_EXT","UNSIGNED_INT_24_8_WEBGL","ArrayCamera","cameras","isArrayCamera","Group","isGroup","_moveEvent","WebXRController","_targetRay","_grip","_hand","joints","inputState","pinching","hasLinearVelocity","linearVelocity","hasAngularVelocity","angularVelocity","inputSource","referenceSpace","inputPose","gripPose","handPose","targetRay","grip","hand","visibilityState","getPose","targetRaySpace","transform","inputjoint","jointPose","getJointPose","jointName","joint","jointRadius","indexTip","thumbTip","distanceToPinch","threshold","handedness","gripSpace","DepthTexture","WebXRManager","framebufferScaleFactor","referenceSpaceType","customReferenceSpace","pose","glBinding","glProjLayer","glBaseLayer","xrFrame","getContextAttributes","initialRenderTarget","newRenderTarget","controllers","inputSourcesMap","cameraL","cameraR","cameraVR","_currentDepthNear","_currentDepthFar","cameraAutoUpdate","isPresenting","getController","controller","getTargetRaySpace","getControllerGrip","getGripSpace","getHand","getHandSpace","onSessionEvent","onSessionEnd","forEach","disconnect","setFramebufferScaleFactor","setReferenceSpaceType","getReferenceSpace","setReferenceSpace","space","getBaseLayer","getBinding","getFrame","setSession","onInputSourcesChange","xrCompatible","makeXRCompatible","layerInit","antialias","XRWebGLLayer","updateRenderState","baseLayer","framebufferWidth","framebufferHeight","depthFormat","depthType","glDepthFormat","projectionlayerInit","colorFormat","XRWebGLBinding","createProjectionLayer","textureWidth","textureHeight","setFoveation","requestReferenceSpace","inputSources","removed","added","cameraLPos","cameraRPos","setProjectionFromUnion","ipd","projL","projR","topFov","bottomFov","leftFov","rightFov","zOffset","xOffset","translateX","translateZ","near2","far2","left2","right2","top2","bottom2","updateCamera","depthNear","depthFar","getCamera","getFoveation","fixedFoveation","foveation","onAnimationFrameCallback","getViewerPose","views","setRenderTargetFramebuffer","cameraVRNeedsUpdate","glSubImage","getViewSubImage","setRenderTargetTextures","depthStencilTexture","WebGLMaterials","refreshFogUniforms","isFog","density","refreshMaterialUniforms","pixelRatio","transmissionRenderTarget","refreshUniformsCommon","isMeshLambertMaterial","isMeshToonMaterial","refreshUniformsToon","isMeshPhongMaterial","refreshUniformsPhong","refreshUniformsStandard","isMeshPhysicalMaterial","refreshUniformsPhysical","isMeshMatcapMaterial","refreshUniformsMatcap","refreshUniformsDistance","isMeshNormalMaterial","isLineBasicMaterial","refreshUniformsLine","isLineDashedMaterial","refreshUniformsDash","isPointsMaterial","refreshUniformsPoints","isSpriteMaterial","refreshUniformsSprites","isShadowMaterial","uvScaleMap","uv2ScaleMap","createCanvasElement","display","WebGLRenderer","_context","_depth","_stencil","_antialias","_premultipliedAlpha","_preserveDrawingBuffer","preserveDrawingBuffer","_powerPreference","powerPreference","_failIfMajorPerformanceCaveat","failIfMajorPerformanceCaveat","_alpha","currentRenderList","currentRenderState","renderListStack","renderStateStack","domElement","sortObjects","toneMappingExposure","_this","_isContextLost","_currentActiveCubeFace","_currentActiveMipmapLevel","_currentRenderTarget","_currentMaterialId","_currentCamera","_currentViewport","_currentScissor","_currentScissorTest","_width","_height","_pixelRatio","_opaqueSort","_transparentSort","_scissor","_scissorTest","_clippingEnabled","_localClippingEnabled","_transmissionRenderTarget","_projScreenMatrix","_vector3","_emptyScene","overrideMaterial","getTargetPixelRatio","contextNames","contextAttributes","contextName","onContextLost","onContextRestore","isWebGL1Renderer","shift","message","programCache","renderLists","morphtargets","bufferRenderer","indexedBufferRenderer","initGLContext","forceContextLoss","loseContext","forceContextRestore","restoreContext","getPixelRatio","setPixelRatio","setSize","updateStyle","setViewport","getDrawingBufferSize","setDrawingBufferSize","getCurrentViewport","getScissor","setScissor","getScissorTest","boolean","setOpaqueSort","method","setTransparentSort","bits","onXRSessionStart","onXRSessionEnd","preventDefault","infoAutoReset","shadowMapAutoUpdate","shadowMapNeedsUpdate","onMaterialDispose","deallocateMaterial","releaseMaterialProgramReferences","setProgram","rangeFactor","dataCount","rangeStart","rangeCount","drawStart","drawEnd","drawCount","isLineSegments","isLineLoop","isSprite","material2","getProgram","self","setFromProjectionMatrix","projectObject","camera2","renderScene","onAfterRender","isLOD","intersectsSprite","opaqueObjects","transmissiveObjects","transparentObjects","renderTransmissionPass","renderObjects","lightsStateVersion","programCacheKey","updateCommonMaterialProperties","onBuild","needsLights","materialNeedsLights","progUniforms","uniformsList","needsProgramChange","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","uCamPos","cameraPosition","boneTexture","computeBoneTexture","boneTextureSize","markUniformsLightsNeedsUpdate","defaultFramebuffer","__useDefaultFramebuffer","useDefaultFramebuffer","isRenderTarget3D","framebufferBound","layer","framebufferTextureLayer","readRenderTargetPixels","activeCubeFaceIndex","textureFormat","halfFloatSupportedByExt","readPixels","copyFramebufferToTexture","level","levelScale","copyTexSubImage2D","copyTextureToTexture","srcTexture","dstTexture","copyTextureToTexture3D","sourceBox","glTarget","unpackRowLen","unpackImageHeight","unpackSkipPixels","unpackSkipRows","unpackSkipImages","compressedTexSubImage3D","resetState","__THREE_DEVTOOLS__","CustomEvent","detail","isWebGLRenderer","WebGL1Renderer","FogExp2","Fog","Scene","InterleavedBuffer","arrayBuffers","_uuid","ib","setUsage","isInterleavedBuffer","_vector$6","InterleavedBufferAttribute","interleavedBuffer","interleavedBuffers","_geometry","_intersectPoint","_worldScale","_mvPosition","_alignedPosition","_rotatedPosition","_viewWorldMatrix","_vA","_vB","_vC","_uvA","_uvB","_uvC","Sprite","float32Array","setFromMatrixScale","transformVertex","vertexPosition","mvPosition","_v1$2","_v2$1","LOD","_currentLevel","addLevel","getObjectForDistance","raycast","_basePosition","_skinIndex","_skinWeight","_vector$5","_matrix","SkinnedMesh","bindMatrixInverse","calculateInverses","skinWeight","manhattanLength","setXYZW","skinIndex","getComponent","boneIndex","bones","boneInverses","Bone","isBone","DataTexture","_offsetMatrix","_identityMatrix","Skeleton","boneMatrices","inverse","bone","json","boneInverse","InstancedBufferAttribute","_instanceLocalMatrix","_instanceWorldMatrix","_instanceIntersects","_mesh","InstancedMesh","raycastTimes","instanceId","getMatrixAt","linecap","linejoin","_start$1","_end$1","_inverseMatrix$1","_ray$1","_sphere$1","Line","lineDistances","localThreshold","localThresholdSq","vStart","vEnd","interSegment","interRay","distSq","distanceSqToSegment","_start","_end","LineSegments","LineLoop","_inverseMatrix","_ray","_sphere","_position$2","Points","testPoint","rayPointDistanceSq","intersectPoint","closestPointToPoint","distanceToRay","VideoTexture","video","updateVideo","requestVideoFrameCallback","hasVideoFrameCallback","readyState","HAVE_CURRENT_DATA","FramebufferTexture","CompressedTexture","CanvasTexture","isCanvasTexture","Curve","arcLengthDivisions","optionalTarget","getUtoTmapping","getPoint","divisions","getPointAt","lengths","getLengths","cacheArcLengths","current","last","arcLengths","targetArcLength","comparison","lengthBefore","lengthAfter","segmentLength","segmentFraction","t2","pt1","pt2","getTangent","segments","closed","binormals","vec","mat","getTangentAt","MAX_VALUE","tz","makeRotationAxis","EllipseCurve","aX","aY","xRadius","yRadius","aStartAngle","aEndAngle","aClockwise","aRotation","twoPi","deltaAngle","samePoints","isEllipseCurve","ArcCurve","aRadius","isArcCurve","CubicPoly","c0","initCatmullRom","x3","tension","initNonuniformCatmullRom","dt0","dt1","dt2","calc","t3","px","py","pz","CatmullRomCurve3","curveType","intPoint","isCatmullRomCurve3","CatmullRom","QuadraticBezierP0","QuadraticBezierP1","QuadraticBezierP2","QuadraticBezier","CubicBezierP0","CubicBezierP1","CubicBezierP2","CubicBezierP3","CubicBezier","CubicBezierCurve","v3","isCubicBezierCurve","CubicBezierCurve3","isCubicBezierCurve3","LineCurve","isLineCurve","LineCurve3","isLineCurve3","QuadraticBezierCurve","isQuadraticBezierCurve","QuadraticBezierCurve3","isQuadraticBezierCurve3","SplineCurve","isSplineCurve","Curves","CurvePath","curves","autoClose","curve","startPoint","endPoint","getLength","curveLengths","getCurveLengths","diff","lens","cacheLengths","sums","pts","getPoints","fromJSON","Path","currentPoint","moveTo","lineTo","aCPx","aCPy","aCP1x","aCP1y","aCP2x","aCP2y","npts","concat","absarc","absellipse","firstPoint","lastPoint","LatheGeometry","phiStart","phiLength","initNormals","inverseSegments","curNormal","prevNormal","base","CapsuleGeometry","capSegments","radialSegments","CircleGeometry","thetaStart","thetaLength","segment","CylinderGeometry","radiusTop","radiusBottom","openEnded","indexArray","generateTorso","generateCap","slope","indexRow","sinTheta","cosTheta","centerIndexStart","centerIndexEnd","ConeGeometry","PolyhedronGeometry","vertexBuffer","uvBuffer","subdivide","applyRadius","generateUVs","computeVertexNormals","getVertexByIndex","subdivideFace","cols","aj","bj","rows","pushVertex","azimuth","inclination","correctUVs","correctSeam","centroid","azi","correctUV","details","DodecahedronGeometry","_v0","_v1$1","_normal","_triangle","EdgesGeometry","thresholdAngle","precisionPoints","thresholdDot","indexAttr","getIndex","positionAttr","indexCount","indexArr","vertKeys","hashes","edgeData","jNext","vecHash0","vecHash1","reverseHash","index0","Shape","holes","holesPts","getPointsHoles","hole","Earcut","triangulate","holeIndices","dim","hasHoles","outerLen","outerNode","linkedList","prev","invSize","eliminateHoles","earcutLinked","clockwise","signedArea","insertNode","removeNode","filterPoints","again","steiner","area","ear","pass","indexCurve","isEarHashed","isEar","cureLocalIntersections","splitEarcut","pointInTriangle","minTX","minTY","maxTX","maxTY","zOrder","prevZ","nextZ","locallyInside","isValidDiagonal","splitPolygon","queue","getLeftmost","compareX","eliminateHole","findHoleBridge","hx","hy","mx","my","tanMin","sectorContainsSector","sortLinked","tail","numMerges","pSize","qSize","inSize","leftmost","intersectsPolygon","middleInside","q1","q2","o1","o2","o3","o4","onSegment","num","inside","Node","an","bp","ShapeUtils","contour","faces","removeDupEndPts","addContour","holeIndex","ExtrudeGeometry","verticesArray","uvArray","addShape","placeholder","curveSegments","steps","bevelEnabled","bevelThickness","bevelSize","bevelOffset","bevelSegments","extrudePath","uvgen","UVGenerator","WorldUVGenerator","amount","extrudePts","extrudeByPath","splineTube","binormal","position2","getSpacedPoints","computeFrenetFrames","shapePoints","extractPoints","reverse","isClockWise","hl","ahole","triangulateShape","scalePt2","pt","vlen","flen","getBevelVec","inPt","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","ptNextShift_x","ptNextShift_y","sf","v_trans_lensq","direction_eq","contourMovements","holesMovements","oneHoleMovements","verticesMovements","bs","vert","buildLidFaces","buildSideFaces","f3","layeroffset","sidewalls","sl","slen1","slen2","f4","addVertex","nextIndex","generateTopUV","addUV","generateSideWallUV","vector2","toJSON$1","geometryShapes","indexA","indexB","indexC","a_x","a_y","b_x","b_y","c_x","c_y","indexD","a_z","b_z","c_z","d_x","d_y","d_z","IcosahedronGeometry","OctahedronGeometry","RingGeometry","innerRadius","outerRadius","thetaSegments","phiSegments","radiusStep","thetaSegmentLevel","ShapeGeometry","indexOffset","shapeVertices","shapeHoles","shapeHole","SphereGeometry","thetaEnd","grid","verticesRow","uOffset","TetrahedronGeometry","TorusGeometry","tube","tubularSegments","arc","TorusKnotGeometry","P1","P2","B","T","N","calculatePositionOnCurve","cu","su","quOverP","cs","TubeGeometry","frames","P","generateBufferData","generateSegment","generateIndices","WireframeGeometry","edges","o","ol","isUniqueEdge","hash1","hash2","Geometries","BoxBufferGeometry","CapsuleBufferGeometry","CircleBufferGeometry","ConeBufferGeometry","CylinderBufferGeometry","DodecahedronBufferGeometry","ExtrudeBufferGeometry","IcosahedronBufferGeometry","LatheBufferGeometry","OctahedronBufferGeometry","PlaneBufferGeometry","PolyhedronBufferGeometry","RingBufferGeometry","ShapeBufferGeometry","SphereBufferGeometry","TetrahedronBufferGeometry","TorusBufferGeometry","TorusKnotBufferGeometry","TubeBufferGeometry","RawShaderMaterial","_sheen","_clearcoat","_transmission","materialLib","AnimationUtils","arraySlice","isTypedArray","convertArray","forceClone","ArrayBuffer","isView","DataView","getKeyframeOrder","times","compareTime","sortedArray","nValues","srcOffset","flattenJSON","jsonKeys","valuePropertyName","subclip","sourceClip","startFrame","endFrame","fps","clip","tracks","track","valueSize","getValueSize","minStartTime","resetDuration","makeClipAdditive","targetClip","referenceFrame","referenceClip","numTracks","referenceTime","referenceTrack","referenceTrackType","ValueTypeName","targetTrack","find","referenceOffset","referenceValueSize","createInterpolant","isInterpolantFactoryMethodGLTFCubicSpline","targetOffset","targetValueSize","referenceValue","startIndex","endIndex","interpolant","evaluate","resultBuffer","referenceQuat","numTimes","valueStart","multiplyQuaternionsFlat","valueEnd","blendMode","Interpolant","parameterPositions","sampleValues","sampleSize","_cachedIndex","settings","DefaultSettings_","pp","validate_interval","seek","linear_scan","forward_scan","giveUpAt","afterEnd_","t1global","beforeStart_","mid","intervalChanged_","interpolate_","copySampleValue_","CubicInterpolant","_weightPrev","_offsetPrev","_weightNext","_offsetNext","endingStart","endingEnd","iPrev","iNext","tPrev","tNext","getSettings_","halfDt","o0","oP","oN","wP","wN","ppp","sP","sN","LinearInterpolant","offset1","offset0","weight1","weight0","DiscreteInterpolant","KeyframeTrack","interpolation","TimeBufferType","ValueBufferType","setInterpolation","DefaultInterpolation","factoryMethod","InterpolantFactoryMethodDiscrete","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","timeOffset","timeScale","startTime","endTime","nKeys","valid","prevTime","currTime","smoothInterpolation","getInterpolation","writeIndex","keep","timeNext","offsetP","offsetN","readOffset","writeOffset","TypedKeyframeTrack","trackType","BooleanKeyframeTrack","ColorKeyframeTrack","NumberKeyframeTrack","QuaternionLinearInterpolant","slerpFlat","QuaternionKeyframeTrack","StringKeyframeTrack","VectorKeyframeTrack","AnimationClip","duration","validate","optimize","jsonTracks","frameTime","parseKeyframeTrack","clipTracks","morphTargetSequence","noLoop","numMorphTargets","objectOrClipArray","clipArray","animationToMorphTargets","pattern","parts","animationMorphTargets","clips","CreateFromMorphTargetSequence","addNonemptyTrack","trackName","animationKeys","propertyName","destTracks","clipName","hierarchyTracks","hierarchy","morphTargetNames","morphTargetName","animationKey","boneName","getTrackTypeForValueTypeName","typeName","Cache","files","file","LoadingManager","onLoad","onProgress","onError","isLoading","itemsLoaded","itemsTotal","urlModifier","handlers","onStart","itemStart","itemEnd","itemError","resolveURL","setURLModifier","addHandler","regex","loader","removeHandler","getHandler","global","DefaultLoadingManager","Loader","manager","crossOrigin","withCredentials","resourcePath","requestHeader","Promise","resolve","reject","load","loading","FileLoader","setTimeout","req","Request","headers","Headers","credentials","mimeType","responseType","fetch","then","response","ReadableStream","body","getReader","callbacks","reader","contentLength","total","lengthComputable","loaded","stream","readData","read","done","close","byteLength","ProgressEvent","enqueue","Response","statusText","arrayBuffer","blob","text","parser","DOMParser","parseFromString","re","label","decoder","TextDecoder","decode","catch","finally","AnimationLoader","setPath","setRequestHeader","setWithCredentials","CompressedTextureLoader","setResponseType","loadTexture","texDatas","mipmapCount","isCubemap","ImageLoader","onImageLoad","removeEventListeners","onImageError","CubeTextureLoader","urls","setCrossOrigin","DataTextureLoader","texData","TextureLoader","Light","HemisphereLight","_projScreenMatrix$1","_lightPositionWorld$1","_lookTarget$1","LightShadow","_frameExtents","_viewportCount","_viewports","shadowMatrix","viewportIndex","SpotLightShadow","isSpotLightShadow","SpotLight","power","_lightPositionWorld","_lookTarget","PointLightShadow","_cubeDirections","_cubeUps","PointLight","DirectionalLightShadow","isDirectionalLightShadow","DirectionalLight","AmbientLight","RectAreaLight","SphericalHarmonics3","coeff","shBasis","isSphericalHarmonics3","LightProbe","MaterialLoader","getTexture","shading","LoaderUtils","fromCharCode","decodeURIComponent","escape","lastIndexOf","InstancedBufferGeometry","BufferGeometryLoader","interleavedBufferMap","arrayBufferMap","getInterleavedBuffer","getArrayBuffer","typedArray","bufferAttribute","bufferAttributeConstr","drawcalls","offsets","ObjectLoader","extractUrlBase","loadAsync","parseAsync","parseAnimations","parseShapes","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","parseSkeletons","bindSkeletons","hasImages","parseImagesAsync","bufferGeometryLoader","setTextures","loadImage","deserializeImage","imageArray","currentUrl","deserializedImage","parseConstant","TEXTURE_MAPPING","TEXTURE_WRAPPING","TEXTURE_FILTER","getGeometry","getMaterial","isInteger","objectAnimations","bind","setResourcePath","ImageBitmapLoader","createImageBitmap","fetchOptions","res","colorSpaceConversion","imageBitmap","isImageBitmapLoader","AudioContext","window","webkitAudioContext","AudioLoader","bufferCopy","decodeAudioData","audioBuffer","HemisphereLightProbe","sky","ground","isHemisphereLightProbe","AmbientLightProbe","isAmbientLightProbe","_eyeRight","_eyeLeft","_projectionMatrix","StereoCamera","eyeSep","_cache","eyeSepHalf","eyeSepOnProjection","ymax","xmin","xmax","Clock","autoStart","oldTime","elapsedTime","running","now","getElapsedTime","getDelta","newTime","performance","Date","_position$1","_quaternion$1","_scale$1","_orientation$1","AudioListener","gain","createGain","connect","destination","timeDelta","_clock","setTargetAtTime","currentTime","positionX","linearRampToValueAtTime","positionY","positionZ","forwardX","forwardY","forwardZ","upX","upY","upZ","setPosition","setOrientation","Audio","getInput","autoplay","detune","loop","loopStart","loopEnd","playbackRate","isPlaying","hasPlaybackControl","sourceType","_startedAt","_progress","_connected","filters","audioNode","mediaElement","createMediaElementSource","mediaStream","createMediaStreamSource","play","delay","createBufferSource","onended","onEnded","setDetune","setPlaybackRate","getOutput","getFilters","setFilters","_position","_quaternion","_scale","_orientation","PositionalAudio","panner","createPanner","panningModel","refDistance","rolloffFactor","distanceModel","maxDistance","coneInnerAngle","coneOuterAngle","coneOuterGain","orientationX","orientationY","orientationZ","AudioAnalyser","audio","fftSize","analyser","createAnalyser","frequencyBinCount","getByteFrequencyData","getFrequencyData","PropertyMixer","binding","mixFunction","mixFunctionAdditive","setIdentity","_slerp","_slerpAdditive","_setAdditiveIdentityQuaternion","_workIndex","_select","_setAdditiveIdentityOther","_lerp","_lerpAdditive","_setAdditiveIdentityNumeric","_mixBufferRegion","_mixBufferRegionAdditive","_setIdentity","_origIndex","_addIndex","cumulativeWeight","cumulativeWeightAdditive","useCount","referenceCount","accuIndex","currentWeight","mix","weightAdditive","originalValueOffset","getValue","targetIndex","workOffset","_RESERVED_CHARS_RE","_reservedRe","RegExp","_wordChar","_wordCharOrDot","_directoryRe","_nodeRe","_objectRe","_propertyRe","_trackRe","_supportedObjectNames","Composite","targetGroup","optionalParsedPath","parsedPath","PropertyBinding","parseTrackName","_targetGroup","_bindings","subscribe_","firstValidIndex","nCachedObjects_","bindings","unbind","rootNode","node","findNode","nodeName","_getValue_unbound","_setValue_unbound","targetObject","resolvedProperty","propertyIndex","dest","targetArray","sourceArray","objectName","_getValue_unavailable","_setValue_unavailable","objectIndex","nodeProperty","versioning","Versioning","None","NeedsUpdate","MatrixWorldNeedsUpdate","bindingType","BindingType","Direct","ArrayElement","HasFromToArray","EntireArray","GetterByBindingType","SetterByBindingTypeAndVersioning","root","isAnimationObjectGroup","matches","results","lastDot","substring","getBoneByName","searchNodeSubtree","childNode","subTreeNode","_getValue_direct","_getValue_array","_getValue_arrayElement","_getValue_toArray","_setValue_direct","_setValue_direct_setNeedsUpdate","_setValue_direct_setMatrixWorldNeedsUpdate","_setValue_array","_setValue_array_setNeedsUpdate","_setValue_array_setMatrixWorldNeedsUpdate","_setValue_arrayElement","_setValue_arrayElement_setNeedsUpdate","_setValue_arrayElement_setMatrixWorldNeedsUpdate","_setValue_fromArray","_setValue_fromArray_setNeedsUpdate","_setValue_fromArray_setMatrixWorldNeedsUpdate","AnimationObjectGroup","_indicesByUUID","_paths","_parsedPaths","_bindingsIndicesByPath","stats","inUse","bindingsPerObject","indicesByUUID","paths","parsedPaths","nBindings","knownObject","nObjects","nCachedObjects","firstActiveIndex","lastCachedObject","bindingsForPath","lastCached","lastCachedIndex","firstActiveObject","firstActive","lastObject","indicesByPath","lastBindingsIndex","lastBindings","lastBindingsPath","AnimationAction","mixer","localRoot","_mixer","_clip","_localRoot","nTracks","interpolants","interpolantSettings","_interpolantSettings","_interpolants","_propertyBindings","_cacheIndex","_byClipCacheIndex","_timeScaleInterpolant","_weightInterpolant","_loopCount","_startTime","_effectiveTimeScale","_effectiveWeight","repetitions","paused","clampWhenFinished","zeroSlopeAtStart","zeroSlopeAtEnd","_activateAction","_deactivateAction","stopFading","stopWarping","_isActiveAction","_scheduleFading","fadeOutAction","warp","fadeOut","fadeIn","fadeInDuration","fadeOutDuration","startEndRatio","endStartRatio","fadeInAction","crossFadeFrom","weightInterpolant","_takeBackControlInterpolant","action","startTimeScale","endTimeScale","_lendControlInterpolant","timeScaleInterpolant","_root","deltaTime","timeDirection","_updateWeight","timeRunning","_updateTimeScale","clipTime","_updateTime","propertyMixers","accumulateAdditive","accumulate","interpolantValue","loopCount","pingPong","_setEndings","handle_stop","loopDelta","pending","atStart","atEnd","weightNow","weightThen","AnimationMixer","_initMemoryManager","_accuIndex","prototypeAction","rootUuid","bindingsByRoot","_bindingsByRootAndName","bindingsByName","_addInactiveBinding","create","clipUuid","actionsForClip","_actionsByClip","_bindAction","knownActions","_addInactiveAction","_lendBinding","saveOriginalState","_lendAction","restoreOriginalState","_takeBackBinding","_takeBackAction","_actions","_nActiveActions","_nActiveBindings","_controlInterpolants","_nActiveControlInterpolants","actions","controlInterpolants","actionsByClip","actionByRoot","lastInactiveAction","cacheIndex","knownActionsForClip","lastKnownAction","byClipCacheIndex","_removeInactiveBindingsForAction","_removeInactiveBinding","prevIndex","lastActiveIndex","firstInactiveAction","firstInactiveIndex","lastActiveAction","bindingByName","propBinding","lastInactiveBinding","firstInactiveBinding","lastActiveBinding","_controlInterpolantsResultBuffer","__cacheIndex","lastActiveInterpolant","optionalRoot","clipObject","findByName","existingAction","newAction","nActions","_update","timeInSeconds","actionsToRemove","_removeInactiveAction","Uniform","InstancedInterleavedBuffer","GLBufferAttribute","Raycaster","coords","unproject","intersectObject","ascSort","Spherical","other","EPS","setFromCartesianCoords","Cylindrical","_vector$4","Box2","isBox2","_startP","_startEnd","Line3","clampToLine","startEnd2","startEnd_startP","closestPointToPointParameter","_vector$3","SpotLightHelper","cone","coneLength","coneWidth","_vector$2","_boneMatrix","_matrixWorldInv","SkeletonHelper","getBoneList","isSkeletonHelper","boneList","PointLightHelper","sphereSize","_vector$1","_color1","_color2","HemisphereLightHelper","rotateY","GridHelper","PolarGridHelper","radials","circles","_v1","_v2","_v3","DirectionalLightHelper","lightPlane","targetLine","_vector","_camera","CameraHelper","pointMap","colorFrustum","colorCone","colorUp","colorTarget","colorCross","addLine","addPoint","setPoint","_box","BoxHelper","setFromObject","Box3Helper","PlaneHelper","positions2","_axis","_lineGeometry","_coneGeometry","ArrowHelper","headLength","headWidth","setDirection","setLength","AxesHelper","xAxisColor","yAxisColor","zAxisColor","ShapePath","subPaths","currentPath","quadraticCurveTo","bezierCurveTo","splineThru","isCCW","noHoles","toShapesNoHoles","inSubpaths","tmpPath","tmpShape","isPointInsidePolygon","inPolygon","polyLen","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","solid","holesFirst","betterShapeHoles","newShapes","newShapeHoles","mainIdx","tmpPoints","ambiguous","toChange","sIdx","sLen","sho","hIdx","ho","hole_unassigned","s2Idx","tmpHoles","DataUtils","val","_floatView","_uint32View","_baseTable","_shiftTable","_mantissaTable","_offsetTable","_exponentTable","_buffer","LineStrip","LinePieces","NoColors","FaceColors","VertexColors","MeshFaceMaterial","MultiMaterial","isMultiMaterial","PointCloud","Particle","ParticleSystem","PointCloudMaterial","ParticleBasicMaterial","ParticleSystemMaterial","Vertex","DynamicBufferAttribute","Int8Attribute","Uint8Attribute","Uint8ClampedAttribute","Int16Attribute","Uint16Attribute","Int32Attribute","Uint32Attribute","Float32Attribute","Float64Attribute","construct","fromPoints","AxisHelper","BoundingBoxHelper","EdgesHelper","setColors","WireframeHelper","Handlers","XHRLoader","BinaryTextureLoader","empty","isIntersectionBox","isIntersectionSphere","toVector3","setFromMatrix","flattenToArrayOffset","multiplyVector3","multiplyVector3Array","applyToBufferAttribute","applyToVector3Array","getInverse","extractPosition","getPosition","setRotationFromQuaternion","multiplyToArray","multiplyVector4","rotateAxis","crossVector","rotateX","rotateZ","rotateByAxis","makeFrustum","isIntersectionLine","intersectsLine","isIntersectionPlane","getArea","barycoordFromPoint","midpoint","getMidpoint","prototypenormal","getPlane","extractAllPoints","extrude","makeGeometry","fromAttribute","distanceToManhattan","manhattanDistanceTo","lengthManhattan","setEulerFromRotationMatrix","setEulerFromQuaternion","getPositionFromMatrix","getScaleFromMatrix","getColumnFromMatrix","applyProjection","getChildByName","getObjectByName","renderDepth","getWorldRotation","applyMatrix","eulerOrder","useQuaternion","setDrawMode","drawMode","initBones","setLens","setFocalLength","onlyShadow","shadowCameraFov","shadowCameraLeft","shadowCameraRight","shadowCameraTop","shadowCameraBottom","shadowCameraVisible","shadowDarkness","shadowMapWidth","shadowMapHeight","dynamic","setDynamic","copyIndicesArray","setArray","addIndex","addAttribute","addDrawCall","clearDrawCalls","clearGroups","computeOffsets","removeAttribute","getArrays","addShapeList","wrapAround","overdraw","wrapRGB","clearTarget","animate","getCurrentRenderTarget","getPrecision","resetGLState","supportsFloatTextures","supportsHalfFloatTextures","supportsStandardDerivatives","supportsCompressedTextureS3TC","supportsCompressedTexturePVRTC","supportsBlendMinMax","supportsInstancedArrays","enableScissorTest","initMaterial","addPrePlugin","addPostPlugin","updateShadowMap","setFaceCulling","allocTextureUnit","setTexture","getActiveMipMapLevel","shadowMapCullFace","vr","gammaInput","gammaOutput","toneMappingWhitePoint","gammaFactor","renderReverseSided","renderSingleSided","WebGLRenderTargetCube","audioLoader","setBuffer","getData","updateCubeMap","loadTextureCube","loadCompressedTexture","loadCompressedTextureCube","CanvasRenderer","JSONLoader","SceneUtils","createMultiMaterialObject","detach","attach","LensFlare","ParametricGeometry","TextGeometry","FontLoader","Font","ImmediateRenderObject","WebGLMultisampleRenderTarget","DataTexture2DArray","DataTexture3D","revision","__THREE__","Sketch","THREE","innerWidth","innerHeight","getElementById","appendChild","addMesh"],"mappings":"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","file":"app.c328ef1a.js","sourceRoot":"..","sourcesContent":["/**\n * @license\n * Copyright 2010-2022 Three.js Authors\n * SPDX-License-Identifier: MIT\n */\nconst REVISION = '140';\nconst MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2, ROTATE: 0, DOLLY: 1, PAN: 2 };\nconst TOUCH = { ROTATE: 0, PAN: 1, DOLLY_PAN: 2, DOLLY_ROTATE: 3 };\nconst CullFaceNone = 0;\nconst CullFaceBack = 1;\nconst CullFaceFront = 2;\nconst CullFaceFrontBack = 3;\nconst BasicShadowMap = 0;\nconst PCFShadowMap = 1;\nconst PCFSoftShadowMap = 2;\nconst VSMShadowMap = 3;\nconst FrontSide = 0;\nconst BackSide = 1;\nconst DoubleSide = 2;\nconst FlatShading = 1;\nconst SmoothShading = 2;\nconst NoBlending = 0;\nconst NormalBlending = 1;\nconst AdditiveBlending = 2;\nconst SubtractiveBlending = 3;\nconst MultiplyBlending = 4;\nconst CustomBlending = 5;\nconst AddEquation = 100;\nconst SubtractEquation = 101;\nconst ReverseSubtractEquation = 102;\nconst MinEquation = 103;\nconst MaxEquation = 104;\nconst ZeroFactor = 200;\nconst OneFactor = 201;\nconst SrcColorFactor = 202;\nconst OneMinusSrcColorFactor = 203;\nconst SrcAlphaFactor = 204;\nconst OneMinusSrcAlphaFactor = 205;\nconst DstAlphaFactor = 206;\nconst OneMinusDstAlphaFactor = 207;\nconst DstColorFactor = 208;\nconst OneMinusDstColorFactor = 209;\nconst SrcAlphaSaturateFactor = 210;\nconst NeverDepth = 0;\nconst AlwaysDepth = 1;\nconst LessDepth = 2;\nconst LessEqualDepth = 3;\nconst EqualDepth = 4;\nconst GreaterEqualDepth = 5;\nconst GreaterDepth = 6;\nconst NotEqualDepth = 7;\nconst MultiplyOperation = 0;\nconst MixOperation = 1;\nconst AddOperation = 2;\nconst NoToneMapping = 0;\nconst LinearToneMapping = 1;\nconst ReinhardToneMapping = 2;\nconst CineonToneMapping = 3;\nconst ACESFilmicToneMapping = 4;\nconst CustomToneMapping = 5;\n\nconst UVMapping = 300;\nconst CubeReflectionMapping = 301;\nconst CubeRefractionMapping = 302;\nconst EquirectangularReflectionMapping = 303;\nconst EquirectangularRefractionMapping = 304;\nconst CubeUVReflectionMapping = 306;\nconst RepeatWrapping = 1000;\nconst ClampToEdgeWrapping = 1001;\nconst MirroredRepeatWrapping = 1002;\nconst NearestFilter = 1003;\nconst NearestMipmapNearestFilter = 1004;\nconst NearestMipMapNearestFilter = 1004;\nconst NearestMipmapLinearFilter = 1005;\nconst NearestMipMapLinearFilter = 1005;\nconst LinearFilter = 1006;\nconst LinearMipmapNearestFilter = 1007;\nconst LinearMipMapNearestFilter = 1007;\nconst LinearMipmapLinearFilter = 1008;\nconst LinearMipMapLinearFilter = 1008;\nconst UnsignedByteType = 1009;\nconst ByteType = 1010;\nconst ShortType = 1011;\nconst UnsignedShortType = 1012;\nconst IntType = 1013;\nconst UnsignedIntType = 1014;\nconst FloatType = 1015;\nconst HalfFloatType = 1016;\nconst UnsignedShort4444Type = 1017;\nconst UnsignedShort5551Type = 1018;\nconst UnsignedInt248Type = 1020;\nconst AlphaFormat = 1021;\nconst RGBFormat = 1022;\nconst RGBAFormat = 1023;\nconst LuminanceFormat = 1024;\nconst LuminanceAlphaFormat = 1025;\nconst DepthFormat = 1026;\nconst DepthStencilFormat = 1027;\nconst RedFormat = 1028;\nconst RedIntegerFormat = 1029;\nconst RGFormat = 1030;\nconst RGIntegerFormat = 1031;\nconst RGBAIntegerFormat = 1033;\n\nconst RGB_S3TC_DXT1_Format = 33776;\nconst RGBA_S3TC_DXT1_Format = 33777;\nconst RGBA_S3TC_DXT3_Format = 33778;\nconst RGBA_S3TC_DXT5_Format = 33779;\nconst RGB_PVRTC_4BPPV1_Format = 35840;\nconst RGB_PVRTC_2BPPV1_Format = 35841;\nconst RGBA_PVRTC_4BPPV1_Format = 35842;\nconst RGBA_PVRTC_2BPPV1_Format = 35843;\nconst RGB_ETC1_Format = 36196;\nconst RGB_ETC2_Format = 37492;\nconst RGBA_ETC2_EAC_Format = 37496;\nconst RGBA_ASTC_4x4_Format = 37808;\nconst RGBA_ASTC_5x4_Format = 37809;\nconst RGBA_ASTC_5x5_Format = 37810;\nconst RGBA_ASTC_6x5_Format = 37811;\nconst RGBA_ASTC_6x6_Format = 37812;\nconst RGBA_ASTC_8x5_Format = 37813;\nconst RGBA_ASTC_8x6_Format = 37814;\nconst RGBA_ASTC_8x8_Format = 37815;\nconst RGBA_ASTC_10x5_Format = 37816;\nconst RGBA_ASTC_10x6_Format = 37817;\nconst RGBA_ASTC_10x8_Format = 37818;\nconst RGBA_ASTC_10x10_Format = 37819;\nconst RGBA_ASTC_12x10_Format = 37820;\nconst RGBA_ASTC_12x12_Format = 37821;\nconst RGBA_BPTC_Format = 36492;\nconst LoopOnce = 2200;\nconst LoopRepeat = 2201;\nconst LoopPingPong = 2202;\nconst InterpolateDiscrete = 2300;\nconst InterpolateLinear = 2301;\nconst InterpolateSmooth = 2302;\nconst ZeroCurvatureEnding = 2400;\nconst ZeroSlopeEnding = 2401;\nconst WrapAroundEnding = 2402;\nconst NormalAnimationBlendMode = 2500;\nconst AdditiveAnimationBlendMode = 2501;\nconst TrianglesDrawMode = 0;\nconst TriangleStripDrawMode = 1;\nconst TriangleFanDrawMode = 2;\nconst LinearEncoding = 3000;\nconst sRGBEncoding = 3001;\nconst BasicDepthPacking = 3200;\nconst RGBADepthPacking = 3201;\nconst TangentSpaceNormalMap = 0;\nconst ObjectSpaceNormalMap = 1;\n\n// Color space string identifiers, matching CSS Color Module Level 4 and WebGPU names where available.\nconst NoColorSpace = '';\nconst SRGBColorSpace = 'srgb';\nconst LinearSRGBColorSpace = 'srgb-linear';\n\nconst ZeroStencilOp = 0;\nconst KeepStencilOp = 7680;\nconst ReplaceStencilOp = 7681;\nconst IncrementStencilOp = 7682;\nconst DecrementStencilOp = 7683;\nconst IncrementWrapStencilOp = 34055;\nconst DecrementWrapStencilOp = 34056;\nconst InvertStencilOp = 5386;\n\nconst NeverStencilFunc = 512;\nconst LessStencilFunc = 513;\nconst EqualStencilFunc = 514;\nconst LessEqualStencilFunc = 515;\nconst GreaterStencilFunc = 516;\nconst NotEqualStencilFunc = 517;\nconst GreaterEqualStencilFunc = 518;\nconst AlwaysStencilFunc = 519;\n\nconst StaticDrawUsage = 35044;\nconst DynamicDrawUsage = 35048;\nconst StreamDrawUsage = 35040;\nconst StaticReadUsage = 35045;\nconst DynamicReadUsage = 35049;\nconst StreamReadUsage = 35041;\nconst StaticCopyUsage = 35046;\nconst DynamicCopyUsage = 35050;\nconst StreamCopyUsage = 35042;\n\nconst GLSL1 = '100';\nconst GLSL3 = '300 es';\n\nconst _SRGBAFormat = 1035; // fallback for WebGL 1\n\n/**\n * https://github.com/mrdoob/eventdispatcher.js/\n */\n\nclass EventDispatcher {\n\n\taddEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) this._listeners = {};\n\n\t\tconst listeners = this._listeners;\n\n\t\tif ( listeners[ type ] === undefined ) {\n\n\t\t\tlisteners[ type ] = [];\n\n\t\t}\n\n\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\n\n\t\t\tlisteners[ type ].push( listener );\n\n\t\t}\n\n\t}\n\n\thasEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return false;\n\n\t\tconst listeners = this._listeners;\n\n\t\treturn listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1;\n\n\t}\n\n\tremoveEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[ type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tconst index = listenerArray.indexOf( listener );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\tlistenerArray.splice( index, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tdispatchEvent( event ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[ event.type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tevent.target = this;\n\n\t\t\t// Make a copy, in case listeners are removed while iterating.\n\t\t\tconst array = listenerArray.slice( 0 );\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tarray[ i ].call( this, event );\n\n\t\t\t}\n\n\t\t\tevent.target = null;\n\n\t\t}\n\n\t}\n\n}\n\nconst _lut = [];\n\nfor ( let i = 0; i < 256; i ++ ) {\n\n\t_lut[ i ] = ( i < 16 ? '0' : '' ) + ( i ).toString( 16 );\n\n}\n\nlet _seed = 1234567;\n\n\nconst DEG2RAD = Math.PI / 180;\nconst RAD2DEG = 180 / Math.PI;\n\n// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\nfunction generateUUID() {\n\n\tconst d0 = Math.random() * 0xffffffff | 0;\n\tconst d1 = Math.random() * 0xffffffff | 0;\n\tconst d2 = Math.random() * 0xffffffff | 0;\n\tconst d3 = Math.random() * 0xffffffff | 0;\n\tconst uuid = _lut[ d0 & 0xff ] + _lut[ d0 >> 8 & 0xff ] + _lut[ d0 >> 16 & 0xff ] + _lut[ d0 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d1 & 0xff ] + _lut[ d1 >> 8 & 0xff ] + '-' + _lut[ d1 >> 16 & 0x0f | 0x40 ] + _lut[ d1 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d2 & 0x3f | 0x80 ] + _lut[ d2 >> 8 & 0xff ] + '-' + _lut[ d2 >> 16 & 0xff ] + _lut[ d2 >> 24 & 0xff ] +\n\t\t\t_lut[ d3 & 0xff ] + _lut[ d3 >> 8 & 0xff ] + _lut[ d3 >> 16 & 0xff ] + _lut[ d3 >> 24 & 0xff ];\n\n\t// .toLowerCase() here flattens concatenated strings to save heap memory space.\n\treturn uuid.toLowerCase();\n\n}\n\nfunction clamp( value, min, max ) {\n\n\treturn Math.max( min, Math.min( max, value ) );\n\n}\n\n// compute euclidean modulo of m % n\n// https://en.wikipedia.org/wiki/Modulo_operation\nfunction euclideanModulo( n, m ) {\n\n\treturn ( ( n % m ) + m ) % m;\n\n}\n\n// Linear mapping from range <a1, a2> to range <b1, b2>\nfunction mapLinear( x, a1, a2, b1, b2 ) {\n\n\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n}\n\n// https://www.gamedev.net/tutorials/programming/general-and-gameplay-programming/inverse-lerp-a-super-useful-yet-often-overlooked-function-r5230/\nfunction inverseLerp( x, y, value ) {\n\n\tif ( x !== y ) {\n\n\t\treturn ( value - x ) / ( y - x );\n\n\t} else {\n\n\t\treturn 0;\n\n\t}\n\n}\n\n// https://en.wikipedia.org/wiki/Linear_interpolation\nfunction lerp( x, y, t ) {\n\n\treturn ( 1 - t ) * x + t * y;\n\n}\n\n// http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\nfunction damp( x, y, lambda, dt ) {\n\n\treturn lerp( x, y, 1 - Math.exp( - lambda * dt ) );\n\n}\n\n// https://www.desmos.com/calculator/vcsjnyz7x4\nfunction pingpong( x, length = 1 ) {\n\n\treturn length - Math.abs( euclideanModulo( x, length * 2 ) - length );\n\n}\n\n// http://en.wikipedia.org/wiki/Smoothstep\nfunction smoothstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * ( 3 - 2 * x );\n\n}\n\nfunction smootherstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n}\n\n// Random integer from <low, high> interval\nfunction randInt( low, high ) {\n\n\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n}\n\n// Random float from <low, high> interval\nfunction randFloat( low, high ) {\n\n\treturn low + Math.random() * ( high - low );\n\n}\n\n// Random float from <-range/2, range/2> interval\nfunction randFloatSpread( range ) {\n\n\treturn range * ( 0.5 - Math.random() );\n\n}\n\n// Deterministic pseudo-random float in the interval [ 0, 1 ]\nfunction seededRandom( s ) {\n\n\tif ( s !== undefined ) _seed = s;\n\n\t// Mulberry32 generator\n\n\tlet t = _seed += 0x6D2B79F5;\n\n\tt = Math.imul( t ^ t >>> 15, t | 1 );\n\n\tt ^= t + Math.imul( t ^ t >>> 7, t | 61 );\n\n\treturn ( ( t ^ t >>> 14 ) >>> 0 ) / 4294967296;\n\n}\n\nfunction degToRad( degrees ) {\n\n\treturn degrees * DEG2RAD;\n\n}\n\nfunction radToDeg( radians ) {\n\n\treturn radians * RAD2DEG;\n\n}\n\nfunction isPowerOfTwo( value ) {\n\n\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n}\n\nfunction ceilPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction floorPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction setQuaternionFromProperEuler( q, a, b, c, order ) {\n\n\t// Intrinsic Proper Euler Angles - see https://en.wikipedia.org/wiki/Euler_angles\n\n\t// rotations are applied to the axes in the order specified by 'order'\n\t// rotation by angle 'a' is applied first, then by angle 'b', then by angle 'c'\n\t// angles are in radians\n\n\tconst cos = Math.cos;\n\tconst sin = Math.sin;\n\n\tconst c2 = cos( b / 2 );\n\tconst s2 = sin( b / 2 );\n\n\tconst c13 = cos( ( a + c ) / 2 );\n\tconst s13 = sin( ( a + c ) / 2 );\n\n\tconst c1_3 = cos( ( a - c ) / 2 );\n\tconst s1_3 = sin( ( a - c ) / 2 );\n\n\tconst c3_1 = cos( ( c - a ) / 2 );\n\tconst s3_1 = sin( ( c - a ) / 2 );\n\n\tswitch ( order ) {\n\n\t\tcase 'XYX':\n\t\t\tq.set( c2 * s13, s2 * c1_3, s2 * s1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YZY':\n\t\t\tq.set( s2 * s1_3, c2 * s13, s2 * c1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZXZ':\n\t\t\tq.set( s2 * c1_3, s2 * s1_3, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'XZX':\n\t\t\tq.set( c2 * s13, s2 * s3_1, s2 * c3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YXY':\n\t\t\tq.set( s2 * c3_1, c2 * s13, s2 * s3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZYZ':\n\t\t\tq.set( s2 * s3_1, s2 * c3_1, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: ' + order );\n\n\t}\n\n}\n\nfunction denormalize$1( value, array ) {\n\n\tswitch ( array.constructor ) {\n\n\t\tcase Float32Array:\n\n\t\t\treturn value;\n\n\t\tcase Uint16Array:\n\n\t\t\treturn value / 65535.0;\n\n\t\tcase Uint8Array:\n\n\t\t\treturn value / 255.0;\n\n\t\tcase Int16Array:\n\n\t\t\treturn Math.max( value / 32767.0, - 1.0 );\n\n\t\tcase Int8Array:\n\n\t\t\treturn Math.max( value / 127.0, - 1.0 );\n\n\t\tdefault:\n\n\t\t\tthrow new Error( 'Invalid component type.' );\n\n\t}\n\n}\n\nfunction normalize( value, array ) {\n\n\tswitch ( array.constructor ) {\n\n\t\tcase Float32Array:\n\n\t\t\treturn value;\n\n\t\tcase Uint16Array:\n\n\t\t\treturn Math.round( value * 65535.0 );\n\n\t\tcase Uint8Array:\n\n\t\t\treturn Math.round( value * 255.0 );\n\n\t\tcase Int16Array:\n\n\t\t\treturn Math.round( value * 32767.0 );\n\n\t\tcase Int8Array:\n\n\t\t\treturn Math.round( value * 127.0 );\n\n\t\tdefault:\n\n\t\t\tthrow new Error( 'Invalid component type.' );\n\n\t}\n\n}\n\nvar MathUtils = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tDEG2RAD: DEG2RAD,\n\tRAD2DEG: RAD2DEG,\n\tgenerateUUID: generateUUID,\n\tclamp: clamp,\n\teuclideanModulo: euclideanModulo,\n\tmapLinear: mapLinear,\n\tinverseLerp: inverseLerp,\n\tlerp: lerp,\n\tdamp: damp,\n\tpingpong: pingpong,\n\tsmoothstep: smoothstep,\n\tsmootherstep: smootherstep,\n\trandInt: randInt,\n\trandFloat: randFloat,\n\trandFloatSpread: randFloatSpread,\n\tseededRandom: seededRandom,\n\tdegToRad: degToRad,\n\tradToDeg: radToDeg,\n\tisPowerOfTwo: isPowerOfTwo,\n\tceilPowerOfTwo: ceilPowerOfTwo,\n\tfloorPowerOfTwo: floorPowerOfTwo,\n\tsetQuaternionFromProperEuler: setQuaternionFromProperEuler,\n\tnormalize: normalize,\n\tdenormalize: denormalize$1\n});\n\nclass Vector2 {\n\n\tconstructor( x = 0, y = 0 ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.x;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.x = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.y;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.y = value;\n\n\t}\n\n\tset( x, y ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y;\n\n\t}\n\n\tcross( v ) {\n\n\t\treturn this.x * v.y - this.y * v.x;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tangle() {\n\n\t\t// computes the angle in radians with respect to the positive x-axis\n\n\t\tconst angle = Math.atan2( - this.y, - this.x ) + Math.PI;\n\n\t\treturn angle;\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y;\n\t\treturn dx * dx + dy * dy;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\n\t\treturn this;\n\n\t}\n\n\trotateAround( center, angle ) {\n\n\t\tconst c = Math.cos( angle ), s = Math.sin( angle );\n\n\t\tconst x = this.x - center.x;\n\t\tconst y = this.y - center.y;\n\n\t\tthis.x = x * c - y * s + center.x;\n\t\tthis.y = x * s + y * c + center.y;\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\n\t}\n\n}\n\nVector2.prototype.isVector2 = true;\n\nclass Matrix3 {\n\n\tconstructor() {\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t];\n\n\t\tif ( arguments.length > 0 ) {\n\n\t\t\tconsole.error( 'THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.' );\n\n\t\t}\n\n\t}\n\n\tset( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\n\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\n\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ];\n\t\tte[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ];\n\t\tte[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrix3Column( this, 0 );\n\t\tyAxis.setFromMatrix3Column( this, 1 );\n\t\tzAxis.setFromMatrix3Column( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix4( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 4 ], me[ 8 ],\n\t\t\tme[ 1 ], me[ 5 ], me[ 9 ],\n\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 3 ], a13 = ae[ 6 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 4 ], a23 = ae[ 7 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 5 ], a33 = ae[ 8 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 3 ], b13 = be[ 6 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 4 ], b23 = be[ 7 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 5 ], b33 = be[ 8 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31;\n\t\tte[ 3 ] = a11 * b12 + a12 * b22 + a13 * b32;\n\t\tte[ 6 ] = a11 * b13 + a12 * b23 + a13 * b33;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31;\n\t\tte[ 4 ] = a21 * b12 + a22 * b22 + a23 * b32;\n\t\tte[ 7 ] = a21 * b13 + a22 * b23 + a23 * b33;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31;\n\t\tte[ 5 ] = a31 * b12 + a32 * b22 + a33 * b32;\n\t\tte[ 8 ] = a31 * b13 + a32 * b23 + a33 * b33;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\n\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\n\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\n\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\n\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\n\n\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\n\t}\n\n\tinvert() {\n\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ],\n\t\t\tn12 = te[ 3 ], n22 = te[ 4 ], n32 = te[ 5 ],\n\t\t\tn13 = te[ 6 ], n23 = te[ 7 ], n33 = te[ 8 ],\n\n\t\t\tt11 = n33 * n22 - n32 * n23,\n\t\t\tt12 = n32 * n13 - n33 * n12,\n\t\t\tt13 = n23 * n12 - n22 * n13,\n\n\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\n\t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\n\n\t\tte[ 3 ] = t12 * detInv;\n\t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\n\t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\n\n\t\tte[ 6 ] = t13 * detInv;\n\t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\n\t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\ttranspose() {\n\n\t\tlet tmp;\n\t\tconst m = this.elements;\n\n\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\n\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\n\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tgetNormalMatrix( matrix4 ) {\n\n\t\treturn this.setFromMatrix4( matrix4 ).invert().transpose();\n\n\t}\n\n\ttransposeIntoArray( r ) {\n\n\t\tconst m = this.elements;\n\n\t\tr[ 0 ] = m[ 0 ];\n\t\tr[ 1 ] = m[ 3 ];\n\t\tr[ 2 ] = m[ 6 ];\n\t\tr[ 3 ] = m[ 1 ];\n\t\tr[ 4 ] = m[ 4 ];\n\t\tr[ 5 ] = m[ 7 ];\n\t\tr[ 6 ] = m[ 2 ];\n\t\tr[ 7 ] = m[ 5 ];\n\t\tr[ 8 ] = m[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetUvTransform( tx, ty, sx, sy, rotation, cx, cy ) {\n\n\t\tconst c = Math.cos( rotation );\n\t\tconst s = Math.sin( rotation );\n\n\t\tthis.set(\n\t\t\tsx * c, sx * s, - sx * ( c * cx + s * cy ) + cx + tx,\n\t\t\t- sy * s, sy * c, - sy * ( - s * cx + c * cy ) + cy + ty,\n\t\t\t0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tscale( sx, sy ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= sx; te[ 3 ] *= sx; te[ 6 ] *= sx;\n\t\tte[ 1 ] *= sy; te[ 4 ] *= sy; te[ 7 ] *= sy;\n\n\t\treturn this;\n\n\t}\n\n\trotate( theta ) {\n\n\t\tconst c = Math.cos( theta );\n\t\tconst s = Math.sin( theta );\n\n\t\tconst te = this.elements;\n\n\t\tconst a11 = te[ 0 ], a12 = te[ 3 ], a13 = te[ 6 ];\n\t\tconst a21 = te[ 1 ], a22 = te[ 4 ], a23 = te[ 7 ];\n\n\t\tte[ 0 ] = c * a11 + s * a21;\n\t\tte[ 3 ] = c * a12 + s * a22;\n\t\tte[ 6 ] = c * a13 + s * a23;\n\n\t\tte[ 1 ] = - s * a11 + c * a21;\n\t\tte[ 4 ] = - s * a12 + c * a22;\n\t\tte[ 7 ] = - s * a13 + c * a23;\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( tx, ty ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] += tx * te[ 2 ]; te[ 3 ] += tx * te[ 5 ]; te[ 6 ] += tx * te[ 8 ];\n\t\tte[ 1 ] += ty * te[ 2 ]; te[ 4 ] += ty * te[ 5 ]; te[ 7 ] += ty * te[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\n\t\treturn array;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().fromArray( this.elements );\n\n\t}\n\n}\n\nMatrix3.prototype.isMatrix3 = true;\n\nfunction arrayNeedsUint32( array ) {\n\n\t// assumes larger values usually on last\n\n\tfor ( let i = array.length - 1; i >= 0; -- i ) {\n\n\t\tif ( array[ i ] > 65535 ) return true;\n\n\t}\n\n\treturn false;\n\n}\n\nconst TYPED_ARRAYS = {\n\tInt8Array: Int8Array,\n\tUint8Array: Uint8Array,\n\tUint8ClampedArray: Uint8ClampedArray,\n\tInt16Array: Int16Array,\n\tUint16Array: Uint16Array,\n\tInt32Array: Int32Array,\n\tUint32Array: Uint32Array,\n\tFloat32Array: Float32Array,\n\tFloat64Array: Float64Array\n};\n\nfunction getTypedArray( type, buffer ) {\n\n\treturn new TYPED_ARRAYS[ type ]( buffer );\n\n}\n\nfunction createElementNS( name ) {\n\n\treturn document.createElementNS( 'http://www.w3.org/1999/xhtml', name );\n\n}\n\nfunction SRGBToLinear( c ) {\n\n\treturn ( c < 0.04045 ) ? c * 0.0773993808 : Math.pow( c * 0.9478672986 + 0.0521327014, 2.4 );\n\n}\n\nfunction LinearToSRGB( c ) {\n\n\treturn ( c < 0.0031308 ) ? c * 12.92 : 1.055 * ( Math.pow( c, 0.41666 ) ) - 0.055;\n\n}\n\n// JavaScript RGB-to-RGB transforms, defined as\n// FN[InputColorSpace][OutputColorSpace] callback functions.\nconst FN = {\n\t[ SRGBColorSpace ]: { [ LinearSRGBColorSpace ]: SRGBToLinear },\n\t[ LinearSRGBColorSpace ]: { [ SRGBColorSpace ]: LinearToSRGB },\n};\n\nconst ColorManagement = {\n\n\tlegacyMode: true,\n\n\tget workingColorSpace() {\n\n\t\treturn LinearSRGBColorSpace;\n\n\t},\n\n\tset workingColorSpace( colorSpace ) {\n\n\t\tconsole.warn( 'THREE.ColorManagement: .workingColorSpace is readonly.' );\n\n\t},\n\n\tconvert: function ( color, sourceColorSpace, targetColorSpace ) {\n\n\t\tif ( this.legacyMode || sourceColorSpace === targetColorSpace || ! sourceColorSpace || ! targetColorSpace ) {\n\n\t\t\treturn color;\n\n\t\t}\n\n\t\tif ( FN[ sourceColorSpace ] && FN[ sourceColorSpace ][ targetColorSpace ] !== undefined ) {\n\n\t\t\tconst fn = FN[ sourceColorSpace ][ targetColorSpace ];\n\n\t\t\tcolor.r = fn( color.r );\n\t\t\tcolor.g = fn( color.g );\n\t\t\tcolor.b = fn( color.b );\n\n\t\t\treturn color;\n\n\t\t}\n\n\t\tthrow new Error( 'Unsupported color space conversion.' );\n\n\t},\n\n\tfromWorkingColorSpace: function ( color, targetColorSpace ) {\n\n\t\treturn this.convert( color, this.workingColorSpace, targetColorSpace );\n\n\t},\n\n\ttoWorkingColorSpace: function ( color, sourceColorSpace ) {\n\n\t\treturn this.convert( color, sourceColorSpace, this.workingColorSpace );\n\n\t},\n\n};\n\nconst _colorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\n\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\n\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\n\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\n\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\n\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\n\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\n\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\n\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\n\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\n\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\n\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\n\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\n\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\n\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\n\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\n\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\n\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\n\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\n\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\n\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\n\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\n\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\n\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\n\nconst _rgb = { r: 0, g: 0, b: 0 };\nconst _hslA = { h: 0, s: 0, l: 0 };\nconst _hslB = { h: 0, s: 0, l: 0 };\n\nfunction hue2rgb( p, q, t ) {\n\n\tif ( t < 0 ) t += 1;\n\tif ( t > 1 ) t -= 1;\n\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\n\tif ( t < 1 / 2 ) return q;\n\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\n\treturn p;\n\n}\n\nfunction toComponents( source, target ) {\n\n\ttarget.r = source.r;\n\ttarget.g = source.g;\n\ttarget.b = source.b;\n\n\treturn target;\n\n}\n\nclass Color {\n\n\tconstructor( r, g, b ) {\n\n\t\tif ( g === undefined && b === undefined ) {\n\n\t\t\t// r is THREE.Color, hex or string\n\t\t\treturn this.set( r );\n\n\t\t}\n\n\t\treturn this.setRGB( r, g, b );\n\n\t}\n\n\tset( value ) {\n\n\t\tif ( value && value.isColor ) {\n\n\t\t\tthis.copy( value );\n\n\t\t} else if ( typeof value === 'number' ) {\n\n\t\t\tthis.setHex( value );\n\n\t\t} else if ( typeof value === 'string' ) {\n\n\t\t\tthis.setStyle( value );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.r = scalar;\n\t\tthis.g = scalar;\n\t\tthis.b = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetHex( hex, colorSpace = SRGBColorSpace ) {\n\n\t\thex = Math.floor( hex );\n\n\t\tthis.r = ( hex >> 16 & 255 ) / 255;\n\t\tthis.g = ( hex >> 8 & 255 ) / 255;\n\t\tthis.b = ( hex & 255 ) / 255;\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetRGB( r, g, b, colorSpace = LinearSRGBColorSpace ) {\n\n\t\tthis.r = r;\n\t\tthis.g = g;\n\t\tthis.b = b;\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetHSL( h, s, l, colorSpace = LinearSRGBColorSpace ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\th = euclideanModulo( h, 1 );\n\t\ts = clamp( s, 0, 1 );\n\t\tl = clamp( l, 0, 1 );\n\n\t\tif ( s === 0 ) {\n\n\t\t\tthis.r = this.g = this.b = l;\n\n\t\t} else {\n\n\t\t\tconst p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\n\t\t\tconst q = ( 2 * l ) - p;\n\n\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\n\t\t\tthis.g = hue2rgb( q, p, h );\n\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\n\n\t\t}\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetStyle( style, colorSpace = SRGBColorSpace ) {\n\n\t\tfunction handleAlpha( string ) {\n\n\t\t\tif ( string === undefined ) return;\n\n\t\t\tif ( parseFloat( string ) < 1 ) {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tlet m;\n\n\t\tif ( m = /^((?:rgb|hsl)a?)\\(([^\\)]*)\\)/.exec( style ) ) {\n\n\t\t\t// rgb / hsl\n\n\t\t\tlet color;\n\t\t\tconst name = m[ 1 ];\n\t\t\tconst components = m[ 2 ];\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'rgb':\n\t\t\t\tcase 'rgba':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n\t\t\t\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\n\t\t\t\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\n\t\t\t\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\n\n\t\t\t\t\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\t\t\t\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\n\t\t\t\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\n\t\t\t\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\n\n\t\t\t\t\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'hsl':\n\t\t\t\tcase 'hsla':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d*\\.?\\d+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\t\t\t\t\t\tconst h = parseFloat( color[ 1 ] ) / 360;\n\t\t\t\t\t\tconst s = parseInt( color[ 2 ], 10 ) / 100;\n\t\t\t\t\t\tconst l = parseInt( color[ 3 ], 10 ) / 100;\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setHSL( h, s, l, colorSpace );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t} else if ( m = /^\\#([A-Fa-f\\d]+)$/.exec( style ) ) {\n\n\t\t\t// hex color\n\n\t\t\tconst hex = m[ 1 ];\n\t\t\tconst size = hex.length;\n\n\t\t\tif ( size === 3 ) {\n\n\t\t\t\t// #ff0\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 0 ), 16 ) / 255;\n\t\t\t\tthis.g = parseInt( hex.charAt( 1 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\tthis.b = parseInt( hex.charAt( 2 ) + hex.charAt( 2 ), 16 ) / 255;\n\n\t\t\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\t\t\treturn this;\n\n\t\t\t} else if ( size === 6 ) {\n\n\t\t\t\t// #ff0000\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\tthis.g = parseInt( hex.charAt( 2 ) + hex.charAt( 3 ), 16 ) / 255;\n\t\t\t\tthis.b = parseInt( hex.charAt( 4 ) + hex.charAt( 5 ), 16 ) / 255;\n\n\t\t\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( style && style.length > 0 ) {\n\n\t\t\treturn this.setColorName( style, colorSpace );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetColorName( style, colorSpace = SRGBColorSpace ) {\n\n\t\t// color keywords\n\t\tconst hex = _colorKeywords[ style.toLowerCase() ];\n\n\t\tif ( hex !== undefined ) {\n\n\t\t\t// red\n\t\t\tthis.setHex( hex, colorSpace );\n\n\t\t} else {\n\n\t\t\t// unknown color\n\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.r, this.g, this.b );\n\n\t}\n\n\tcopy( color ) {\n\n\t\tthis.r = color.r;\n\t\tthis.g = color.g;\n\t\tthis.b = color.b;\n\n\t\treturn this;\n\n\t}\n\n\tcopySRGBToLinear( color ) {\n\n\t\tthis.r = SRGBToLinear( color.r );\n\t\tthis.g = SRGBToLinear( color.g );\n\t\tthis.b = SRGBToLinear( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tcopyLinearToSRGB( color ) {\n\n\t\tthis.r = LinearToSRGB( color.r );\n\t\tthis.g = LinearToSRGB( color.g );\n\t\tthis.b = LinearToSRGB( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tconvertSRGBToLinear() {\n\n\t\tthis.copySRGBToLinear( this );\n\n\t\treturn this;\n\n\t}\n\n\tconvertLinearToSRGB() {\n\n\t\tthis.copyLinearToSRGB( this );\n\n\t\treturn this;\n\n\t}\n\n\tgetHex( colorSpace = SRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( toComponents( this, _rgb ), colorSpace );\n\n\t\treturn clamp( _rgb.r * 255, 0, 255 ) << 16 ^ clamp( _rgb.g * 255, 0, 255 ) << 8 ^ clamp( _rgb.b * 255, 0, 255 ) << 0;\n\n\t}\n\n\tgetHexString( colorSpace = SRGBColorSpace ) {\n\n\t\treturn ( '000000' + this.getHex( colorSpace ).toString( 16 ) ).slice( - 6 );\n\n\t}\n\n\tgetHSL( target, colorSpace = LinearSRGBColorSpace ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\n\t\tColorManagement.fromWorkingColorSpace( toComponents( this, _rgb ), colorSpace );\n\n\t\tconst r = _rgb.r, g = _rgb.g, b = _rgb.b;\n\n\t\tconst max = Math.max( r, g, b );\n\t\tconst min = Math.min( r, g, b );\n\n\t\tlet hue, saturation;\n\t\tconst lightness = ( min + max ) / 2.0;\n\n\t\tif ( min === max ) {\n\n\t\t\thue = 0;\n\t\t\tsaturation = 0;\n\n\t\t} else {\n\n\t\t\tconst delta = max - min;\n\n\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\n\n\t\t\tswitch ( max ) {\n\n\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\n\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\n\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\n\n\t\t\t}\n\n\t\t\thue /= 6;\n\n\t\t}\n\n\t\ttarget.h = hue;\n\t\ttarget.s = saturation;\n\t\ttarget.l = lightness;\n\n\t\treturn target;\n\n\t}\n\n\tgetRGB( target, colorSpace = LinearSRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( toComponents( this, _rgb ), colorSpace );\n\n\t\ttarget.r = _rgb.r;\n\t\ttarget.g = _rgb.g;\n\t\ttarget.b = _rgb.b;\n\n\t\treturn target;\n\n\t}\n\n\tgetStyle( colorSpace = SRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( toComponents( this, _rgb ), colorSpace );\n\n\t\tif ( colorSpace !== SRGBColorSpace ) {\n\n\t\t\t// Requires CSS Color Module Level 4 (https://www.w3.org/TR/css-color-4/).\n\t\t\treturn `color(${ colorSpace } ${ _rgb.r } ${ _rgb.g } ${ _rgb.b })`;\n\n\t\t}\n\n\t\treturn `rgb(${( _rgb.r * 255 ) | 0},${( _rgb.g * 255 ) | 0},${( _rgb.b * 255 ) | 0})`;\n\n\t}\n\n\toffsetHSL( h, s, l ) {\n\n\t\tthis.getHSL( _hslA );\n\n\t\t_hslA.h += h; _hslA.s += s; _hslA.l += l;\n\n\t\tthis.setHSL( _hslA.h, _hslA.s, _hslA.l );\n\n\t\treturn this;\n\n\t}\n\n\tadd( color ) {\n\n\t\tthis.r += color.r;\n\t\tthis.g += color.g;\n\t\tthis.b += color.b;\n\n\t\treturn this;\n\n\t}\n\n\taddColors( color1, color2 ) {\n\n\t\tthis.r = color1.r + color2.r;\n\t\tthis.g = color1.g + color2.g;\n\t\tthis.b = color1.b + color2.b;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.r += s;\n\t\tthis.g += s;\n\t\tthis.b += s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( color ) {\n\n\t\tthis.r = Math.max( 0, this.r - color.r );\n\t\tthis.g = Math.max( 0, this.g - color.g );\n\t\tthis.b = Math.max( 0, this.b - color.b );\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( color ) {\n\n\t\tthis.r *= color.r;\n\t\tthis.g *= color.g;\n\t\tthis.b *= color.b;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tthis.r *= s;\n\t\tthis.g *= s;\n\t\tthis.b *= s;\n\n\t\treturn this;\n\n\t}\n\n\tlerp( color, alpha ) {\n\n\t\tthis.r += ( color.r - this.r ) * alpha;\n\t\tthis.g += ( color.g - this.g ) * alpha;\n\t\tthis.b += ( color.b - this.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpColors( color1, color2, alpha ) {\n\n\t\tthis.r = color1.r + ( color2.r - color1.r ) * alpha;\n\t\tthis.g = color1.g + ( color2.g - color1.g ) * alpha;\n\t\tthis.b = color1.b + ( color2.b - color1.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpHSL( color, alpha ) {\n\n\t\tthis.getHSL( _hslA );\n\t\tcolor.getHSL( _hslB );\n\n\t\tconst h = lerp( _hslA.h, _hslB.h, alpha );\n\t\tconst s = lerp( _hslA.s, _hslB.s, alpha );\n\t\tconst l = lerp( _hslA.l, _hslB.l, alpha );\n\n\t\tthis.setHSL( h, s, l );\n\n\t\treturn this;\n\n\t}\n\n\tequals( c ) {\n\n\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.r = array[ offset ];\n\t\tthis.g = array[ offset + 1 ];\n\t\tthis.b = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.r;\n\t\tarray[ offset + 1 ] = this.g;\n\t\tarray[ offset + 2 ] = this.b;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.r = attribute.getX( index );\n\t\tthis.g = attribute.getY( index );\n\t\tthis.b = attribute.getZ( index );\n\n\t\tif ( attribute.normalized === true ) {\n\n\t\t\t// assuming Uint8Array\n\n\t\t\tthis.r /= 255;\n\t\t\tthis.g /= 255;\n\t\t\tthis.b /= 255;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.getHex();\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.r;\n\t\tyield this.g;\n\t\tyield this.b;\n\n\t}\n\n}\n\nColor.NAMES = _colorKeywords;\n\nColor.prototype.isColor = true;\nColor.prototype.r = 1;\nColor.prototype.g = 1;\nColor.prototype.b = 1;\n\nlet _canvas;\n\nclass ImageUtils {\n\n\tstatic getDataURL( image ) {\n\n\t\tif ( /^data:/i.test( image.src ) ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tif ( typeof HTMLCanvasElement == 'undefined' ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tlet canvas;\n\n\t\tif ( image instanceof HTMLCanvasElement ) {\n\n\t\t\tcanvas = image;\n\n\t\t} else {\n\n\t\t\tif ( _canvas === undefined ) _canvas = createElementNS( 'canvas' );\n\n\t\t\t_canvas.width = image.width;\n\t\t\t_canvas.height = image.height;\n\n\t\t\tconst context = _canvas.getContext( '2d' );\n\n\t\t\tif ( image instanceof ImageData ) {\n\n\t\t\t\tcontext.putImageData( image, 0, 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\t}\n\n\t\t\tcanvas = _canvas;\n\n\t\t}\n\n\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons', image );\n\n\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\n\n\t\t} else {\n\n\t\t\treturn canvas.toDataURL( 'image/png' );\n\n\t\t}\n\n\t}\n\n\tstatic sRGBToLinear( image ) {\n\n\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t\tconst canvas = createElementNS( 'canvas' );\n\n\t\t\tcanvas.width = image.width;\n\t\t\tcanvas.height = image.height;\n\n\t\t\tconst context = canvas.getContext( '2d' );\n\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\tconst imageData = context.getImageData( 0, 0, image.width, image.height );\n\t\t\tconst data = imageData.data;\n\n\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tdata[ i ] = SRGBToLinear( data[ i ] / 255 ) * 255;\n\n\t\t\t}\n\n\t\t\tcontext.putImageData( imageData, 0, 0 );\n\n\t\t\treturn canvas;\n\n\t\t} else if ( image.data ) {\n\n\t\t\tconst data = image.data.slice( 0 );\n\n\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tif ( data instanceof Uint8Array || data instanceof Uint8ClampedArray ) {\n\n\t\t\t\t\tdata[ i ] = Math.floor( SRGBToLinear( data[ i ] / 255 ) * 255 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// assuming float\n\n\t\t\t\t\tdata[ i ] = SRGBToLinear( data[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdata: data,\n\t\t\t\twidth: image.width,\n\t\t\t\theight: image.height\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied.' );\n\t\t\treturn image;\n\n\t\t}\n\n\t}\n\n}\n\nclass Source {\n\n\tconstructor( data = null ) {\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.data = data;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.images[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.images[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\t\t\tuuid: this.uuid,\n\t\t\turl: ''\n\t\t};\n\n\t\tconst data = this.data;\n\n\t\tif ( data !== null ) {\n\n\t\t\tlet url;\n\n\t\t\tif ( Array.isArray( data ) ) {\n\n\t\t\t\t// cube texture\n\n\t\t\t\turl = [];\n\n\t\t\t\tfor ( let i = 0, l = data.length; i < l; i ++ ) {\n\n\t\t\t\t\tif ( data[ i ].isDataTexture ) {\n\n\t\t\t\t\t\turl.push( serializeImage( data[ i ].image ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\turl.push( serializeImage( data[ i ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// texture\n\n\t\t\t\turl = serializeImage( data );\n\n\t\t\t}\n\n\t\t\toutput.url = url;\n\n\t\t}\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.images[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n}\n\nfunction serializeImage( image ) {\n\n\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t// default images\n\n\t\treturn ImageUtils.getDataURL( image );\n\n\t} else {\n\n\t\tif ( image.data ) {\n\n\t\t\t// images of DataTexture\n\n\t\t\treturn {\n\t\t\t\tdata: Array.prototype.slice.call( image.data ),\n\t\t\t\twidth: image.width,\n\t\t\t\theight: image.height,\n\t\t\t\ttype: image.data.constructor.name\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Texture: Unable to serialize Texture.' );\n\t\t\treturn {};\n\n\t\t}\n\n\t}\n\n}\n\nSource.prototype.isSource = true;\n\nlet textureId = 0;\n\nclass Texture extends EventDispatcher {\n\n\tconstructor( image = Texture.DEFAULT_IMAGE, mapping = Texture.DEFAULT_MAPPING, wrapS = ClampToEdgeWrapping, wrapT = ClampToEdgeWrapping, magFilter = LinearFilter, minFilter = LinearMipmapLinearFilter, format = RGBAFormat, type = UnsignedByteType, anisotropy = 1, encoding = LinearEncoding ) {\n\n\t\tsuper();\n\n\t\tObject.defineProperty( this, 'id', { value: textureId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\n\t\tthis.source = new Source( image );\n\t\tthis.mipmaps = [];\n\n\t\tthis.mapping = mapping;\n\n\t\tthis.wrapS = wrapS;\n\t\tthis.wrapT = wrapT;\n\n\t\tthis.magFilter = magFilter;\n\t\tthis.minFilter = minFilter;\n\n\t\tthis.anisotropy = anisotropy;\n\n\t\tthis.format = format;\n\t\tthis.internalFormat = null;\n\t\tthis.type = type;\n\n\t\tthis.offset = new Vector2( 0, 0 );\n\t\tthis.repeat = new Vector2( 1, 1 );\n\t\tthis.center = new Vector2( 0, 0 );\n\t\tthis.rotation = 0;\n\n\t\tthis.matrixAutoUpdate = true;\n\t\tthis.matrix = new Matrix3();\n\n\t\tthis.generateMipmaps = true;\n\t\tthis.premultiplyAlpha = false;\n\t\tthis.flipY = true;\n\t\tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\n\t\t// Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\n\t\t//\n\t\t// Also changing the encoding after already used by a Material will not automatically make the Material\n\t\t// update. You need to explicitly call Material.needsUpdate to trigger it to recompile.\n\t\tthis.encoding = encoding;\n\n\t\tthis.userData = {};\n\n\t\tthis.version = 0;\n\t\tthis.onUpdate = null;\n\n\t\tthis.isRenderTargetTexture = false; // indicates whether a texture belongs to a render target or not\n\t\tthis.needsPMREMUpdate = false; // indicates whether this texture should be processed by PMREMGenerator or not (only relevant for render target textures)\n\n\t}\n\n\tget image() {\n\n\t\treturn this.source.data;\n\n\t}\n\n\tset image( value ) {\n\n\t\tthis.source.data = value;\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.setUvTransform( this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.source = source.source;\n\t\tthis.mipmaps = source.mipmaps.slice( 0 );\n\n\t\tthis.mapping = source.mapping;\n\n\t\tthis.wrapS = source.wrapS;\n\t\tthis.wrapT = source.wrapT;\n\n\t\tthis.magFilter = source.magFilter;\n\t\tthis.minFilter = source.minFilter;\n\n\t\tthis.anisotropy = source.anisotropy;\n\n\t\tthis.format = source.format;\n\t\tthis.internalFormat = source.internalFormat;\n\t\tthis.type = source.type;\n\n\t\tthis.offset.copy( source.offset );\n\t\tthis.repeat.copy( source.repeat );\n\t\tthis.center.copy( source.center );\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrix.copy( source.matrix );\n\n\t\tthis.generateMipmaps = source.generateMipmaps;\n\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\n\t\tthis.flipY = source.flipY;\n\t\tthis.unpackAlignment = source.unpackAlignment;\n\t\tthis.encoding = source.encoding;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tthis.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.textures[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.textures[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Texture',\n\t\t\t\tgenerator: 'Texture.toJSON'\n\t\t\t},\n\n\t\t\tuuid: this.uuid,\n\t\t\tname: this.name,\n\n\t\t\timage: this.source.toJSON( meta ).uuid,\n\n\t\t\tmapping: this.mapping,\n\n\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\n\t\t\toffset: [ this.offset.x, this.offset.y ],\n\t\t\tcenter: [ this.center.x, this.center.y ],\n\t\t\trotation: this.rotation,\n\n\t\t\twrap: [ this.wrapS, this.wrapT ],\n\n\t\t\tformat: this.format,\n\t\t\ttype: this.type,\n\t\t\tencoding: this.encoding,\n\n\t\t\tminFilter: this.minFilter,\n\t\t\tmagFilter: this.magFilter,\n\t\t\tanisotropy: this.anisotropy,\n\n\t\t\tflipY: this.flipY,\n\n\t\t\tpremultiplyAlpha: this.premultiplyAlpha,\n\t\t\tunpackAlignment: this.unpackAlignment\n\n\t\t};\n\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) output.userData = this.userData;\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.textures[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\ttransformUv( uv ) {\n\n\t\tif ( this.mapping !== UVMapping ) return uv;\n\n\t\tuv.applyMatrix3( this.matrix );\n\n\t\tif ( uv.x < 0 || uv.x > 1 ) {\n\n\t\t\tswitch ( this.wrapS ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( uv.y < 0 || uv.y > 1 ) {\n\n\t\t\tswitch ( this.wrapT ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.flipY ) {\n\n\t\t\tuv.y = 1 - uv.y;\n\n\t\t}\n\n\t\treturn uv;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) {\n\n\t\t\tthis.version ++;\n\t\t\tthis.source.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n}\n\nTexture.DEFAULT_IMAGE = null;\nTexture.DEFAULT_MAPPING = UVMapping;\n\nTexture.prototype.isTexture = true;\n\nclass Vector4 {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.z;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.z = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.w;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.w = value;\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\t\tthis.w = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( w ) {\n\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tcase 3: this.w = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tcase 3: return this.w;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\t\tthis.w += v.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\t\tthis.w += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\t\tthis.w = a.w + b.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\t\tthis.w += v.w * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\t\tthis.w -= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\t\tthis.w -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\t\tthis.w = a.w - b.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\t\tthis.w *= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\t\tthis.w *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z, w = this.w;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\n\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tsetAxisAngleFromQuaternion( q ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\n\t\t// q is assumed to be normalized\n\n\t\tthis.w = 2 * Math.acos( q.w );\n\n\t\tconst s = Math.sqrt( 1 - q.w * q.w );\n\n\t\tif ( s < 0.0001 ) {\n\n\t\t\tthis.x = 1;\n\t\t\tthis.y = 0;\n\t\t\tthis.z = 0;\n\n\t\t} else {\n\n\t\t\tthis.x = q.x / s;\n\t\t\tthis.y = q.y / s;\n\t\t\tthis.z = q.z / s;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetAxisAngleFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tlet angle, x, y, z; // variables for result\n\t\tconst epsilon = 0.01,\t\t// margin to allow for rounding errors\n\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\n\n\t\t\tte = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\n\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\n\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\n\n\t\t\t// singularity found\n\t\t\t// first check for identity matrix which must have +1 for all terms\n\t\t\t// in leading diagonal and zero in other terms\n\n\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\n\n\t\t\t\t// this singularity is identity matrix so angle = 0\n\n\t\t\t\tthis.set( 1, 0, 0, 0 );\n\n\t\t\t\treturn this; // zero angle, arbitrary axis\n\n\t\t\t}\n\n\t\t\t// otherwise this singularity is angle = 180\n\n\t\t\tangle = Math.PI;\n\n\t\t\tconst xx = ( m11 + 1 ) / 2;\n\t\t\tconst yy = ( m22 + 1 ) / 2;\n\t\t\tconst zz = ( m33 + 1 ) / 2;\n\t\t\tconst xy = ( m12 + m21 ) / 4;\n\t\t\tconst xz = ( m13 + m31 ) / 4;\n\t\t\tconst yz = ( m23 + m32 ) / 4;\n\n\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\n\n\t\t\t\t// m11 is the largest diagonal term\n\n\t\t\t\tif ( xx < epsilon ) {\n\n\t\t\t\t\tx = 0;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tx = Math.sqrt( xx );\n\t\t\t\t\ty = xy / x;\n\t\t\t\t\tz = xz / x;\n\n\t\t\t\t}\n\n\t\t\t} else if ( yy > zz ) {\n\n\t\t\t\t// m22 is the largest diagonal term\n\n\t\t\t\tif ( yy < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ty = Math.sqrt( yy );\n\t\t\t\t\tx = xy / y;\n\t\t\t\t\tz = yz / y;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// m33 is the largest diagonal term so base result on this\n\n\t\t\t\tif ( zz < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tz = Math.sqrt( zz );\n\t\t\t\t\tx = xz / z;\n\t\t\t\t\ty = yz / z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.set( x, y, z, angle );\n\n\t\t\treturn this; // return 180 deg rotation\n\n\t\t}\n\n\t\t// as we have reached here there are no singularities so we can handle normally\n\n\t\tlet s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\n\t\t\t( m13 - m31 ) * ( m13 - m31 ) +\n\t\t\t( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\n\n\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\n\n\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\n\t\t// caught by singularity test above, but I've left it in just in case\n\n\t\tthis.x = ( m32 - m23 ) / s;\n\t\tthis.y = ( m13 - m31 ) / s;\n\t\tthis.z = ( m21 - m12 ) / s;\n\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\t\tthis.w = Math.min( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\t\tthis.w = Math.max( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\t\tthis.w = Math.max( min.w, Math.min( max.w, this.w ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\t\tthis.w = Math.max( minVal, Math.min( maxVal, this.w ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\t\tthis.w = Math.floor( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\t\tthis.w = Math.ceil( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\t\tthis.w = Math.round( this.w );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\t\tthis.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\t\tthis.w = - this.w;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\t\tthis.w += ( v.w - this.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\t\tthis.w = v1.w + ( v2.w - v1.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\t\tthis.w = array[ offset + 3 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\t\tarray[ offset + 3 ] = this.w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\t\tthis.w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\t\tthis.w = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\t\tyield this.z;\n\t\tyield this.w;\n\n\t}\n\n}\n\nVector4.prototype.isVector4 = true;\n\n/*\n In options, we can specify:\n * Texture parameters for an auto-generated target texture\n * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n*/\nclass WebGLRenderTarget extends EventDispatcher {\n\n\tconstructor( width, height, options = {} ) {\n\n\t\tsuper();\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis.depth = 1;\n\n\t\tthis.scissor = new Vector4( 0, 0, width, height );\n\t\tthis.scissorTest = false;\n\n\t\tthis.viewport = new Vector4( 0, 0, width, height );\n\n\t\tconst image = { width: width, height: height, depth: 1 };\n\n\t\tthis.texture = new Texture( image, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\tthis.texture.flipY = false;\n\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\t\tthis.texture.internalFormat = options.internalFormat !== undefined ? options.internalFormat : null;\n\t\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\n\t\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\n\t\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : false;\n\n\t\tthis.depthTexture = options.depthTexture !== undefined ? options.depthTexture : null;\n\n\t\tthis.samples = options.samples !== undefined ? options.samples : 0;\n\n\t}\n\n\tsetSize( width, height, depth = 1 ) {\n\n\t\tif ( this.width !== width || this.height !== height || this.depth !== depth ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t\tthis.depth = depth;\n\n\t\t\tthis.texture.image.width = width;\n\t\t\tthis.texture.image.height = height;\n\t\t\tthis.texture.image.depth = depth;\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\t\tthis.depth = source.depth;\n\n\t\tthis.viewport.copy( source.viewport );\n\n\t\tthis.texture = source.texture.clone();\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\t// ensure image object is not shared, see #20328\n\n\t\tthis.texture.image = Object.assign( {}, source.texture.image );\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\n\t\tif ( source.depthTexture !== null ) this.depthTexture = source.depthTexture.clone();\n\n\t\tthis.samples = source.samples;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nWebGLRenderTarget.prototype.isWebGLRenderTarget = true;\n\nclass DataArrayTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\tsuper( null );\n\n\t\tthis.image = { data, width, height, depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nDataArrayTexture.prototype.isDataArrayTexture = true;\n\nclass WebGLArrayRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width, height, depth ) {\n\n\t\tsuper( width, height );\n\n\t\tthis.depth = depth;\n\n\t\tthis.texture = new DataArrayTexture( null, width, height, depth );\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t}\n\n}\n\nWebGLArrayRenderTarget.prototype.isWebGLArrayRenderTarget = true;\n\nclass Data3DTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\t// We're going to add .setXXX() methods for setting properties later.\n\t\t// Users can still set in DataTexture3D directly.\n\t\t//\n\t\t//\tconst texture = new THREE.DataTexture3D( data, width, height, depth );\n\t\t// \ttexture.anisotropy = 16;\n\t\t//\n\t\t// See #14839\n\n\t\tsuper( null );\n\n\t\tthis.image = { data, width, height, depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nData3DTexture.prototype.isData3DTexture = true;\n\nclass WebGL3DRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width, height, depth ) {\n\n\t\tsuper( width, height );\n\n\t\tthis.depth = depth;\n\n\t\tthis.texture = new Data3DTexture( null, width, height, depth );\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t}\n\n}\n\nWebGL3DRenderTarget.prototype.isWebGL3DRenderTarget = true;\n\nclass WebGLMultipleRenderTargets extends WebGLRenderTarget {\n\n\tconstructor( width, height, count, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tconst texture = this.texture;\n\n\t\tthis.texture = [];\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.texture[ i ] = texture.clone();\n\t\t\tthis.texture[ i ].isRenderTargetTexture = true;\n\n\t\t}\n\n\t}\n\n\tsetSize( width, height, depth = 1 ) {\n\n\t\tif ( this.width !== width || this.height !== height || this.depth !== depth ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t\tthis.depth = depth;\n\n\t\t\tfor ( let i = 0, il = this.texture.length; i < il; i ++ ) {\n\n\t\t\t\tthis.texture[ i ].image.width = width;\n\t\t\t\tthis.texture[ i ].image.height = height;\n\t\t\t\tthis.texture[ i ].image.depth = depth;\n\n\t\t\t}\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.dispose();\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\t\tthis.depth = source.depth;\n\n\t\tthis.viewport.set( 0, 0, this.width, this.height );\n\t\tthis.scissor.set( 0, 0, this.width, this.height );\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\n\t\tif ( source.depthTexture !== null ) this.depthTexture = source.depthTexture.clone();\n\n\t\tthis.texture.length = 0;\n\n\t\tfor ( let i = 0, il = source.texture.length; i < il; i ++ ) {\n\n\t\t\tthis.texture[ i ] = source.texture[ i ].clone();\n\t\t\tthis.texture[ i ].isRenderTargetTexture = true;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nWebGLMultipleRenderTargets.prototype.isWebGLMultipleRenderTargets = true;\n\nclass Quaternion {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t}\n\n\tstatic slerp( qa, qb, qm, t ) {\n\n\t\tconsole.warn( 'THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead.' );\n\t\treturn qm.slerpQuaternions( qa, qb, t );\n\n\t}\n\n\tstatic slerpFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n\n\t\t// fuzz-free, array-based Quaternion SLERP operation\n\n\t\tlet x0 = src0[ srcOffset0 + 0 ],\n\t\t\ty0 = src0[ srcOffset0 + 1 ],\n\t\t\tz0 = src0[ srcOffset0 + 2 ],\n\t\t\tw0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 + 0 ],\n\t\t\ty1 = src1[ srcOffset1 + 1 ],\n\t\t\tz1 = src1[ srcOffset1 + 2 ],\n\t\t\tw1 = src1[ srcOffset1 + 3 ];\n\n\t\tif ( t === 0 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x0;\n\t\t\tdst[ dstOffset + 1 ] = y0;\n\t\t\tdst[ dstOffset + 2 ] = z0;\n\t\t\tdst[ dstOffset + 3 ] = w0;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( t === 1 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x1;\n\t\t\tdst[ dstOffset + 1 ] = y1;\n\t\t\tdst[ dstOffset + 2 ] = z1;\n\t\t\tdst[ dstOffset + 3 ] = w1;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n\n\t\t\tlet s = 1 - t;\n\t\t\tconst cos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\n\t\t\t\tsqrSin = 1 - cos * cos;\n\n\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\n\t\t\tif ( sqrSin > Number.EPSILON ) {\n\n\t\t\t\tconst sin = Math.sqrt( sqrSin ),\n\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\n\n\t\t\t\ts = Math.sin( s * len ) / sin;\n\t\t\t\tt = Math.sin( t * len ) / sin;\n\n\t\t\t}\n\n\t\t\tconst tDir = t * dir;\n\n\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\tw0 = w0 * s + w1 * tDir;\n\n\t\t\t// Normalize in case we just did a lerp:\n\t\t\tif ( s === 1 - t ) {\n\n\t\t\t\tconst f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n\n\t\t\t\tx0 *= f;\n\t\t\t\ty0 *= f;\n\t\t\t\tz0 *= f;\n\t\t\t\tw0 *= f;\n\n\t\t\t}\n\n\t\t}\n\n\t\tdst[ dstOffset ] = x0;\n\t\tdst[ dstOffset + 1 ] = y0;\n\t\tdst[ dstOffset + 2 ] = z0;\n\t\tdst[ dstOffset + 3 ] = w0;\n\n\t}\n\n\tstatic multiplyQuaternionsFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1 ) {\n\n\t\tconst x0 = src0[ srcOffset0 ];\n\t\tconst y0 = src0[ srcOffset0 + 1 ];\n\t\tconst z0 = src0[ srcOffset0 + 2 ];\n\t\tconst w0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 ];\n\t\tconst y1 = src1[ srcOffset1 + 1 ];\n\t\tconst z1 = src1[ srcOffset1 + 2 ];\n\t\tconst w1 = src1[ srcOffset1 + 3 ];\n\n\t\tdst[ dstOffset ] = x0 * w1 + w0 * x1 + y0 * z1 - z0 * y1;\n\t\tdst[ dstOffset + 1 ] = y0 * w1 + w0 * y1 + z0 * x1 - x0 * z1;\n\t\tdst[ dstOffset + 2 ] = z0 * w1 + w0 * z1 + x0 * y1 - y0 * x1;\n\t\tdst[ dstOffset + 3 ] = w0 * w1 - x0 * x1 - y0 * y1 - z0 * z1;\n\n\t\treturn dst;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget w() {\n\n\t\treturn this._w;\n\n\t}\n\n\tset w( value ) {\n\n\t\tthis._w = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\n\n\t}\n\n\tcopy( quaternion ) {\n\n\t\tthis._x = quaternion.x;\n\t\tthis._y = quaternion.y;\n\t\tthis._z = quaternion.z;\n\t\tthis._w = quaternion.w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromEuler( euler, update ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tthrow new Error( 'THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\tconst x = euler._x, y = euler._y, z = euler._z, order = euler._order;\n\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t//\tcontent/SpinCalc.m\n\n\t\tconst cos = Math.cos;\n\t\tconst sin = Math.sin;\n\n\t\tconst c1 = cos( x / 2 );\n\t\tconst c2 = cos( y / 2 );\n\t\tconst c3 = cos( z / 2 );\n\n\t\tconst s1 = sin( x / 2 );\n\t\tconst s2 = sin( y / 2 );\n\t\tconst s3 = sin( z / 2 );\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.warn( 'THREE.Quaternion: .setFromEuler() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tif ( update !== false ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromAxisAngle( axis, angle ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n\t\t// assumes axis is normalized\n\n\t\tconst halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n\t\tthis._x = axis.x * s;\n\t\tthis._y = axis.y * s;\n\t\tthis._z = axis.z * s;\n\t\tthis._w = Math.cos( halfAngle );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\n\t\t\ttrace = m11 + m22 + m33;\n\n\t\tif ( trace > 0 ) {\n\n\t\t\tconst s = 0.5 / Math.sqrt( trace + 1.0 );\n\n\t\t\tthis._w = 0.25 / s;\n\t\t\tthis._x = ( m32 - m23 ) * s;\n\t\t\tthis._y = ( m13 - m31 ) * s;\n\t\t\tthis._z = ( m21 - m12 ) * s;\n\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n\t\t\tthis._w = ( m32 - m23 ) / s;\n\t\t\tthis._x = 0.25 * s;\n\t\t\tthis._y = ( m12 + m21 ) / s;\n\t\t\tthis._z = ( m13 + m31 ) / s;\n\n\t\t} else if ( m22 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n\t\t\tthis._w = ( m13 - m31 ) / s;\n\t\t\tthis._x = ( m12 + m21 ) / s;\n\t\t\tthis._y = 0.25 * s;\n\t\t\tthis._z = ( m23 + m32 ) / s;\n\n\t\t} else {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n\t\t\tthis._w = ( m21 - m12 ) / s;\n\t\t\tthis._x = ( m13 + m31 ) / s;\n\t\t\tthis._y = ( m23 + m32 ) / s;\n\t\t\tthis._z = 0.25 * s;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromUnitVectors( vFrom, vTo ) {\n\n\t\t// assumes direction vectors vFrom and vTo are normalized\n\n\t\tlet r = vFrom.dot( vTo ) + 1;\n\n\t\tif ( r < Number.EPSILON ) {\n\n\t\t\t// vFrom and vTo point in opposite directions\n\n\t\t\tr = 0;\n\n\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\n\t\t\t\tthis._x = - vFrom.y;\n\t\t\t\tthis._y = vFrom.x;\n\t\t\t\tthis._z = 0;\n\t\t\t\tthis._w = r;\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = - vFrom.z;\n\t\t\t\tthis._z = vFrom.y;\n\t\t\t\tthis._w = r;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\n\n\t\t\tthis._x = vFrom.y * vTo.z - vFrom.z * vTo.y;\n\t\t\tthis._y = vFrom.z * vTo.x - vFrom.x * vTo.z;\n\t\t\tthis._z = vFrom.x * vTo.y - vFrom.y * vTo.x;\n\t\t\tthis._w = r;\n\n\t\t}\n\n\t\treturn this.normalize();\n\n\t}\n\n\tangleTo( q ) {\n\n\t\treturn 2 * Math.acos( Math.abs( clamp( this.dot( q ), - 1, 1 ) ) );\n\n\t}\n\n\trotateTowards( q, step ) {\n\n\t\tconst angle = this.angleTo( q );\n\n\t\tif ( angle === 0 ) return this;\n\n\t\tconst t = Math.min( 1, step / angle );\n\n\t\tthis.slerp( q, t );\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\treturn this.set( 0, 0, 0, 1 );\n\n\t}\n\n\tinvert() {\n\n\t\t// quaternion is assumed to have unit length\n\n\t\treturn this.conjugate();\n\n\t}\n\n\tconjugate() {\n\n\t\tthis._x *= - 1;\n\t\tthis._y *= - 1;\n\t\tthis._z *= - 1;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\n\t}\n\n\tnormalize() {\n\n\t\tlet l = this.length();\n\n\t\tif ( l === 0 ) {\n\n\t\t\tthis._x = 0;\n\t\t\tthis._y = 0;\n\t\t\tthis._z = 0;\n\t\t\tthis._w = 1;\n\n\t\t} else {\n\n\t\t\tl = 1 / l;\n\n\t\t\tthis._x = this._x * l;\n\t\t\tthis._y = this._y * l;\n\t\t\tthis._z = this._z * l;\n\t\t\tthis._w = this._w * l;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( q, p ) {\n\n\t\tif ( p !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' );\n\t\t\treturn this.multiplyQuaternions( q, p );\n\n\t\t}\n\n\t\treturn this.multiplyQuaternions( this, q );\n\n\t}\n\n\tpremultiply( q ) {\n\n\t\treturn this.multiplyQuaternions( q, this );\n\n\t}\n\n\tmultiplyQuaternions( a, b ) {\n\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n\t\tconst qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n\t\tconst qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerp( qb, t ) {\n\n\t\tif ( t === 0 ) return this;\n\t\tif ( t === 1 ) return this.copy( qb );\n\n\t\tconst x = this._x, y = this._y, z = this._z, w = this._w;\n\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\tlet cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\tif ( cosHalfTheta < 0 ) {\n\n\t\t\tthis._w = - qb._w;\n\t\t\tthis._x = - qb._x;\n\t\t\tthis._y = - qb._y;\n\t\t\tthis._z = - qb._z;\n\n\t\t\tcosHalfTheta = - cosHalfTheta;\n\n\t\t} else {\n\n\t\t\tthis.copy( qb );\n\n\t\t}\n\n\t\tif ( cosHalfTheta >= 1.0 ) {\n\n\t\t\tthis._w = w;\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\n\n\t\tif ( sqrSinHalfTheta <= Number.EPSILON ) {\n\n\t\t\tconst s = 1 - t;\n\t\t\tthis._w = s * w + t * this._w;\n\t\t\tthis._x = s * x + t * this._x;\n\t\t\tthis._y = s * y + t * this._y;\n\t\t\tthis._z = s * z + t * this._z;\n\n\t\t\tthis.normalize();\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sinHalfTheta = Math.sqrt( sqrSinHalfTheta );\n\t\tconst halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n\t\tconst ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerpQuaternions( qa, qb, t ) {\n\n\t\treturn this.copy( qa ).slerp( qb, t );\n\n\t}\n\n\trandom() {\n\n\t\t// Derived from http://planning.cs.uiuc.edu/node198.html\n\t\t// Note, this source uses w, x, y, z ordering,\n\t\t// so we swap the order below.\n\n\t\tconst u1 = Math.random();\n\t\tconst sqrt1u1 = Math.sqrt( 1 - u1 );\n\t\tconst sqrtu1 = Math.sqrt( u1 );\n\n\t\tconst u2 = 2 * Math.PI * Math.random();\n\n\t\tconst u3 = 2 * Math.PI * Math.random();\n\n\t\treturn this.set(\n\t\t\tsqrt1u1 * Math.cos( u2 ),\n\t\t\tsqrtu1 * Math.sin( u3 ),\n\t\t\tsqrtu1 * Math.cos( u3 ),\n\t\t\tsqrt1u1 * Math.sin( u2 ),\n\t\t);\n\n\t}\n\n\tequals( quaternion ) {\n\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis._x = array[ offset ];\n\t\tthis._y = array[ offset + 1 ];\n\t\tthis._z = array[ offset + 2 ];\n\t\tthis._w = array[ offset + 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis._x = attribute.getX( index );\n\t\tthis._y = attribute.getY( index );\n\t\tthis._z = attribute.getZ( index );\n\t\tthis._w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this._x;\n\t\tyield this._y;\n\t\tyield this._z;\n\t\tyield this._w;\n\n\t}\n\n}\n\nQuaternion.prototype.isQuaternion = true;\n\nclass Vector3 {\n\n\tconstructor( x = 0, y = 0, z = 0 ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t}\n\n\tset( x, y, z ) {\n\n\t\tif ( z === undefined ) z = this.z; // sprite.scale.set(x,y)\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );\n\t\t\treturn this.multiplyVectors( v, w );\n\n\t\t}\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyVectors( a, b ) {\n\n\t\tthis.x = a.x * b.x;\n\t\tthis.y = a.y * b.y;\n\t\tthis.z = a.z * b.z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyEuler( euler ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tconsole.error( 'THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\treturn this.applyQuaternion( _quaternion$4.setFromEuler( euler ) );\n\n\t}\n\n\tapplyAxisAngle( axis, angle ) {\n\n\t\treturn this.applyQuaternion( _quaternion$4.setFromAxisAngle( axis, angle ) );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\treturn this.applyMatrix3( m ).normalize();\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tconst w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\n\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n\t\t// calculate quat * vector\n\n\t\tconst ix = qw * x + qy * z - qz * y;\n\t\tconst iy = qw * y + qz * x - qx * z;\n\t\tconst iz = qw * z + qx * y - qy * x;\n\t\tconst iw = - qx * x - qy * y - qz * z;\n\n\t\t// calculate result * inverse quat\n\n\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\n\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\n\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\n\n\t\treturn this;\n\n\t}\n\n\tproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.matrixWorldInverse ).applyMatrix4( camera.projectionMatrix );\n\n\t}\n\n\tunproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.projectionMatrixInverse ).applyMatrix4( camera.matrixWorld );\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\t// input: THREE.Matrix4 affine matrix\n\t\t// vector interpreted as a direction\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n\t\treturn this.normalize();\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\t\tthis.z /= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\n\t}\n\n\t// TODO lengthSquared?\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tcross( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );\n\t\t\treturn this.crossVectors( v, w );\n\n\t\t}\n\n\t\treturn this.crossVectors( this, v );\n\n\t}\n\n\tcrossVectors( a, b ) {\n\n\t\tconst ax = a.x, ay = a.y, az = a.z;\n\t\tconst bx = b.x, by = b.y, bz = b.z;\n\n\t\tthis.x = ay * bz - az * by;\n\t\tthis.y = az * bx - ax * bz;\n\t\tthis.z = ax * by - ay * bx;\n\n\t\treturn this;\n\n\t}\n\n\tprojectOnVector( v ) {\n\n\t\tconst denominator = v.lengthSq();\n\n\t\tif ( denominator === 0 ) return this.set( 0, 0, 0 );\n\n\t\tconst scalar = v.dot( this ) / denominator;\n\n\t\treturn this.copy( v ).multiplyScalar( scalar );\n\n\t}\n\n\tprojectOnPlane( planeNormal ) {\n\n\t\t_vector$c.copy( this ).projectOnVector( planeNormal );\n\n\t\treturn this.sub( _vector$c );\n\n\t}\n\n\treflect( normal ) {\n\n\t\t// reflect incident vector off plane orthogonal to normal\n\t\t// normal is assumed to have unit length\n\n\t\treturn this.sub( _vector$c.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n\t}\n\n\tangleTo( v ) {\n\n\t\tconst denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\n\n\t\tif ( denominator === 0 ) return Math.PI / 2;\n\n\t\tconst theta = this.dot( v ) / denominator;\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( clamp( theta, - 1, 1 ) );\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n\t\treturn dx * dx + dy * dy + dz * dz;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n\n\t}\n\n\tsetFromSpherical( s ) {\n\n\t\treturn this.setFromSphericalCoords( s.radius, s.phi, s.theta );\n\n\t}\n\n\tsetFromSphericalCoords( radius, phi, theta ) {\n\n\t\tconst sinPhiRadius = Math.sin( phi ) * radius;\n\n\t\tthis.x = sinPhiRadius * Math.sin( theta );\n\t\tthis.y = Math.cos( phi ) * radius;\n\t\tthis.z = sinPhiRadius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCylindrical( c ) {\n\n\t\treturn this.setFromCylindricalCoords( c.radius, c.theta, c.y );\n\n\t}\n\n\tsetFromCylindricalCoords( radius, theta, y ) {\n\n\t\tthis.x = radius * Math.sin( theta );\n\t\tthis.y = y;\n\t\tthis.z = radius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixPosition( m ) {\n\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 12 ];\n\t\tthis.y = e[ 13 ];\n\t\tthis.z = e[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixScale( m ) {\n\n\t\tconst sx = this.setFromMatrixColumn( m, 0 ).length();\n\t\tconst sy = this.setFromMatrixColumn( m, 1 ).length();\n\t\tconst sz = this.setFromMatrixColumn( m, 2 ).length();\n\n\t\tthis.x = sx;\n\t\tthis.y = sy;\n\t\tthis.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixColumn( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 4 );\n\n\t}\n\n\tsetFromMatrix3Column( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 3 );\n\n\t}\n\n\tsetFromEuler( e ) {\n\n\t\tthis.x = e._x;\n\t\tthis.y = e._y;\n\t\tthis.z = e._z;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\trandomDirection() {\n\n\t\t// Derived from https://mathworld.wolfram.com/SpherePointPicking.html\n\n\t\tconst u = ( Math.random() - 0.5 ) * 2;\n\t\tconst t = Math.random() * Math.PI * 2;\n\t\tconst f = Math.sqrt( 1 - u ** 2 );\n\n\t\tthis.x = f * Math.cos( t );\n\t\tthis.y = f * Math.sin( t );\n\t\tthis.z = u;\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\t\tyield this.z;\n\n\t}\n\n}\n\nVector3.prototype.isVector3 = true;\n\nconst _vector$c = /*@__PURE__*/ new Vector3();\nconst _quaternion$4 = /*@__PURE__*/ new Quaternion();\n\nclass Box3 {\n\n\tconstructor( min = new Vector3( + Infinity, + Infinity, + Infinity ), max = new Vector3( - Infinity, - Infinity, - Infinity ) ) {\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromArray( array ) {\n\n\t\tlet minX = + Infinity;\n\t\tlet minY = + Infinity;\n\t\tlet minZ = + Infinity;\n\n\t\tlet maxX = - Infinity;\n\t\tlet maxY = - Infinity;\n\t\tlet maxZ = - Infinity;\n\n\t\tfor ( let i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\tconst x = array[ i ];\n\t\t\tconst y = array[ i + 1 ];\n\t\t\tconst z = array[ i + 2 ];\n\n\t\t\tif ( x < minX ) minX = x;\n\t\t\tif ( y < minY ) minY = y;\n\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\tif ( x > maxX ) maxX = x;\n\t\t\tif ( y > maxY ) maxY = y;\n\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t}\n\n\t\tthis.min.set( minX, minY, minZ );\n\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromBufferAttribute( attribute ) {\n\n\t\tlet minX = + Infinity;\n\t\tlet minY = + Infinity;\n\t\tlet minZ = + Infinity;\n\n\t\tlet maxX = - Infinity;\n\t\tlet maxY = - Infinity;\n\t\tlet maxZ = - Infinity;\n\n\t\tfor ( let i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\tconst x = attribute.getX( i );\n\t\t\tconst y = attribute.getY( i );\n\t\t\tconst z = attribute.getZ( i );\n\n\t\t\tif ( x < minX ) minX = x;\n\t\t\tif ( y < minY ) minY = y;\n\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\tif ( x > maxX ) maxX = x;\n\t\t\tif ( y > maxY ) maxY = y;\n\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t}\n\n\t\tthis.min.set( minX, minY, minZ );\n\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector$b.copy( size ).multiplyScalar( 0.5 );\n\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromObject( object, precise = false ) {\n\n\t\tthis.makeEmpty();\n\n\t\treturn this.expandByObject( object, precise );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\n\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\texpandByObject( object, precise = false ) {\n\n\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\n\t\t// accounting for both the object's, and children's, world transforms\n\n\t\tobject.updateWorldMatrix( false, false );\n\n\t\tconst geometry = object.geometry;\n\n\t\tif ( geometry !== undefined ) {\n\n\t\t\tif ( precise && geometry.attributes != undefined && geometry.attributes.position !== undefined ) {\n\n\t\t\t\tconst position = geometry.attributes.position;\n\t\t\t\tfor ( let i = 0, l = position.count; i < l; i ++ ) {\n\n\t\t\t\t\t_vector$b.fromBufferAttribute( position, i ).applyMatrix4( object.matrixWorld );\n\t\t\t\t\tthis.expandByPoint( _vector$b );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( geometry.boundingBox === null ) {\n\n\t\t\t\t\tgeometry.computeBoundingBox();\n\n\t\t\t\t}\n\n\t\t\t\t_box$3.copy( geometry.boundingBox );\n\t\t\t\t_box$3.applyMatrix4( object.matrixWorld );\n\n\t\t\t\tthis.union( _box$3 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tthis.expandByObject( children[ i ], precise );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ||\n\t\t\tpoint.z < this.min.z || point.z > this.max.z ? false : true;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y &&\n\t\t\tthis.min.z <= box.min.z && box.max.z <= this.max.z;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\n\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 6 splitting planes to rule out intersections.\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ||\n\t\t\tbox.max.z < this.min.z || box.min.z > this.max.z ? false : true;\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\t// Find the point on the AABB closest to the sphere center.\n\t\tthis.clampPoint( sphere.center, _vector$b );\n\n\t\t// If that point is inside the sphere, the AABB and sphere intersect.\n\t\treturn _vector$b.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// We compute the minimum and maximum dot product values. If those values\n\t\t// are on the same side (back or front) of the plane, then there is no intersection.\n\n\t\tlet min, max;\n\n\t\tif ( plane.normal.x > 0 ) {\n\n\t\t\tmin = plane.normal.x * this.min.x;\n\t\t\tmax = plane.normal.x * this.max.x;\n\n\t\t} else {\n\n\t\t\tmin = plane.normal.x * this.max.x;\n\t\t\tmax = plane.normal.x * this.min.x;\n\n\t\t}\n\n\t\tif ( plane.normal.y > 0 ) {\n\n\t\t\tmin += plane.normal.y * this.min.y;\n\t\t\tmax += plane.normal.y * this.max.y;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.y * this.max.y;\n\t\t\tmax += plane.normal.y * this.min.y;\n\n\t\t}\n\n\t\tif ( plane.normal.z > 0 ) {\n\n\t\t\tmin += plane.normal.z * this.min.z;\n\t\t\tmax += plane.normal.z * this.max.z;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.z * this.max.z;\n\t\t\tmax += plane.normal.z * this.min.z;\n\n\t\t}\n\n\t\treturn ( min <= - plane.constant && max >= - plane.constant );\n\n\t}\n\n\tintersectsTriangle( triangle ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// compute box center and extents\n\t\tthis.getCenter( _center );\n\t\t_extents.subVectors( this.max, _center );\n\n\t\t// translate triangle to aabb origin\n\t\t_v0$2.subVectors( triangle.a, _center );\n\t\t_v1$7.subVectors( triangle.b, _center );\n\t\t_v2$3.subVectors( triangle.c, _center );\n\n\t\t// compute edge vectors for triangle\n\t\t_f0.subVectors( _v1$7, _v0$2 );\n\t\t_f1.subVectors( _v2$3, _v1$7 );\n\t\t_f2.subVectors( _v0$2, _v2$3 );\n\n\t\t// test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n\t\t// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n\t\t// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\n\t\tlet axes = [\n\t\t\t0, - _f0.z, _f0.y, 0, - _f1.z, _f1.y, 0, - _f2.z, _f2.y,\n\t\t\t_f0.z, 0, - _f0.x, _f1.z, 0, - _f1.x, _f2.z, 0, - _f2.x,\n\t\t\t- _f0.y, _f0.x, 0, - _f1.y, _f1.x, 0, - _f2.y, _f2.x, 0\n\t\t];\n\t\tif ( ! satForAxes( axes, _v0$2, _v1$7, _v2$3, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// test 3 face normals from the aabb\n\t\taxes = [ 1, 0, 0, 0, 1, 0, 0, 0, 1 ];\n\t\tif ( ! satForAxes( axes, _v0$2, _v1$7, _v2$3, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// finally testing the face normal of the triangle\n\t\t// use already existing triangle edge vectors here\n\t\t_triangleNormal.crossVectors( _f0, _f1 );\n\t\taxes = [ _triangleNormal.x, _triangleNormal.y, _triangleNormal.z ];\n\n\t\treturn satForAxes( axes, _v0$2, _v1$7, _v2$3, _extents );\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\tconst clampedPoint = _vector$b.copy( point ).clamp( this.min, this.max );\n\n\t\treturn clampedPoint.sub( point ).length();\n\n\t}\n\n\tgetBoundingSphere( target ) {\n\n\t\tthis.getCenter( target.center );\n\n\t\ttarget.radius = this.getSize( _vector$b ).length() * 0.5;\n\n\t\treturn target;\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\t// transform of empty box is an empty box.\n\t\tif ( this.isEmpty() ) return this;\n\n\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\t\t_points[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\n\t\t_points[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\n\t\t_points[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\n\t\t_points[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\n\t\t_points[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\n\t\t_points[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\n\t\t_points[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\n\t\t_points[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 111\n\n\t\tthis.setFromPoints( _points );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nBox3.prototype.isBox3 = true;\n\nconst _points = [\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3()\n];\n\nconst _vector$b = /*@__PURE__*/ new Vector3();\n\nconst _box$3 = /*@__PURE__*/ new Box3();\n\n// triangle centered vertices\n\nconst _v0$2 = /*@__PURE__*/ new Vector3();\nconst _v1$7 = /*@__PURE__*/ new Vector3();\nconst _v2$3 = /*@__PURE__*/ new Vector3();\n\n// triangle edge vectors\n\nconst _f0 = /*@__PURE__*/ new Vector3();\nconst _f1 = /*@__PURE__*/ new Vector3();\nconst _f2 = /*@__PURE__*/ new Vector3();\n\nconst _center = /*@__PURE__*/ new Vector3();\nconst _extents = /*@__PURE__*/ new Vector3();\nconst _triangleNormal = /*@__PURE__*/ new Vector3();\nconst _testAxis = /*@__PURE__*/ new Vector3();\n\nfunction satForAxes( axes, v0, v1, v2, extents ) {\n\n\tfor ( let i = 0, j = axes.length - 3; i <= j; i += 3 ) {\n\n\t\t_testAxis.fromArray( axes, i );\n\t\t// project the aabb onto the separating axis\n\t\tconst r = extents.x * Math.abs( _testAxis.x ) + extents.y * Math.abs( _testAxis.y ) + extents.z * Math.abs( _testAxis.z );\n\t\t// project all 3 vertices of the triangle onto the separating axis\n\t\tconst p0 = v0.dot( _testAxis );\n\t\tconst p1 = v1.dot( _testAxis );\n\t\tconst p2 = v2.dot( _testAxis );\n\t\t// actual test, basically see if either of the most extreme of the triangle points intersects r\n\t\tif ( Math.max( - Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\n\n\t\t\t// points of the projected triangle are outside the projected half-length of the aabb\n\t\t\t// the axis is separating and we can exit\n\t\t\treturn false;\n\n\t\t}\n\n\t}\n\n\treturn true;\n\n}\n\nconst _box$2 = /*@__PURE__*/ new Box3();\nconst _v1$6 = /*@__PURE__*/ new Vector3();\nconst _toFarthestPoint = /*@__PURE__*/ new Vector3();\nconst _toPoint = /*@__PURE__*/ new Vector3();\n\nclass Sphere {\n\n\tconstructor( center = new Vector3(), radius = - 1 ) {\n\n\t\tthis.center = center;\n\t\tthis.radius = radius;\n\n\t}\n\n\tset( center, radius ) {\n\n\t\tthis.center.copy( center );\n\t\tthis.radius = radius;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points, optionalCenter ) {\n\n\t\tconst center = this.center;\n\n\t\tif ( optionalCenter !== undefined ) {\n\n\t\t\tcenter.copy( optionalCenter );\n\n\t\t} else {\n\n\t\t\t_box$2.setFromPoints( points ).getCenter( center );\n\n\t\t}\n\n\t\tlet maxRadiusSq = 0;\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\n\n\t\t}\n\n\t\tthis.radius = Math.sqrt( maxRadiusSq );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( sphere ) {\n\n\t\tthis.center.copy( sphere.center );\n\t\tthis.radius = sphere.radius;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\treturn ( this.radius < 0 );\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.center.set( 0, 0, 0 );\n\t\tthis.radius = - 1;\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn ( point.distanceTo( this.center ) - this.radius );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst radiusSum = this.radius + sphere.radius;\n\n\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsSphere( this );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\treturn Math.abs( plane.distanceToPoint( this.center ) ) <= this.radius;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\tconst deltaLengthSq = this.center.distanceToSquared( point );\n\n\t\ttarget.copy( point );\n\n\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\ttarget.sub( this.center ).normalize();\n\t\t\ttarget.multiplyScalar( this.radius ).add( this.center );\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\tgetBoundingBox( target ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\t// Empty sphere produces empty bounding box\n\t\t\ttarget.makeEmpty();\n\t\t\treturn target;\n\n\t\t}\n\n\t\ttarget.set( this.center, this.center );\n\t\ttarget.expandByScalar( this.radius );\n\n\t\treturn target;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tthis.center.applyMatrix4( matrix );\n\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.center.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\t// from https://github.com/juj/MathGeoLib/blob/2940b99b99cfe575dd45103ef20f4019dee15b54/src/Geometry/Sphere.cpp#L649-L671\n\n\t\t_toPoint.subVectors( point, this.center );\n\n\t\tconst lengthSq = _toPoint.lengthSq();\n\n\t\tif ( lengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\tconst length = Math.sqrt( lengthSq );\n\t\t\tconst missingRadiusHalf = ( length - this.radius ) * 0.5;\n\n\t\t\t// Nudge this sphere towards the target point. Add half the missing distance to radius,\n\t\t\t// and the other half to position. This gives a tighter enclosure, instead of if\n\t\t\t// the whole missing distance were just added to radius.\n\n\t\t\tthis.center.add( _toPoint.multiplyScalar( missingRadiusHalf / length ) );\n\t\t\tthis.radius += missingRadiusHalf;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tunion( sphere ) {\n\n\t\t// from https://github.com/juj/MathGeoLib/blob/2940b99b99cfe575dd45103ef20f4019dee15b54/src/Geometry/Sphere.cpp#L759-L769\n\n\t\t// To enclose another sphere into this sphere, we only need to enclose two points:\n\t\t// 1) Enclose the farthest point on the other sphere into this sphere.\n\t\t// 2) Enclose the opposite point of the farthest point into this sphere.\n\n\t\t if ( this.center.equals( sphere.center ) === true ) {\n\n\t\t\t _toFarthestPoint.set( 0, 0, 1 ).multiplyScalar( sphere.radius );\n\n\n\t\t} else {\n\n\t\t\t_toFarthestPoint.subVectors( sphere.center, this.center ).normalize().multiplyScalar( sphere.radius );\n\n\t\t}\n\n\t\tthis.expandByPoint( _v1$6.copy( sphere.center ).add( _toFarthestPoint ) );\n\t\tthis.expandByPoint( _v1$6.copy( sphere.center ).sub( _toFarthestPoint ) );\n\n\t\treturn this;\n\n\t}\n\n\tequals( sphere ) {\n\n\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$a = /*@__PURE__*/ new Vector3();\nconst _segCenter = /*@__PURE__*/ new Vector3();\nconst _segDir = /*@__PURE__*/ new Vector3();\nconst _diff = /*@__PURE__*/ new Vector3();\n\nconst _edge1 = /*@__PURE__*/ new Vector3();\nconst _edge2 = /*@__PURE__*/ new Vector3();\nconst _normal$1 = /*@__PURE__*/ new Vector3();\n\nclass Ray {\n\n\tconstructor( origin = new Vector3(), direction = new Vector3( 0, 0, - 1 ) ) {\n\n\t\tthis.origin = origin;\n\t\tthis.direction = direction;\n\n\t}\n\n\tset( origin, direction ) {\n\n\t\tthis.origin.copy( origin );\n\t\tthis.direction.copy( direction );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( ray ) {\n\n\t\tthis.origin.copy( ray.origin );\n\t\tthis.direction.copy( ray.direction );\n\n\t\treturn this;\n\n\t}\n\n\tat( t, target ) {\n\n\t\treturn target.copy( this.direction ).multiplyScalar( t ).add( this.origin );\n\n\t}\n\n\tlookAt( v ) {\n\n\t\tthis.direction.copy( v ).sub( this.origin ).normalize();\n\n\t\treturn this;\n\n\t}\n\n\trecast( t ) {\n\n\t\tthis.origin.copy( this.at( t, _vector$a ) );\n\n\t\treturn this;\n\n\t}\n\n\tclosestPointToPoint( point, target ) {\n\n\t\ttarget.subVectors( point, this.origin );\n\n\t\tconst directionDistance = target.dot( this.direction );\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn target.copy( this.origin );\n\n\t\t}\n\n\t\treturn target.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\n\n\t}\n\n\tdistanceSqToPoint( point ) {\n\n\t\tconst directionDistance = _vector$a.subVectors( point, this.origin ).dot( this.direction );\n\n\t\t// point behind the ray\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn this.origin.distanceToSquared( point );\n\n\t\t}\n\n\t\t_vector$a.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t\treturn _vector$a.distanceToSquared( point );\n\n\t}\n\n\tdistanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\n\n\t\t// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteDistRaySegment.h\n\t\t// It returns the min distance between the ray and the segment\n\t\t// defined by v0 and v1\n\t\t// It can also set two optional targets :\n\t\t// - The closest point on the ray\n\t\t// - The closest point on the segment\n\n\t\t_segCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\n\t\t_segDir.copy( v1 ).sub( v0 ).normalize();\n\t\t_diff.copy( this.origin ).sub( _segCenter );\n\n\t\tconst segExtent = v0.distanceTo( v1 ) * 0.5;\n\t\tconst a01 = - this.direction.dot( _segDir );\n\t\tconst b0 = _diff.dot( this.direction );\n\t\tconst b1 = - _diff.dot( _segDir );\n\t\tconst c = _diff.lengthSq();\n\t\tconst det = Math.abs( 1 - a01 * a01 );\n\t\tlet s0, s1, sqrDist, extDet;\n\n\t\tif ( det > 0 ) {\n\n\t\t\t// The ray and segment are not parallel.\n\n\t\t\ts0 = a01 * b1 - b0;\n\t\t\ts1 = a01 * b0 - b1;\n\t\t\textDet = segExtent * det;\n\n\t\t\tif ( s0 >= 0 ) {\n\n\t\t\t\tif ( s1 >= - extDet ) {\n\n\t\t\t\t\tif ( s1 <= extDet ) {\n\n\t\t\t\t\t\t// region 0\n\t\t\t\t\t\t// Minimum at interior points of ray and segment.\n\n\t\t\t\t\t\tconst invDet = 1 / det;\n\t\t\t\t\t\ts0 *= invDet;\n\t\t\t\t\t\ts1 *= invDet;\n\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 1\n\n\t\t\t\t\t\ts1 = segExtent;\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 5\n\n\t\t\t\t\ts1 = - segExtent;\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( s1 <= - extDet ) {\n\n\t\t\t\t\t// region 4\n\n\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else if ( s1 <= extDet ) {\n\n\t\t\t\t\t// region 3\n\n\t\t\t\t\ts0 = 0;\n\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 2\n\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// Ray and segment are parallel.\n\n\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\n\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t}\n\n\t\tif ( optionalPointOnRay ) {\n\n\t\t\toptionalPointOnRay.copy( this.direction ).multiplyScalar( s0 ).add( this.origin );\n\n\t\t}\n\n\t\tif ( optionalPointOnSegment ) {\n\n\t\t\toptionalPointOnSegment.copy( _segDir ).multiplyScalar( s1 ).add( _segCenter );\n\n\t\t}\n\n\t\treturn sqrDist;\n\n\t}\n\n\tintersectSphere( sphere, target ) {\n\n\t\t_vector$a.subVectors( sphere.center, this.origin );\n\t\tconst tca = _vector$a.dot( this.direction );\n\t\tconst d2 = _vector$a.dot( _vector$a ) - tca * tca;\n\t\tconst radius2 = sphere.radius * sphere.radius;\n\n\t\tif ( d2 > radius2 ) return null;\n\n\t\tconst thc = Math.sqrt( radius2 - d2 );\n\n\t\t// t0 = first intersect point - entrance on front of sphere\n\t\tconst t0 = tca - thc;\n\n\t\t// t1 = second intersect point - exit point on back of sphere\n\t\tconst t1 = tca + thc;\n\n\t\t// test to see if both t0 and t1 are behind the ray - if so, return null\n\t\tif ( t0 < 0 && t1 < 0 ) return null;\n\n\t\t// test to see if t0 is behind the ray:\n\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n\t\t// in order to always return an intersect point that is in front of the ray.\n\t\tif ( t0 < 0 ) return this.at( t1, target );\n\n\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\n\t\treturn this.at( t0, target );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn this.distanceSqToPoint( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tdistanceToPlane( plane ) {\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\n\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\n\n\t\t// Return if the ray never intersects the plane\n\n\t\treturn t >= 0 ? t : null;\n\n\t}\n\n\tintersectPlane( plane, target ) {\n\n\t\tconst t = this.distanceToPlane( plane );\n\n\t\tif ( t === null ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn this.at( t, target );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// check if the ray lies on the plane first\n\n\t\tconst distToPoint = plane.distanceToPoint( this.origin );\n\n\t\tif ( distToPoint === 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator * distToPoint < 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\t// ray origin is behind the plane (and is pointing behind it)\n\n\t\treturn false;\n\n\t}\n\n\tintersectBox( box, target ) {\n\n\t\tlet tmin, tmax, tymin, tymax, tzmin, tzmax;\n\n\t\tconst invdirx = 1 / this.direction.x,\n\t\t\tinvdiry = 1 / this.direction.y,\n\t\t\tinvdirz = 1 / this.direction.z;\n\n\t\tconst origin = this.origin;\n\n\t\tif ( invdirx >= 0 ) {\n\n\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\n\n\t\t} else {\n\n\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\n\n\t\t}\n\n\t\tif ( invdiry >= 0 ) {\n\n\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\n\n\t\t} else {\n\n\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\n\n\t\t}\n\n\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\n\n\t\t// These lines also handle the case where tmin or tmax is NaN\n\t\t// (result of 0 * Infinity). x !== x returns true if x is NaN\n\n\t\tif ( tymin > tmin || tmin !== tmin ) tmin = tymin;\n\n\t\tif ( tymax < tmax || tmax !== tmax ) tmax = tymax;\n\n\t\tif ( invdirz >= 0 ) {\n\n\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\n\n\t\t} else {\n\n\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\n\n\t\t}\n\n\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\n\n\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\n\n\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\n\n\t\t//return point closest to the ray (positive side)\n\n\t\tif ( tmax < 0 ) return null;\n\n\t\treturn this.at( tmin >= 0 ? tmin : tmax, target );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn this.intersectBox( box, _vector$a ) !== null;\n\n\t}\n\n\tintersectTriangle( a, b, c, backfaceCulling, target ) {\n\n\t\t// Compute the offset origin, edges, and normal.\n\n\t\t// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n\n\t\t_edge1.subVectors( b, a );\n\t\t_edge2.subVectors( c, a );\n\t\t_normal$1.crossVectors( _edge1, _edge2 );\n\n\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\t\tlet DdN = this.direction.dot( _normal$1 );\n\t\tlet sign;\n\n\t\tif ( DdN > 0 ) {\n\n\t\t\tif ( backfaceCulling ) return null;\n\t\t\tsign = 1;\n\n\t\t} else if ( DdN < 0 ) {\n\n\t\t\tsign = - 1;\n\t\t\tDdN = - DdN;\n\n\t\t} else {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t_diff.subVectors( this.origin, a );\n\t\tconst DdQxE2 = sign * this.direction.dot( _edge2.crossVectors( _diff, _edge2 ) );\n\n\t\t// b1 < 0, no intersection\n\t\tif ( DdQxE2 < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst DdE1xQ = sign * this.direction.dot( _edge1.cross( _diff ) );\n\n\t\t// b2 < 0, no intersection\n\t\tif ( DdE1xQ < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// b1+b2 > 1, no intersection\n\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Line intersects triangle, check if ray does.\n\t\tconst QdN = - sign * _diff.dot( _normal$1 );\n\n\t\t// t < 0, no intersection\n\t\tif ( QdN < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Ray intersects triangle.\n\t\treturn this.at( QdN / DdN, target );\n\n\t}\n\n\tapplyMatrix4( matrix4 ) {\n\n\t\tthis.origin.applyMatrix4( matrix4 );\n\t\tthis.direction.transformDirection( matrix4 );\n\n\t\treturn this;\n\n\t}\n\n\tequals( ray ) {\n\n\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass Matrix4 {\n\n\tconstructor() {\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t];\n\n\t\tif ( arguments.length > 0 ) {\n\n\t\t\tconsole.error( 'THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.' );\n\n\t\t}\n\n\t}\n\n\tset( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\n\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\n\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\n\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Matrix4().fromArray( this.elements );\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];\n\t\tte[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];\n\t\tte[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];\n\t\tte[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];\n\n\t\treturn this;\n\n\t}\n\n\tcopyPosition( m ) {\n\n\t\tconst te = this.elements, me = m.elements;\n\n\t\tte[ 12 ] = me[ 12 ];\n\t\tte[ 13 ] = me[ 13 ];\n\t\tte[ 14 ] = me[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix3( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 3 ], me[ 6 ], 0,\n\t\t\tme[ 1 ], me[ 4 ], me[ 7 ], 0,\n\t\t\tme[ 2 ], me[ 5 ], me[ 8 ], 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrixColumn( this, 0 );\n\t\tyAxis.setFromMatrixColumn( this, 1 );\n\t\tzAxis.setFromMatrixColumn( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tmakeBasis( xAxis, yAxis, zAxis ) {\n\n\t\tthis.set(\n\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\n\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\n\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\n\t\t\t0, 0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractRotation( m ) {\n\n\t\t// this method does not support reflection matrices\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tconst scaleX = 1 / _v1$5.setFromMatrixColumn( m, 0 ).length();\n\t\tconst scaleY = 1 / _v1$5.setFromMatrixColumn( m, 1 ).length();\n\t\tconst scaleZ = 1 / _v1$5.setFromMatrixColumn( m, 2 ).length();\n\n\t\tte[ 0 ] = me[ 0 ] * scaleX;\n\t\tte[ 1 ] = me[ 1 ] * scaleX;\n\t\tte[ 2 ] = me[ 2 ] * scaleX;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = me[ 4 ] * scaleY;\n\t\tte[ 5 ] = me[ 5 ] * scaleY;\n\t\tte[ 6 ] = me[ 6 ] * scaleY;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = me[ 8 ] * scaleZ;\n\t\tte[ 9 ] = me[ 9 ] * scaleZ;\n\t\tte[ 10 ] = me[ 10 ] * scaleZ;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromEuler( euler ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\tconst te = this.elements;\n\n\t\tconst x = euler.x, y = euler.y, z = euler.z;\n\t\tconst a = Math.cos( x ), b = Math.sin( x );\n\t\tconst c = Math.cos( y ), d = Math.sin( y );\n\t\tconst e = Math.cos( z ), f = Math.sin( z );\n\n\t\tif ( euler.order === 'XYZ' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - c * f;\n\t\t\tte[ 8 ] = d;\n\n\t\t\tte[ 1 ] = af + be * d;\n\t\t\tte[ 5 ] = ae - bf * d;\n\t\t\tte[ 9 ] = - b * c;\n\n\t\t\tte[ 2 ] = bf - ae * d;\n\t\t\tte[ 6 ] = be + af * d;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YXZ' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce + df * b;\n\t\t\tte[ 4 ] = de * b - cf;\n\t\t\tte[ 8 ] = a * d;\n\n\t\t\tte[ 1 ] = a * f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b;\n\n\t\t\tte[ 2 ] = cf * b - de;\n\t\t\tte[ 6 ] = df + ce * b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZXY' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce - df * b;\n\t\t\tte[ 4 ] = - a * f;\n\t\t\tte[ 8 ] = de + cf * b;\n\n\t\t\tte[ 1 ] = cf + de * b;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = df - ce * b;\n\n\t\t\tte[ 2 ] = - a * d;\n\t\t\tte[ 6 ] = b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZYX' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = be * d - af;\n\t\t\tte[ 8 ] = ae * d + bf;\n\n\t\t\tte[ 1 ] = c * f;\n\t\t\tte[ 5 ] = bf * d + ae;\n\t\t\tte[ 9 ] = af * d - be;\n\n\t\t\tte[ 2 ] = - d;\n\t\t\tte[ 6 ] = b * c;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YZX' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = bd - ac * f;\n\t\t\tte[ 8 ] = bc * f + ad;\n\n\t\t\tte[ 1 ] = f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b * e;\n\n\t\t\tte[ 2 ] = - d * e;\n\t\t\tte[ 6 ] = ad * f + bc;\n\t\t\tte[ 10 ] = ac - bd * f;\n\n\t\t} else if ( euler.order === 'XZY' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - f;\n\t\t\tte[ 8 ] = d * e;\n\n\t\t\tte[ 1 ] = ac * f + bd;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = ad * f - bc;\n\n\t\t\tte[ 2 ] = bc * f - ad;\n\t\t\tte[ 6 ] = b * e;\n\t\t\tte[ 10 ] = bd * f + ac;\n\n\t\t}\n\n\t\t// bottom row\n\t\tte[ 3 ] = 0;\n\t\tte[ 7 ] = 0;\n\t\tte[ 11 ] = 0;\n\n\t\t// last column\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromQuaternion( q ) {\n\n\t\treturn this.compose( _zero, q, _one );\n\n\t}\n\n\tlookAt( eye, target, up ) {\n\n\t\tconst te = this.elements;\n\n\t\t_z.subVectors( eye, target );\n\n\t\tif ( _z.lengthSq() === 0 ) {\n\n\t\t\t// eye and target are in the same position\n\n\t\t\t_z.z = 1;\n\n\t\t}\n\n\t\t_z.normalize();\n\t\t_x.crossVectors( up, _z );\n\n\t\tif ( _x.lengthSq() === 0 ) {\n\n\t\t\t// up and z are parallel\n\n\t\t\tif ( Math.abs( up.z ) === 1 ) {\n\n\t\t\t\t_z.x += 0.0001;\n\n\t\t\t} else {\n\n\t\t\t\t_z.z += 0.0001;\n\n\t\t\t}\n\n\t\t\t_z.normalize();\n\t\t\t_x.crossVectors( up, _z );\n\n\t\t}\n\n\t\t_x.normalize();\n\t\t_y.crossVectors( _z, _x );\n\n\t\tte[ 0 ] = _x.x; te[ 4 ] = _y.x; te[ 8 ] = _z.x;\n\t\tte[ 1 ] = _x.y; te[ 5 ] = _y.y; te[ 9 ] = _z.y;\n\t\tte[ 2 ] = _x.z; te[ 6 ] = _y.z; te[ 10 ] = _z.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m, n ) {\n\n\t\tif ( n !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.' );\n\t\t\treturn this.multiplyMatrices( m, n );\n\n\t\t}\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\n\t\tconst a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\n\t\tconst b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\n\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\n\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\n\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\n\t\tconst n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\n\t\tconst n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\n\t\tconst n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\n\n\t\t//TODO: make this more efficient\n\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\treturn (\n\t\t\tn41 * (\n\t\t\t\t+ n14 * n23 * n32\n\t\t\t\t - n13 * n24 * n32\n\t\t\t\t - n14 * n22 * n33\n\t\t\t\t + n12 * n24 * n33\n\t\t\t\t + n13 * n22 * n34\n\t\t\t\t - n12 * n23 * n34\n\t\t\t) +\n\t\t\tn42 * (\n\t\t\t\t+ n11 * n23 * n34\n\t\t\t\t - n11 * n24 * n33\n\t\t\t\t + n14 * n21 * n33\n\t\t\t\t - n13 * n21 * n34\n\t\t\t\t + n13 * n24 * n31\n\t\t\t\t - n14 * n23 * n31\n\t\t\t) +\n\t\t\tn43 * (\n\t\t\t\t+ n11 * n24 * n32\n\t\t\t\t - n11 * n22 * n34\n\t\t\t\t - n14 * n21 * n32\n\t\t\t\t + n12 * n21 * n34\n\t\t\t\t + n14 * n22 * n31\n\t\t\t\t - n12 * n24 * n31\n\t\t\t) +\n\t\t\tn44 * (\n\t\t\t\t- n13 * n22 * n31\n\t\t\t\t - n11 * n23 * n32\n\t\t\t\t + n11 * n22 * n33\n\t\t\t\t + n13 * n21 * n32\n\t\t\t\t - n12 * n21 * n33\n\t\t\t\t + n12 * n23 * n31\n\t\t\t)\n\n\t\t);\n\n\t}\n\n\ttranspose() {\n\n\t\tconst te = this.elements;\n\t\tlet tmp;\n\n\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\n\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\n\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\n\n\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\n\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\n\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tsetPosition( x, y, z ) {\n\n\t\tconst te = this.elements;\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\tte[ 12 ] = x.x;\n\t\t\tte[ 13 ] = x.y;\n\t\t\tte[ 14 ] = x.z;\n\n\t\t} else {\n\n\t\t\tte[ 12 ] = x;\n\t\t\tte[ 13 ] = y;\n\t\t\tte[ 14 ] = z;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tinvert() {\n\n\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ], n41 = te[ 3 ],\n\t\t\tn12 = te[ 4 ], n22 = te[ 5 ], n32 = te[ 6 ], n42 = te[ 7 ],\n\t\t\tn13 = te[ 8 ], n23 = te[ 9 ], n33 = te[ 10 ], n43 = te[ 11 ],\n\t\t\tn14 = te[ 12 ], n24 = te[ 13 ], n34 = te[ 14 ], n44 = te[ 15 ],\n\n\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\n\t\tconst det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\n\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\n\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\n\n\t\tte[ 4 ] = t12 * detInv;\n\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\n\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\n\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\n\n\t\tte[ 8 ] = t13 * detInv;\n\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\n\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\n\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\n\n\t\tte[ 12 ] = t14 * detInv;\n\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\n\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\n\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\tscale( v ) {\n\n\t\tconst te = this.elements;\n\t\tconst x = v.x, y = v.y, z = v.z;\n\n\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\n\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\n\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\n\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxScaleOnAxis() {\n\n\t\tconst te = this.elements;\n\n\t\tconst scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\n\t\tconst scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\n\t\tconst scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\n\n\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\n\n\t}\n\n\tmakeTranslation( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, x,\n\t\t\t0, 1, 0, y,\n\t\t\t0, 0, 1, z,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationX( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, c, - s, 0,\n\t\t\t0, s, c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationY( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t c, 0, s, 0,\n\t\t\t 0, 1, 0, 0,\n\t\t\t- s, 0, c, 0,\n\t\t\t 0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationZ( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0, 0,\n\t\t\ts, c, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationAxis( axis, angle ) {\n\n\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n\t\tconst c = Math.cos( angle );\n\t\tconst s = Math.sin( angle );\n\t\tconst t = 1 - c;\n\t\tconst x = axis.x, y = axis.y, z = axis.z;\n\t\tconst tx = t * x, ty = t * y;\n\n\t\tthis.set(\n\n\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\n\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\n\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeScale( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0, 0,\n\t\t\t0, y, 0, 0,\n\t\t\t0, 0, z, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeShear( xy, xz, yx, yz, zx, zy ) {\n\n\t\tthis.set(\n\n\t\t\t1, yx, zx, 0,\n\t\t\txy, 1, zy, 0,\n\t\t\txz, yz, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tconst x = quaternion._x, y = quaternion._y, z = quaternion._z, w = quaternion._w;\n\t\tconst x2 = x + x,\ty2 = y + y, z2 = z + z;\n\t\tconst xx = x * x2, xy = x * y2, xz = x * z2;\n\t\tconst yy = y * y2, yz = y * z2, zz = z * z2;\n\t\tconst wx = w * x2, wy = w * y2, wz = w * z2;\n\n\t\tconst sx = scale.x, sy = scale.y, sz = scale.z;\n\n\t\tte[ 0 ] = ( 1 - ( yy + zz ) ) * sx;\n\t\tte[ 1 ] = ( xy + wz ) * sx;\n\t\tte[ 2 ] = ( xz - wy ) * sx;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = ( xy - wz ) * sy;\n\t\tte[ 5 ] = ( 1 - ( xx + zz ) ) * sy;\n\t\tte[ 6 ] = ( yz + wx ) * sy;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = ( xz + wy ) * sz;\n\t\tte[ 9 ] = ( yz - wx ) * sz;\n\t\tte[ 10 ] = ( 1 - ( xx + yy ) ) * sz;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = position.x;\n\t\tte[ 13 ] = position.y;\n\t\tte[ 14 ] = position.z;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tdecompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tlet sx = _v1$5.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\n\t\tconst sy = _v1$5.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\n\t\tconst sz = _v1$5.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\n\n\t\t// if determine is negative, we need to invert one scale\n\t\tconst det = this.determinant();\n\t\tif ( det < 0 ) sx = - sx;\n\n\t\tposition.x = te[ 12 ];\n\t\tposition.y = te[ 13 ];\n\t\tposition.z = te[ 14 ];\n\n\t\t// scale the rotation part\n\t\t_m1$2.copy( this );\n\n\t\tconst invSX = 1 / sx;\n\t\tconst invSY = 1 / sy;\n\t\tconst invSZ = 1 / sz;\n\n\t\t_m1$2.elements[ 0 ] *= invSX;\n\t\t_m1$2.elements[ 1 ] *= invSX;\n\t\t_m1$2.elements[ 2 ] *= invSX;\n\n\t\t_m1$2.elements[ 4 ] *= invSY;\n\t\t_m1$2.elements[ 5 ] *= invSY;\n\t\t_m1$2.elements[ 6 ] *= invSY;\n\n\t\t_m1$2.elements[ 8 ] *= invSZ;\n\t\t_m1$2.elements[ 9 ] *= invSZ;\n\t\t_m1$2.elements[ 10 ] *= invSZ;\n\n\t\tquaternion.setFromRotationMatrix( _m1$2 );\n\n\t\tscale.x = sx;\n\t\tscale.y = sy;\n\t\tscale.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tmakePerspective( left, right, top, bottom, near, far ) {\n\n\t\tif ( far === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.' );\n\n\t\t}\n\n\t\tconst te = this.elements;\n\t\tconst x = 2 * near / ( right - left );\n\t\tconst y = 2 * near / ( top - bottom );\n\n\t\tconst a = ( right + left ) / ( right - left );\n\t\tconst b = ( top + bottom ) / ( top - bottom );\n\t\tconst c = - ( far + near ) / ( far - near );\n\t\tconst d = - 2 * far * near / ( far - near );\n\n\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a;\tte[ 12 ] = 0;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b;\tte[ 13 ] = 0;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c;\tte[ 14 ] = d;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\n\n\t\treturn this;\n\n\t}\n\n\tmakeOrthographic( left, right, top, bottom, near, far ) {\n\n\t\tconst te = this.elements;\n\t\tconst w = 1.0 / ( right - left );\n\t\tconst h = 1.0 / ( top - bottom );\n\t\tconst p = 1.0 / ( far - near );\n\n\t\tconst x = ( right + left ) * w;\n\t\tconst y = ( top + bottom ) * h;\n\t\tconst z = ( far + near ) * p;\n\n\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\tte[ 8 ] = 0;\tte[ 12 ] = - x;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0;\tte[ 13 ] = - y;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = - 2 * p;\tte[ 14 ] = - z;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = 0;\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\t\tarray[ offset + 9 ] = te[ 9 ];\n\t\tarray[ offset + 10 ] = te[ 10 ];\n\t\tarray[ offset + 11 ] = te[ 11 ];\n\n\t\tarray[ offset + 12 ] = te[ 12 ];\n\t\tarray[ offset + 13 ] = te[ 13 ];\n\t\tarray[ offset + 14 ] = te[ 14 ];\n\t\tarray[ offset + 15 ] = te[ 15 ];\n\n\t\treturn array;\n\n\t}\n\n}\n\nMatrix4.prototype.isMatrix4 = true;\n\nconst _v1$5 = /*@__PURE__*/ new Vector3();\nconst _m1$2 = /*@__PURE__*/ new Matrix4();\nconst _zero = /*@__PURE__*/ new Vector3( 0, 0, 0 );\nconst _one = /*@__PURE__*/ new Vector3( 1, 1, 1 );\nconst _x = /*@__PURE__*/ new Vector3();\nconst _y = /*@__PURE__*/ new Vector3();\nconst _z = /*@__PURE__*/ new Vector3();\n\nconst _matrix$1 = /*@__PURE__*/ new Matrix4();\nconst _quaternion$3 = /*@__PURE__*/ new Quaternion();\n\nclass Euler {\n\n\tconstructor( x = 0, y = 0, z = 0, order = Euler.DefaultOrder ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget order() {\n\n\t\treturn this._order;\n\n\t}\n\n\tset order( value ) {\n\n\t\tthis._order = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, order = this._order ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\n\n\t}\n\n\tcopy( euler ) {\n\n\t\tthis._x = euler._x;\n\t\tthis._y = euler._y;\n\t\tthis._z = euler._z;\n\t\tthis._order = euler._order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m, order = this._order, update = true ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements;\n\t\tconst m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\n\t\tconst m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\n\t\tconst m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\n\t\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m13 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\n\t\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m23 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\n\t\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m32 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = 0;\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\n\t\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m31 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\n\t\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m21 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m22 );\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\n\t\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m12 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._y = Math.atan2( m13, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._y = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tthis._order = order;\n\n\t\tif ( update === true ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromQuaternion( q, order, update ) {\n\n\t\t_matrix$1.makeRotationFromQuaternion( q );\n\n\t\treturn this.setFromRotationMatrix( _matrix$1, order, update );\n\n\t}\n\n\tsetFromVector3( v, order = this._order ) {\n\n\t\treturn this.set( v.x, v.y, v.z, order );\n\n\t}\n\n\treorder( newOrder ) {\n\n\t\t// WARNING: this discards revolution information -bhouston\n\n\t\t_quaternion$3.setFromEuler( this );\n\n\t\treturn this.setFromQuaternion( _quaternion$3, newOrder );\n\n\t}\n\n\tequals( euler ) {\n\n\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\n\n\t}\n\n\tfromArray( array ) {\n\n\t\tthis._x = array[ 0 ];\n\t\tthis._y = array[ 1 ];\n\t\tthis._z = array[ 2 ];\n\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._order;\n\n\t\treturn array;\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this._x;\n\t\tyield this._y;\n\t\tyield this._z;\n\t\tyield this._order;\n\n\t}\n\n}\n\nEuler.prototype.isEuler = true;\n\nEuler.DefaultOrder = 'XYZ';\nEuler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];\n\nclass Layers {\n\n\tconstructor() {\n\n\t\tthis.mask = 1 | 0;\n\n\t}\n\n\tset( channel ) {\n\n\t\tthis.mask = ( 1 << channel | 0 ) >>> 0;\n\n\t}\n\n\tenable( channel ) {\n\n\t\tthis.mask |= 1 << channel | 0;\n\n\t}\n\n\tenableAll() {\n\n\t\tthis.mask = 0xffffffff | 0;\n\n\t}\n\n\ttoggle( channel ) {\n\n\t\tthis.mask ^= 1 << channel | 0;\n\n\t}\n\n\tdisable( channel ) {\n\n\t\tthis.mask &= ~ ( 1 << channel | 0 );\n\n\t}\n\n\tdisableAll() {\n\n\t\tthis.mask = 0;\n\n\t}\n\n\ttest( layers ) {\n\n\t\treturn ( this.mask & layers.mask ) !== 0;\n\n\t}\n\n\tisEnabled( channel ) {\n\n\t\treturn ( this.mask & ( 1 << channel | 0 ) ) !== 0;\n\n\t}\n\n}\n\nlet _object3DId = 0;\n\nconst _v1$4 = /*@__PURE__*/ new Vector3();\nconst _q1 = /*@__PURE__*/ new Quaternion();\nconst _m1$1 = /*@__PURE__*/ new Matrix4();\nconst _target = /*@__PURE__*/ new Vector3();\n\nconst _position$3 = /*@__PURE__*/ new Vector3();\nconst _scale$2 = /*@__PURE__*/ new Vector3();\nconst _quaternion$2 = /*@__PURE__*/ new Quaternion();\n\nconst _xAxis = /*@__PURE__*/ new Vector3( 1, 0, 0 );\nconst _yAxis = /*@__PURE__*/ new Vector3( 0, 1, 0 );\nconst _zAxis = /*@__PURE__*/ new Vector3( 0, 0, 1 );\n\nconst _addedEvent = { type: 'added' };\nconst _removedEvent = { type: 'removed' };\n\nclass Object3D extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tObject.defineProperty( this, 'id', { value: _object3DId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Object3D';\n\n\t\tthis.parent = null;\n\t\tthis.children = [];\n\n\t\tthis.up = Object3D.DefaultUp.clone();\n\n\t\tconst position = new Vector3();\n\t\tconst rotation = new Euler();\n\t\tconst quaternion = new Quaternion();\n\t\tconst scale = new Vector3( 1, 1, 1 );\n\n\t\tfunction onRotationChange() {\n\n\t\t\tquaternion.setFromEuler( rotation, false );\n\n\t\t}\n\n\t\tfunction onQuaternionChange() {\n\n\t\t\trotation.setFromQuaternion( quaternion, undefined, false );\n\n\t\t}\n\n\t\trotation._onChange( onRotationChange );\n\t\tquaternion._onChange( onQuaternionChange );\n\n\t\tObject.defineProperties( this, {\n\t\t\tposition: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: position\n\t\t\t},\n\t\t\trotation: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: rotation\n\t\t\t},\n\t\t\tquaternion: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: quaternion\n\t\t\t},\n\t\t\tscale: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: scale\n\t\t\t},\n\t\t\tmodelViewMatrix: {\n\t\t\t\tvalue: new Matrix4()\n\t\t\t},\n\t\t\tnormalMatrix: {\n\t\t\t\tvalue: new Matrix3()\n\t\t\t}\n\t\t} );\n\n\t\tthis.matrix = new Matrix4();\n\t\tthis.matrixWorld = new Matrix4();\n\n\t\tthis.matrixAutoUpdate = Object3D.DefaultMatrixAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\tthis.layers = new Layers();\n\t\tthis.visible = true;\n\n\t\tthis.castShadow = false;\n\t\tthis.receiveShadow = false;\n\n\t\tthis.frustumCulled = true;\n\t\tthis.renderOrder = 0;\n\n\t\tthis.animations = [];\n\n\t\tthis.userData = {};\n\n\t}\n\n\tonBeforeRender( /* renderer, scene, camera, geometry, material, group */ ) {}\n\n\tonAfterRender( /* renderer, scene, camera, geometry, material, group */ ) {}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tthis.matrix.premultiply( matrix );\n\n\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\tthis.quaternion.premultiply( q );\n\n\t\treturn this;\n\n\t}\n\n\tsetRotationFromAxisAngle( axis, angle ) {\n\n\t\t// assumes axis is normalized\n\n\t\tthis.quaternion.setFromAxisAngle( axis, angle );\n\n\t}\n\n\tsetRotationFromEuler( euler ) {\n\n\t\tthis.quaternion.setFromEuler( euler, true );\n\n\t}\n\n\tsetRotationFromMatrix( m ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tthis.quaternion.setFromRotationMatrix( m );\n\n\t}\n\n\tsetRotationFromQuaternion( q ) {\n\n\t\t// assumes q is normalized\n\n\t\tthis.quaternion.copy( q );\n\n\t}\n\n\trotateOnAxis( axis, angle ) {\n\n\t\t// rotate object on axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.multiply( _q1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateOnWorldAxis( axis, angle ) {\n\n\t\t// rotate object on axis in world space\n\t\t// axis is assumed to be normalized\n\t\t// method assumes no rotated parent\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.premultiply( _q1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateX( angle ) {\n\n\t\treturn this.rotateOnAxis( _xAxis, angle );\n\n\t}\n\n\trotateY( angle ) {\n\n\t\treturn this.rotateOnAxis( _yAxis, angle );\n\n\t}\n\n\trotateZ( angle ) {\n\n\t\treturn this.rotateOnAxis( _zAxis, angle );\n\n\t}\n\n\ttranslateOnAxis( axis, distance ) {\n\n\t\t// translate object by distance along axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_v1$4.copy( axis ).applyQuaternion( this.quaternion );\n\n\t\tthis.position.add( _v1$4.multiplyScalar( distance ) );\n\n\t\treturn this;\n\n\t}\n\n\ttranslateX( distance ) {\n\n\t\treturn this.translateOnAxis( _xAxis, distance );\n\n\t}\n\n\ttranslateY( distance ) {\n\n\t\treturn this.translateOnAxis( _yAxis, distance );\n\n\t}\n\n\ttranslateZ( distance ) {\n\n\t\treturn this.translateOnAxis( _zAxis, distance );\n\n\t}\n\n\tlocalToWorld( vector ) {\n\n\t\treturn vector.applyMatrix4( this.matrixWorld );\n\n\t}\n\n\tworldToLocal( vector ) {\n\n\t\treturn vector.applyMatrix4( _m1$1.copy( this.matrixWorld ).invert() );\n\n\t}\n\n\tlookAt( x, y, z ) {\n\n\t\t// This method does not support objects having non-uniformly-scaled parent(s)\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\t_target.copy( x );\n\n\t\t} else {\n\n\t\t\t_target.set( x, y, z );\n\n\t\t}\n\n\t\tconst parent = this.parent;\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_position$3.setFromMatrixPosition( this.matrixWorld );\n\n\t\tif ( this.isCamera || this.isLight ) {\n\n\t\t\t_m1$1.lookAt( _position$3, _target, this.up );\n\n\t\t} else {\n\n\t\t\t_m1$1.lookAt( _target, _position$3, this.up );\n\n\t\t}\n\n\t\tthis.quaternion.setFromRotationMatrix( _m1$1 );\n\n\t\tif ( parent ) {\n\n\t\t\t_m1$1.extractRotation( parent.matrixWorld );\n\t\t\t_q1.setFromRotationMatrix( _m1$1 );\n\t\t\tthis.quaternion.premultiply( _q1.invert() );\n\n\t\t}\n\n\t}\n\n\tadd( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.add( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object === this ) {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object can\\'t be added as a child of itself.', object );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object && object.isObject3D ) {\n\n\t\t\tif ( object.parent !== null ) {\n\n\t\t\t\tobject.parent.remove( object );\n\n\t\t\t}\n\n\t\t\tobject.parent = this;\n\t\t\tthis.children.push( object );\n\n\t\t\tobject.dispatchEvent( _addedEvent );\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object not an instance of THREE.Object3D.', object );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremove( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.remove( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst index = this.children.indexOf( object );\n\n\t\tif ( index !== - 1 ) {\n\n\t\t\tobject.parent = null;\n\t\t\tthis.children.splice( index, 1 );\n\n\t\t\tobject.dispatchEvent( _removedEvent );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremoveFromParent() {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tparent.remove( this );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclear() {\n\n\t\tfor ( let i = 0; i < this.children.length; i ++ ) {\n\n\t\t\tconst object = this.children[ i ];\n\n\t\t\tobject.parent = null;\n\n\t\t\tobject.dispatchEvent( _removedEvent );\n\n\t\t}\n\n\t\tthis.children.length = 0;\n\n\t\treturn this;\n\n\n\t}\n\n\tattach( object ) {\n\n\t\t// adds object as a child of this, while maintaining the object's world transform\n\n\t\t// Note: This method does not support scene graphs having non-uniformly-scaled nodes(s)\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_m1$1.copy( this.matrixWorld ).invert();\n\n\t\tif ( object.parent !== null ) {\n\n\t\t\tobject.parent.updateWorldMatrix( true, false );\n\n\t\t\t_m1$1.multiply( object.parent.matrixWorld );\n\n\t\t}\n\n\t\tobject.applyMatrix4( _m1$1 );\n\n\t\tthis.add( object );\n\n\t\tobject.updateWorldMatrix( false, true );\n\n\t\treturn this;\n\n\t}\n\n\tgetObjectById( id ) {\n\n\t\treturn this.getObjectByProperty( 'id', id );\n\n\t}\n\n\tgetObjectByName( name ) {\n\n\t\treturn this.getObjectByProperty( 'name', name );\n\n\t}\n\n\tgetObjectByProperty( name, value ) {\n\n\t\tif ( this[ name ] === value ) return this;\n\n\t\tfor ( let i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\tconst child = this.children[ i ];\n\t\t\tconst object = child.getObjectByProperty( name, value );\n\n\t\t\tif ( object !== undefined ) {\n\n\t\t\t\treturn object;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\tgetWorldPosition( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn target.setFromMatrixPosition( this.matrixWorld );\n\n\t}\n\n\tgetWorldQuaternion( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position$3, target, _scale$2 );\n\n\t\treturn target;\n\n\t}\n\n\tgetWorldScale( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position$3, _quaternion$2, target );\n\n\t\treturn target;\n\n\t}\n\n\tgetWorldDirection( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tconst e = this.matrixWorld.elements;\n\n\t\treturn target.set( e[ 8 ], e[ 9 ], e[ 10 ] ).normalize();\n\n\t}\n\n\traycast( /* raycaster, intersects */ ) {}\n\n\ttraverse( callback ) {\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverse( callback );\n\n\t\t}\n\n\t}\n\n\ttraverseVisible( callback ) {\n\n\t\tif ( this.visible === false ) return;\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverseVisible( callback );\n\n\t\t}\n\n\t}\n\n\ttraverseAncestors( callback ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tcallback( parent );\n\n\t\t\tparent.traverseAncestors( callback );\n\n\t\t}\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\n\n\t\tthis.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.matrixWorldNeedsUpdate || force ) {\n\n\t\t\tif ( this.parent === null ) {\n\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t}\n\n\t\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\t\tforce = true;\n\n\t\t}\n\n\t\t// update children\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].updateMatrixWorld( force );\n\n\t\t}\n\n\t}\n\n\tupdateWorldMatrix( updateParents, updateChildren ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( updateParents === true && parent !== null ) {\n\n\t\t\tparent.updateWorldMatrix( true, false );\n\n\t\t}\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.parent === null ) {\n\n\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t} else {\n\n\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t}\n\n\t\t// update children\n\n\t\tif ( updateChildren === true ) {\n\n\t\t\tconst children = this.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tchildren[ i ].updateWorldMatrix( false, true );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\t// meta is a string when called from JSON.stringify\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tconst output = {};\n\n\t\t// meta is a hash used to collect geometries, materials.\n\t\t// not providing it implies that this is the root object\n\t\t// being serialized.\n\t\tif ( isRootObject ) {\n\n\t\t\t// initialize meta obj\n\t\t\tmeta = {\n\t\t\t\tgeometries: {},\n\t\t\t\tmaterials: {},\n\t\t\t\ttextures: {},\n\t\t\t\timages: {},\n\t\t\t\tshapes: {},\n\t\t\t\tskeletons: {},\n\t\t\t\tanimations: {},\n\t\t\t\tnodes: {}\n\t\t\t};\n\n\t\t\toutput.metadata = {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Object',\n\t\t\t\tgenerator: 'Object3D.toJSON'\n\t\t\t};\n\n\t\t}\n\n\t\t// standard Object3D serialization\n\n\t\tconst object = {};\n\n\t\tobject.uuid = this.uuid;\n\t\tobject.type = this.type;\n\n\t\tif ( this.name !== '' ) object.name = this.name;\n\t\tif ( this.castShadow === true ) object.castShadow = true;\n\t\tif ( this.receiveShadow === true ) object.receiveShadow = true;\n\t\tif ( this.visible === false ) object.visible = false;\n\t\tif ( this.frustumCulled === false ) object.frustumCulled = false;\n\t\tif ( this.renderOrder !== 0 ) object.renderOrder = this.renderOrder;\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) object.userData = this.userData;\n\n\t\tobject.layers = this.layers.mask;\n\t\tobject.matrix = this.matrix.toArray();\n\n\t\tif ( this.matrixAutoUpdate === false ) object.matrixAutoUpdate = false;\n\n\t\t// object specific properties\n\n\t\tif ( this.isInstancedMesh ) {\n\n\t\t\tobject.type = 'InstancedMesh';\n\t\t\tobject.count = this.count;\n\t\t\tobject.instanceMatrix = this.instanceMatrix.toJSON();\n\t\t\tif ( this.instanceColor !== null ) object.instanceColor = this.instanceColor.toJSON();\n\n\t\t}\n\n\t\t//\n\n\t\tfunction serialize( library, element ) {\n\n\t\t\tif ( library[ element.uuid ] === undefined ) {\n\n\t\t\t\tlibrary[ element.uuid ] = element.toJSON( meta );\n\n\t\t\t}\n\n\t\t\treturn element.uuid;\n\n\t\t}\n\n\t\tif ( this.isScene ) {\n\n\t\t\tif ( this.background ) {\n\n\t\t\t\tif ( this.background.isColor ) {\n\n\t\t\t\t\tobject.background = this.background.toJSON();\n\n\t\t\t\t} else if ( this.background.isTexture ) {\n\n\t\t\t\t\tobject.background = this.background.toJSON( meta ).uuid;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.environment && this.environment.isTexture ) {\n\n\t\t\t\tobject.environment = this.environment.toJSON( meta ).uuid;\n\n\t\t\t}\n\n\t\t} else if ( this.isMesh || this.isLine || this.isPoints ) {\n\n\t\t\tobject.geometry = serialize( meta.geometries, this.geometry );\n\n\t\t\tconst parameters = this.geometry.parameters;\n\n\t\t\tif ( parameters !== undefined && parameters.shapes !== undefined ) {\n\n\t\t\t\tconst shapes = parameters.shapes;\n\n\t\t\t\tif ( Array.isArray( shapes ) ) {\n\n\t\t\t\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tconst shape = shapes[ i ];\n\n\t\t\t\t\t\tserialize( meta.shapes, shape );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tserialize( meta.shapes, shapes );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.isSkinnedMesh ) {\n\n\t\t\tobject.bindMode = this.bindMode;\n\t\t\tobject.bindMatrix = this.bindMatrix.toArray();\n\n\t\t\tif ( this.skeleton !== undefined ) {\n\n\t\t\t\tserialize( meta.skeletons, this.skeleton );\n\n\t\t\t\tobject.skeleton = this.skeleton.uuid;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.material !== undefined ) {\n\n\t\t\tif ( Array.isArray( this.material ) ) {\n\n\t\t\t\tconst uuids = [];\n\n\t\t\t\tfor ( let i = 0, l = this.material.length; i < l; i ++ ) {\n\n\t\t\t\t\tuuids.push( serialize( meta.materials, this.material[ i ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tobject.material = uuids;\n\n\t\t\t} else {\n\n\t\t\t\tobject.material = serialize( meta.materials, this.material );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.children.length > 0 ) {\n\n\t\t\tobject.children = [];\n\n\t\t\tfor ( let i = 0; i < this.children.length; i ++ ) {\n\n\t\t\t\tobject.children.push( this.children[ i ].toJSON( meta ).object );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.animations.length > 0 ) {\n\n\t\t\tobject.animations = [];\n\n\t\t\tfor ( let i = 0; i < this.animations.length; i ++ ) {\n\n\t\t\t\tconst animation = this.animations[ i ];\n\n\t\t\t\tobject.animations.push( serialize( meta.animations, animation ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tconst geometries = extractFromCache( meta.geometries );\n\t\t\tconst materials = extractFromCache( meta.materials );\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\t\t\tconst shapes = extractFromCache( meta.shapes );\n\t\t\tconst skeletons = extractFromCache( meta.skeletons );\n\t\t\tconst animations = extractFromCache( meta.animations );\n\t\t\tconst nodes = extractFromCache( meta.nodes );\n\n\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\n\t\t\tif ( materials.length > 0 ) output.materials = materials;\n\t\t\tif ( textures.length > 0 ) output.textures = textures;\n\t\t\tif ( images.length > 0 ) output.images = images;\n\t\t\tif ( shapes.length > 0 ) output.shapes = shapes;\n\t\t\tif ( skeletons.length > 0 ) output.skeletons = skeletons;\n\t\t\tif ( animations.length > 0 ) output.animations = animations;\n\t\t\tif ( nodes.length > 0 ) output.nodes = nodes;\n\n\t\t}\n\n\t\toutput.object = object;\n\n\t\treturn output;\n\n\t\t// extract data from the cache hash\n\t\t// remove metadata on each item\n\t\t// and return as array\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t}\n\n\tclone( recursive ) {\n\n\t\treturn new this.constructor().copy( this, recursive );\n\n\t}\n\n\tcopy( source, recursive = true ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.up.copy( source.up );\n\n\t\tthis.position.copy( source.position );\n\t\tthis.rotation.order = source.rotation.order;\n\t\tthis.quaternion.copy( source.quaternion );\n\t\tthis.scale.copy( source.scale );\n\n\t\tthis.matrix.copy( source.matrix );\n\t\tthis.matrixWorld.copy( source.matrixWorld );\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n\n\t\tthis.layers.mask = source.layers.mask;\n\t\tthis.visible = source.visible;\n\n\t\tthis.castShadow = source.castShadow;\n\t\tthis.receiveShadow = source.receiveShadow;\n\n\t\tthis.frustumCulled = source.frustumCulled;\n\t\tthis.renderOrder = source.renderOrder;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tif ( recursive === true ) {\n\n\t\t\tfor ( let i = 0; i < source.children.length; i ++ ) {\n\n\t\t\t\tconst child = source.children[ i ];\n\t\t\t\tthis.add( child.clone() );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nObject3D.DefaultUp = new Vector3( 0, 1, 0 );\nObject3D.DefaultMatrixAutoUpdate = true;\n\nObject3D.prototype.isObject3D = true;\n\nconst _v0$1 = /*@__PURE__*/ new Vector3();\nconst _v1$3 = /*@__PURE__*/ new Vector3();\nconst _v2$2 = /*@__PURE__*/ new Vector3();\nconst _v3$1 = /*@__PURE__*/ new Vector3();\n\nconst _vab = /*@__PURE__*/ new Vector3();\nconst _vac = /*@__PURE__*/ new Vector3();\nconst _vbc = /*@__PURE__*/ new Vector3();\nconst _vap = /*@__PURE__*/ new Vector3();\nconst _vbp = /*@__PURE__*/ new Vector3();\nconst _vcp = /*@__PURE__*/ new Vector3();\n\nclass Triangle {\n\n\tconstructor( a = new Vector3(), b = new Vector3(), c = new Vector3() ) {\n\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\n\t}\n\n\tstatic getNormal( a, b, c, target ) {\n\n\t\ttarget.subVectors( c, b );\n\t\t_v0$1.subVectors( a, b );\n\t\ttarget.cross( _v0$1 );\n\n\t\tconst targetLengthSq = target.lengthSq();\n\t\tif ( targetLengthSq > 0 ) {\n\n\t\t\treturn target.multiplyScalar( 1 / Math.sqrt( targetLengthSq ) );\n\n\t\t}\n\n\t\treturn target.set( 0, 0, 0 );\n\n\t}\n\n\t// static/instance method to calculate barycentric coordinates\n\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\tstatic getBarycoord( point, a, b, c, target ) {\n\n\t\t_v0$1.subVectors( c, a );\n\t\t_v1$3.subVectors( b, a );\n\t\t_v2$2.subVectors( point, a );\n\n\t\tconst dot00 = _v0$1.dot( _v0$1 );\n\t\tconst dot01 = _v0$1.dot( _v1$3 );\n\t\tconst dot02 = _v0$1.dot( _v2$2 );\n\t\tconst dot11 = _v1$3.dot( _v1$3 );\n\t\tconst dot12 = _v1$3.dot( _v2$2 );\n\n\t\tconst denom = ( dot00 * dot11 - dot01 * dot01 );\n\n\t\t// collinear or singular triangle\n\t\tif ( denom === 0 ) {\n\n\t\t\t// arbitrary location outside of triangle?\n\t\t\t// not sure if this is the best idea, maybe should be returning undefined\n\t\t\treturn target.set( - 2, - 1, - 1 );\n\n\t\t}\n\n\t\tconst invDenom = 1 / denom;\n\t\tconst u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\n\t\tconst v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\n\n\t\t// barycentric coordinates must always sum to 1\n\t\treturn target.set( 1 - u - v, v, u );\n\n\t}\n\n\tstatic containsPoint( point, a, b, c ) {\n\n\t\tthis.getBarycoord( point, a, b, c, _v3$1 );\n\n\t\treturn ( _v3$1.x >= 0 ) && ( _v3$1.y >= 0 ) && ( ( _v3$1.x + _v3$1.y ) <= 1 );\n\n\t}\n\n\tstatic getUV( point, p1, p2, p3, uv1, uv2, uv3, target ) {\n\n\t\tthis.getBarycoord( point, p1, p2, p3, _v3$1 );\n\n\t\ttarget.set( 0, 0 );\n\t\ttarget.addScaledVector( uv1, _v3$1.x );\n\t\ttarget.addScaledVector( uv2, _v3$1.y );\n\t\ttarget.addScaledVector( uv3, _v3$1.z );\n\n\t\treturn target;\n\n\t}\n\n\tstatic isFrontFacing( a, b, c, direction ) {\n\n\t\t_v0$1.subVectors( c, b );\n\t\t_v1$3.subVectors( a, b );\n\n\t\t// strictly front facing\n\t\treturn ( _v0$1.cross( _v1$3 ).dot( direction ) < 0 ) ? true : false;\n\n\t}\n\n\tset( a, b, c ) {\n\n\t\tthis.a.copy( a );\n\t\tthis.b.copy( b );\n\t\tthis.c.copy( c );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPointsAndIndices( points, i0, i1, i2 ) {\n\n\t\tthis.a.copy( points[ i0 ] );\n\t\tthis.b.copy( points[ i1 ] );\n\t\tthis.c.copy( points[ i2 ] );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromAttributeAndIndices( attribute, i0, i1, i2 ) {\n\n\t\tthis.a.fromBufferAttribute( attribute, i0 );\n\t\tthis.b.fromBufferAttribute( attribute, i1 );\n\t\tthis.c.fromBufferAttribute( attribute, i2 );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( triangle ) {\n\n\t\tthis.a.copy( triangle.a );\n\t\tthis.b.copy( triangle.b );\n\t\tthis.c.copy( triangle.c );\n\n\t\treturn this;\n\n\t}\n\n\tgetArea() {\n\n\t\t_v0$1.subVectors( this.c, this.b );\n\t\t_v1$3.subVectors( this.a, this.b );\n\n\t\treturn _v0$1.cross( _v1$3 ).length() * 0.5;\n\n\t}\n\n\tgetMidpoint( target ) {\n\n\t\treturn target.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\n\n\t}\n\n\tgetNormal( target ) {\n\n\t\treturn Triangle.getNormal( this.a, this.b, this.c, target );\n\n\t}\n\n\tgetPlane( target ) {\n\n\t\treturn target.setFromCoplanarPoints( this.a, this.b, this.c );\n\n\t}\n\n\tgetBarycoord( point, target ) {\n\n\t\treturn Triangle.getBarycoord( point, this.a, this.b, this.c, target );\n\n\t}\n\n\tgetUV( point, uv1, uv2, uv3, target ) {\n\n\t\treturn Triangle.getUV( point, this.a, this.b, this.c, uv1, uv2, uv3, target );\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn Triangle.containsPoint( point, this.a, this.b, this.c );\n\n\t}\n\n\tisFrontFacing( direction ) {\n\n\t\treturn Triangle.isFrontFacing( this.a, this.b, this.c, direction );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsTriangle( this );\n\n\t}\n\n\tclosestPointToPoint( p, target ) {\n\n\t\tconst a = this.a, b = this.b, c = this.c;\n\t\tlet v, w;\n\n\t\t// algorithm thanks to Real-Time Collision Detection by Christer Ericson,\n\t\t// published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\n\t\t// under the accompanying license; see chapter 5.1.5 for detailed explanation.\n\t\t// basically, we're distinguishing which of the voronoi regions of the triangle\n\t\t// the point lies in with the minimum amount of redundant computation.\n\n\t\t_vab.subVectors( b, a );\n\t\t_vac.subVectors( c, a );\n\t\t_vap.subVectors( p, a );\n\t\tconst d1 = _vab.dot( _vap );\n\t\tconst d2 = _vac.dot( _vap );\n\t\tif ( d1 <= 0 && d2 <= 0 ) {\n\n\t\t\t// vertex region of A; barycentric coords (1, 0, 0)\n\t\t\treturn target.copy( a );\n\n\t\t}\n\n\t\t_vbp.subVectors( p, b );\n\t\tconst d3 = _vab.dot( _vbp );\n\t\tconst d4 = _vac.dot( _vbp );\n\t\tif ( d3 >= 0 && d4 <= d3 ) {\n\n\t\t\t// vertex region of B; barycentric coords (0, 1, 0)\n\t\t\treturn target.copy( b );\n\n\t\t}\n\n\t\tconst vc = d1 * d4 - d3 * d2;\n\t\tif ( vc <= 0 && d1 >= 0 && d3 <= 0 ) {\n\n\t\t\tv = d1 / ( d1 - d3 );\n\t\t\t// edge region of AB; barycentric coords (1-v, v, 0)\n\t\t\treturn target.copy( a ).addScaledVector( _vab, v );\n\n\t\t}\n\n\t\t_vcp.subVectors( p, c );\n\t\tconst d5 = _vab.dot( _vcp );\n\t\tconst d6 = _vac.dot( _vcp );\n\t\tif ( d6 >= 0 && d5 <= d6 ) {\n\n\t\t\t// vertex region of C; barycentric coords (0, 0, 1)\n\t\t\treturn target.copy( c );\n\n\t\t}\n\n\t\tconst vb = d5 * d2 - d1 * d6;\n\t\tif ( vb <= 0 && d2 >= 0 && d6 <= 0 ) {\n\n\t\t\tw = d2 / ( d2 - d6 );\n\t\t\t// edge region of AC; barycentric coords (1-w, 0, w)\n\t\t\treturn target.copy( a ).addScaledVector( _vac, w );\n\n\t\t}\n\n\t\tconst va = d3 * d6 - d5 * d4;\n\t\tif ( va <= 0 && ( d4 - d3 ) >= 0 && ( d5 - d6 ) >= 0 ) {\n\n\t\t\t_vbc.subVectors( c, b );\n\t\t\tw = ( d4 - d3 ) / ( ( d4 - d3 ) + ( d5 - d6 ) );\n\t\t\t// edge region of BC; barycentric coords (0, 1-w, w)\n\t\t\treturn target.copy( b ).addScaledVector( _vbc, w ); // edge region of BC\n\n\t\t}\n\n\t\t// face region\n\t\tconst denom = 1 / ( va + vb + vc );\n\t\t// u = va * denom\n\t\tv = vb * denom;\n\t\tw = vc * denom;\n\n\t\treturn target.copy( a ).addScaledVector( _vab, v ).addScaledVector( _vac, w );\n\n\t}\n\n\tequals( triangle ) {\n\n\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\n\n\t}\n\n}\n\nlet materialId = 0;\n\nclass Material extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tObject.defineProperty( this, 'id', { value: materialId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Material';\n\n\t\tthis.blending = NormalBlending;\n\t\tthis.side = FrontSide;\n\t\tthis.vertexColors = false;\n\n\t\tthis.opacity = 1;\n\t\tthis.transparent = false;\n\n\t\tthis.blendSrc = SrcAlphaFactor;\n\t\tthis.blendDst = OneMinusSrcAlphaFactor;\n\t\tthis.blendEquation = AddEquation;\n\t\tthis.blendSrcAlpha = null;\n\t\tthis.blendDstAlpha = null;\n\t\tthis.blendEquationAlpha = null;\n\n\t\tthis.depthFunc = LessEqualDepth;\n\t\tthis.depthTest = true;\n\t\tthis.depthWrite = true;\n\n\t\tthis.stencilWriteMask = 0xff;\n\t\tthis.stencilFunc = AlwaysStencilFunc;\n\t\tthis.stencilRef = 0;\n\t\tthis.stencilFuncMask = 0xff;\n\t\tthis.stencilFail = KeepStencilOp;\n\t\tthis.stencilZFail = KeepStencilOp;\n\t\tthis.stencilZPass = KeepStencilOp;\n\t\tthis.stencilWrite = false;\n\n\t\tthis.clippingPlanes = null;\n\t\tthis.clipIntersection = false;\n\t\tthis.clipShadows = false;\n\n\t\tthis.shadowSide = null;\n\n\t\tthis.colorWrite = true;\n\n\t\tthis.precision = null; // override the renderer's default precision for this material\n\n\t\tthis.polygonOffset = false;\n\t\tthis.polygonOffsetFactor = 0;\n\t\tthis.polygonOffsetUnits = 0;\n\n\t\tthis.dithering = false;\n\n\t\tthis.alphaToCoverage = false;\n\t\tthis.premultipliedAlpha = false;\n\n\t\tthis.visible = true;\n\n\t\tthis.toneMapped = true;\n\n\t\tthis.userData = {};\n\n\t\tthis.version = 0;\n\n\t\tthis._alphaTest = 0;\n\n\t}\n\n\tget alphaTest() {\n\n\t\treturn this._alphaTest;\n\n\t}\n\n\tset alphaTest( value ) {\n\n\t\tif ( this._alphaTest > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._alphaTest = value;\n\n\t}\n\n\tonBuild( /* shaderobject, renderer */ ) {}\n\n\tonBeforeRender( /* renderer, scene, camera, geometry, object, group */ ) {}\n\n\tonBeforeCompile( /* shaderobject, renderer */ ) {}\n\n\tcustomProgramCacheKey() {\n\n\t\treturn this.onBeforeCompile.toString();\n\n\t}\n\n\tsetValues( values ) {\n\n\t\tif ( values === undefined ) return;\n\n\t\tfor ( const key in values ) {\n\n\t\t\tconst newValue = values[ key ];\n\n\t\t\tif ( newValue === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Material: \\'' + key + '\\' parameter is undefined.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\t// for backward compatibility if shading is set in the constructor\n\t\t\tif ( key === 'shading' ) {\n\n\t\t\t\tconsole.warn( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\t\t\t\tthis.flatShading = ( newValue === FlatShading ) ? true : false;\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tconst currentValue = this[ key ];\n\n\t\t\tif ( currentValue === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.' + this.type + ': \\'' + key + '\\' is not a property of this material.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( currentValue && currentValue.isColor ) {\n\n\t\t\t\tcurrentValue.set( newValue );\n\n\t\t\t} else if ( ( currentValue && currentValue.isVector3 ) && ( newValue && newValue.isVector3 ) ) {\n\n\t\t\t\tcurrentValue.copy( newValue );\n\n\t\t\t} else {\n\n\t\t\t\tthis[ key ] = newValue;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( isRootObject ) {\n\n\t\t\tmeta = {\n\t\t\t\ttextures: {},\n\t\t\t\timages: {}\n\t\t\t};\n\n\t\t}\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Material',\n\t\t\t\tgenerator: 'Material.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard Material serialization\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.color && this.color.isColor ) data.color = this.color.getHex();\n\n\t\tif ( this.roughness !== undefined ) data.roughness = this.roughness;\n\t\tif ( this.metalness !== undefined ) data.metalness = this.metalness;\n\n\t\tif ( this.sheen !== undefined ) data.sheen = this.sheen;\n\t\tif ( this.sheenColor && this.sheenColor.isColor ) data.sheenColor = this.sheenColor.getHex();\n\t\tif ( this.sheenRoughness !== undefined ) data.sheenRoughness = this.sheenRoughness;\n\t\tif ( this.emissive && this.emissive.isColor ) data.emissive = this.emissive.getHex();\n\t\tif ( this.emissiveIntensity && this.emissiveIntensity !== 1 ) data.emissiveIntensity = this.emissiveIntensity;\n\n\t\tif ( this.specular && this.specular.isColor ) data.specular = this.specular.getHex();\n\t\tif ( this.specularIntensity !== undefined ) data.specularIntensity = this.specularIntensity;\n\t\tif ( this.specularColor && this.specularColor.isColor ) data.specularColor = this.specularColor.getHex();\n\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\n\t\tif ( this.clearcoat !== undefined ) data.clearcoat = this.clearcoat;\n\t\tif ( this.clearcoatRoughness !== undefined ) data.clearcoatRoughness = this.clearcoatRoughness;\n\n\t\tif ( this.clearcoatMap && this.clearcoatMap.isTexture ) {\n\n\t\t\tdata.clearcoatMap = this.clearcoatMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture ) {\n\n\t\t\tdata.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture ) {\n\n\t\t\tdata.clearcoatNormalMap = this.clearcoatNormalMap.toJSON( meta ).uuid;\n\t\t\tdata.clearcoatNormalScale = this.clearcoatNormalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.map && this.map.isTexture ) data.map = this.map.toJSON( meta ).uuid;\n\t\tif ( this.matcap && this.matcap.isTexture ) data.matcap = this.matcap.toJSON( meta ).uuid;\n\t\tif ( this.alphaMap && this.alphaMap.isTexture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\n\n\t\tif ( this.lightMap && this.lightMap.isTexture ) {\n\n\t\t\tdata.lightMap = this.lightMap.toJSON( meta ).uuid;\n\t\t\tdata.lightMapIntensity = this.lightMapIntensity;\n\n\t\t}\n\n\t\tif ( this.aoMap && this.aoMap.isTexture ) {\n\n\t\t\tdata.aoMap = this.aoMap.toJSON( meta ).uuid;\n\t\t\tdata.aoMapIntensity = this.aoMapIntensity;\n\n\t\t}\n\n\t\tif ( this.bumpMap && this.bumpMap.isTexture ) {\n\n\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\n\t\t\tdata.bumpScale = this.bumpScale;\n\n\t\t}\n\n\t\tif ( this.normalMap && this.normalMap.isTexture ) {\n\n\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\n\t\t\tdata.normalMapType = this.normalMapType;\n\t\t\tdata.normalScale = this.normalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.displacementMap && this.displacementMap.isTexture ) {\n\n\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\n\t\t\tdata.displacementScale = this.displacementScale;\n\t\t\tdata.displacementBias = this.displacementBias;\n\n\t\t}\n\n\t\tif ( this.roughnessMap && this.roughnessMap.isTexture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\n\t\tif ( this.metalnessMap && this.metalnessMap.isTexture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\n\n\t\tif ( this.emissiveMap && this.emissiveMap.isTexture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\n\t\tif ( this.specularMap && this.specularMap.isTexture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\n\t\tif ( this.specularIntensityMap && this.specularIntensityMap.isTexture ) data.specularIntensityMap = this.specularIntensityMap.toJSON( meta ).uuid;\n\t\tif ( this.specularColorMap && this.specularColorMap.isTexture ) data.specularColorMap = this.specularColorMap.toJSON( meta ).uuid;\n\n\t\tif ( this.envMap && this.envMap.isTexture ) {\n\n\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\n\n\t\t\tif ( this.combine !== undefined ) data.combine = this.combine;\n\n\t\t}\n\n\t\tif ( this.envMapIntensity !== undefined ) data.envMapIntensity = this.envMapIntensity;\n\t\tif ( this.reflectivity !== undefined ) data.reflectivity = this.reflectivity;\n\t\tif ( this.refractionRatio !== undefined ) data.refractionRatio = this.refractionRatio;\n\n\t\tif ( this.gradientMap && this.gradientMap.isTexture ) {\n\n\t\t\tdata.gradientMap = this.gradientMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.transmission !== undefined ) data.transmission = this.transmission;\n\t\tif ( this.transmissionMap && this.transmissionMap.isTexture ) data.transmissionMap = this.transmissionMap.toJSON( meta ).uuid;\n\t\tif ( this.thickness !== undefined ) data.thickness = this.thickness;\n\t\tif ( this.thicknessMap && this.thicknessMap.isTexture ) data.thicknessMap = this.thicknessMap.toJSON( meta ).uuid;\n\t\tif ( this.attenuationDistance !== undefined ) data.attenuationDistance = this.attenuationDistance;\n\t\tif ( this.attenuationColor !== undefined ) data.attenuationColor = this.attenuationColor.getHex();\n\n\t\tif ( this.size !== undefined ) data.size = this.size;\n\t\tif ( this.shadowSide !== null ) data.shadowSide = this.shadowSide;\n\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\n\n\t\tif ( this.blending !== NormalBlending ) data.blending = this.blending;\n\t\tif ( this.side !== FrontSide ) data.side = this.side;\n\t\tif ( this.vertexColors ) data.vertexColors = true;\n\n\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\n\t\tif ( this.transparent === true ) data.transparent = this.transparent;\n\n\t\tdata.depthFunc = this.depthFunc;\n\t\tdata.depthTest = this.depthTest;\n\t\tdata.depthWrite = this.depthWrite;\n\t\tdata.colorWrite = this.colorWrite;\n\n\t\tdata.stencilWrite = this.stencilWrite;\n\t\tdata.stencilWriteMask = this.stencilWriteMask;\n\t\tdata.stencilFunc = this.stencilFunc;\n\t\tdata.stencilRef = this.stencilRef;\n\t\tdata.stencilFuncMask = this.stencilFuncMask;\n\t\tdata.stencilFail = this.stencilFail;\n\t\tdata.stencilZFail = this.stencilZFail;\n\t\tdata.stencilZPass = this.stencilZPass;\n\n\t\t// rotation (SpriteMaterial)\n\t\tif ( this.rotation !== undefined && this.rotation !== 0 ) data.rotation = this.rotation;\n\n\t\tif ( this.polygonOffset === true ) data.polygonOffset = true;\n\t\tif ( this.polygonOffsetFactor !== 0 ) data.polygonOffsetFactor = this.polygonOffsetFactor;\n\t\tif ( this.polygonOffsetUnits !== 0 ) data.polygonOffsetUnits = this.polygonOffsetUnits;\n\n\t\tif ( this.linewidth !== undefined && this.linewidth !== 1 ) data.linewidth = this.linewidth;\n\t\tif ( this.dashSize !== undefined ) data.dashSize = this.dashSize;\n\t\tif ( this.gapSize !== undefined ) data.gapSize = this.gapSize;\n\t\tif ( this.scale !== undefined ) data.scale = this.scale;\n\n\t\tif ( this.dithering === true ) data.dithering = true;\n\n\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\n\t\tif ( this.alphaToCoverage === true ) data.alphaToCoverage = this.alphaToCoverage;\n\t\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = this.premultipliedAlpha;\n\n\t\tif ( this.wireframe === true ) data.wireframe = this.wireframe;\n\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\n\t\tif ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;\n\t\tif ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;\n\n\t\tif ( this.flatShading === true ) data.flatShading = this.flatShading;\n\n\t\tif ( this.visible === false ) data.visible = false;\n\n\t\tif ( this.toneMapped === false ) data.toneMapped = false;\n\n\t\tif ( this.fog === false ) data.fog = false;\n\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) data.userData = this.userData;\n\n\t\t// TODO: Copied from Object3D.toJSON\n\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\n\t\t\tif ( textures.length > 0 ) data.textures = textures;\n\t\t\tif ( images.length > 0 ) data.images = images;\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.blending = source.blending;\n\t\tthis.side = source.side;\n\t\tthis.vertexColors = source.vertexColors;\n\n\t\tthis.opacity = source.opacity;\n\t\tthis.transparent = source.transparent;\n\n\t\tthis.blendSrc = source.blendSrc;\n\t\tthis.blendDst = source.blendDst;\n\t\tthis.blendEquation = source.blendEquation;\n\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\n\t\tthis.blendDstAlpha = source.blendDstAlpha;\n\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\n\n\t\tthis.depthFunc = source.depthFunc;\n\t\tthis.depthTest = source.depthTest;\n\t\tthis.depthWrite = source.depthWrite;\n\n\t\tthis.stencilWriteMask = source.stencilWriteMask;\n\t\tthis.stencilFunc = source.stencilFunc;\n\t\tthis.stencilRef = source.stencilRef;\n\t\tthis.stencilFuncMask = source.stencilFuncMask;\n\t\tthis.stencilFail = source.stencilFail;\n\t\tthis.stencilZFail = source.stencilZFail;\n\t\tthis.stencilZPass = source.stencilZPass;\n\t\tthis.stencilWrite = source.stencilWrite;\n\n\t\tconst srcPlanes = source.clippingPlanes;\n\t\tlet dstPlanes = null;\n\n\t\tif ( srcPlanes !== null ) {\n\n\t\t\tconst n = srcPlanes.length;\n\t\t\tdstPlanes = new Array( n );\n\n\t\t\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\t\t\tdstPlanes[ i ] = srcPlanes[ i ].clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.clippingPlanes = dstPlanes;\n\t\tthis.clipIntersection = source.clipIntersection;\n\t\tthis.clipShadows = source.clipShadows;\n\n\t\tthis.shadowSide = source.shadowSide;\n\n\t\tthis.colorWrite = source.colorWrite;\n\n\t\tthis.precision = source.precision;\n\n\t\tthis.polygonOffset = source.polygonOffset;\n\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\n\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\n\n\t\tthis.dithering = source.dithering;\n\n\t\tthis.alphaTest = source.alphaTest;\n\t\tthis.alphaToCoverage = source.alphaToCoverage;\n\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\n\n\t\tthis.visible = source.visible;\n\n\t\tthis.toneMapped = source.toneMapped;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n}\n\nMaterial.prototype.isMaterial = true;\n\nMaterial.fromType = function ( /*type*/ ) {\n\n\t// TODO: Behavior added in Materials.js\n\n\treturn null;\n\n};\n\nclass MeshBasicMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'MeshBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // emissive\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nMeshBasicMaterial.prototype.isMeshBasicMaterial = true;\n\nconst _vector$9 = /*@__PURE__*/ new Vector3();\nconst _vector2$1 = /*@__PURE__*/ new Vector2();\n\nclass BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tif ( Array.isArray( array ) ) {\n\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t}\n\n\t\tthis.name = '';\n\n\t\tthis.array = array;\n\t\tthis.itemSize = itemSize;\n\t\tthis.count = array !== undefined ? array.length / itemSize : 0;\n\t\tthis.normalized = normalized === true;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.updateRange = { offset: 0, count: - 1 };\n\n\t\tthis.version = 0;\n\n\t}\n\n\tonUploadCallback() {}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.itemSize = source.itemSize;\n\t\tthis.count = source.count;\n\t\tthis.normalized = source.normalized;\n\n\t\tthis.usage = source.usage;\n\n\t\treturn this;\n\n\t}\n\n\tcopyAt( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.itemSize;\n\t\tindex2 *= attribute.itemSize;\n\n\t\tfor ( let i = 0, l = this.itemSize; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcopyArray( array ) {\n\n\t\tthis.array.set( array );\n\n\t\treturn this;\n\n\t}\n\n\tcopyColorsArray( colors ) {\n\n\t\tconst array = this.array;\n\t\tlet offset = 0;\n\n\t\tfor ( let i = 0, l = colors.length; i < l; i ++ ) {\n\n\t\t\tlet color = colors[ i ];\n\n\t\t\tif ( color === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyColorsArray(): color is undefined', i );\n\t\t\t\tcolor = new Color();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = color.r;\n\t\t\tarray[ offset ++ ] = color.g;\n\t\t\tarray[ offset ++ ] = color.b;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcopyVector2sArray( vectors ) {\n\n\t\tconst array = this.array;\n\t\tlet offset = 0;\n\n\t\tfor ( let i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tlet vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector2();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcopyVector3sArray( vectors ) {\n\n\t\tconst array = this.array;\n\t\tlet offset = 0;\n\n\t\tfor ( let i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tlet vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector3();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\tarray[ offset ++ ] = vector.z;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcopyVector4sArray( vectors ) {\n\n\t\tconst array = this.array;\n\t\tlet offset = 0;\n\n\t\tfor ( let i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tlet vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector4();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\tarray[ offset ++ ] = vector.z;\n\t\t\tarray[ offset ++ ] = vector.w;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tif ( this.itemSize === 2 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector2$1.fromBufferAttribute( this, i );\n\t\t\t\t_vector2$1.applyMatrix3( m );\n\n\t\t\t\tthis.setXY( i, _vector2$1.x, _vector2$1.y );\n\n\t\t\t}\n\n\t\t} else if ( this.itemSize === 3 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector$9.fromBufferAttribute( this, i );\n\t\t\t\t_vector$9.applyMatrix3( m );\n\n\t\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( value, offset = 0 ) {\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t}\n\n\tgetX( index ) {\n\n\t\treturn this.array[ index * this.itemSize ];\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tthis.array[ index * this.itemSize ] = x;\n\n\t\treturn this;\n\n\t}\n\n\tgetY( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 1 ];\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tthis.array[ index * this.itemSize + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 2 ];\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tthis.array[ index * this.itemSize + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tgetW( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 3 ];\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tthis.array[ index * this.itemSize + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\t\tthis.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tonUpload( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.array, this.itemSize ).copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\titemSize: this.itemSize,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tarray: Array.prototype.slice.call( this.array ),\n\t\t\tnormalized: this.normalized\n\t\t};\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( this.usage !== StaticDrawUsage ) data.usage = this.usage;\n\t\tif ( this.updateRange.offset !== 0 || this.updateRange.count !== - 1 ) data.updateRange = this.updateRange;\n\n\t\treturn data;\n\n\t}\n\n}\n\nBufferAttribute.prototype.isBufferAttribute = true;\n\n//\n\nclass Int8BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint8BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint8ClampedBufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8ClampedArray( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Int16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Int32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Float16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nFloat16BufferAttribute.prototype.isFloat16BufferAttribute = true;\n\nclass Float32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Float32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Float64BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Float64Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nlet _id$1 = 0;\n\nconst _m1 = /*@__PURE__*/ new Matrix4();\nconst _obj = /*@__PURE__*/ new Object3D();\nconst _offset = /*@__PURE__*/ new Vector3();\nconst _box$1 = /*@__PURE__*/ new Box3();\nconst _boxMorphTargets = /*@__PURE__*/ new Box3();\nconst _vector$8 = /*@__PURE__*/ new Vector3();\n\nclass BufferGeometry extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tObject.defineProperty( this, 'id', { value: _id$1 ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'BufferGeometry';\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\n\t\tthis.morphAttributes = {};\n\t\tthis.morphTargetsRelative = false;\n\n\t\tthis.groups = [];\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\tthis.drawRange = { start: 0, count: Infinity };\n\n\t\tthis.userData = {};\n\n\t}\n\n\tgetIndex() {\n\n\t\treturn this.index;\n\n\t}\n\n\tsetIndex( index ) {\n\n\t\tif ( Array.isArray( index ) ) {\n\n\t\t\tthis.index = new ( arrayNeedsUint32( index ) ? Uint32BufferAttribute : Uint16BufferAttribute )( index, 1 );\n\n\t\t} else {\n\n\t\t\tthis.index = index;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetAttribute( name ) {\n\n\t\treturn this.attributes[ name ];\n\n\t}\n\n\tsetAttribute( name, attribute ) {\n\n\t\tthis.attributes[ name ] = attribute;\n\n\t\treturn this;\n\n\t}\n\n\tdeleteAttribute( name ) {\n\n\t\tdelete this.attributes[ name ];\n\n\t\treturn this;\n\n\t}\n\n\thasAttribute( name ) {\n\n\t\treturn this.attributes[ name ] !== undefined;\n\n\t}\n\n\taddGroup( start, count, materialIndex = 0 ) {\n\n\t\tthis.groups.push( {\n\n\t\t\tstart: start,\n\t\t\tcount: count,\n\t\t\tmaterialIndex: materialIndex\n\n\t\t} );\n\n\t}\n\n\tclearGroups() {\n\n\t\tthis.groups = [];\n\n\t}\n\n\tsetDrawRange( start, count ) {\n\n\t\tthis.drawRange.start = start;\n\t\tthis.drawRange.count = count;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tconst position = this.attributes.position;\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tposition.applyMatrix4( matrix );\n\n\t\t\tposition.needsUpdate = true;\n\n\t\t}\n\n\t\tconst normal = this.attributes.normal;\n\n\t\tif ( normal !== undefined ) {\n\n\t\t\tconst normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\tnormal.applyNormalMatrix( normalMatrix );\n\n\t\t\tnormal.needsUpdate = true;\n\n\t\t}\n\n\t\tconst tangent = this.attributes.tangent;\n\n\t\tif ( tangent !== undefined ) {\n\n\t\t\ttangent.transformDirection( matrix );\n\n\t\t\ttangent.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\t_m1.makeRotationFromQuaternion( q );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateX( angle ) {\n\n\t\t// rotate geometry around world x-axis\n\n\t\t_m1.makeRotationX( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateY( angle ) {\n\n\t\t// rotate geometry around world y-axis\n\n\t\t_m1.makeRotationY( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateZ( angle ) {\n\n\t\t// rotate geometry around world z-axis\n\n\t\t_m1.makeRotationZ( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( x, y, z ) {\n\n\t\t// translate geometry\n\n\t\t_m1.makeTranslation( x, y, z );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\tscale( x, y, z ) {\n\n\t\t// scale geometry\n\n\t\t_m1.makeScale( x, y, z );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\tlookAt( vector ) {\n\n\t\t_obj.lookAt( vector );\n\n\t\t_obj.updateMatrix();\n\n\t\tthis.applyMatrix4( _obj.matrix );\n\n\t\treturn this;\n\n\t}\n\n\tcenter() {\n\n\t\tthis.computeBoundingBox();\n\n\t\tthis.boundingBox.getCenter( _offset ).negate();\n\n\t\tthis.translate( _offset.x, _offset.y, _offset.z );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tconst position = [];\n\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tconst point = points[ i ];\n\t\t\tposition.push( point.x, point.y, point.z || 0 );\n\n\t\t}\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( position, 3 ) );\n\n\t\treturn this;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set \"mesh.frustumCulled\" to \"false\".', this );\n\n\t\t\tthis.boundingBox.set(\n\t\t\t\tnew Vector3( - Infinity, - Infinity, - Infinity ),\n\t\t\t\tnew Vector3( + Infinity, + Infinity, + Infinity )\n\t\t\t);\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tthis.boundingBox.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_box$1.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector$8.addVectors( this.boundingBox.min, _box$1.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$8 );\n\n\t\t\t\t\t\t_vector$8.addVectors( this.boundingBox.max, _box$1.max );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$8 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$1.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$1.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.boundingBox.makeEmpty();\n\n\t\t}\n\n\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set \"mesh.frustumCulled\" to \"false\".', this );\n\n\t\t\tthis.boundingSphere.set( new Vector3(), Infinity );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position ) {\n\n\t\t\t// first, find the center of the bounding sphere\n\n\t\t\tconst center = this.boundingSphere.center;\n\n\t\t\t_box$1.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_boxMorphTargets.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector$8.addVectors( _box$1.min, _boxMorphTargets.min );\n\t\t\t\t\t\t_box$1.expandByPoint( _vector$8 );\n\n\t\t\t\t\t\t_vector$8.addVectors( _box$1.max, _boxMorphTargets.max );\n\t\t\t\t\t\t_box$1.expandByPoint( _vector$8 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_box$1.expandByPoint( _boxMorphTargets.min );\n\t\t\t\t\t\t_box$1.expandByPoint( _boxMorphTargets.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_box$1.getCenter( center );\n\n\t\t\t// second, try to find a boundingSphere with a radius smaller than the\n\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n\t\t\tlet maxRadiusSq = 0;\n\n\t\t\tfor ( let i = 0, il = position.count; i < il; i ++ ) {\n\n\t\t\t\t_vector$8.fromBufferAttribute( position, i );\n\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$8 ) );\n\n\t\t\t}\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\tconst morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t\t\t\tfor ( let j = 0, jl = morphAttribute.count; j < jl; j ++ ) {\n\n\t\t\t\t\t\t_vector$8.fromBufferAttribute( morphAttribute, j );\n\n\t\t\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t\t\t_offset.fromBufferAttribute( position, j );\n\t\t\t\t\t\t\t_vector$8.add( _offset );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$8 ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcomputeTangents() {\n\n\t\tconst index = this.index;\n\t\tconst attributes = this.attributes;\n\n\t\t// based on http://www.terathon.com/code/tangent.html\n\t\t// (per vertex tangents)\n\n\t\tif ( index === null ||\n\t\t\t attributes.position === undefined ||\n\t\t\t attributes.normal === undefined ||\n\t\t\t attributes.uv === undefined ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst indices = index.array;\n\t\tconst positions = attributes.position.array;\n\t\tconst normals = attributes.normal.array;\n\t\tconst uvs = attributes.uv.array;\n\n\t\tconst nVertices = positions.length / 3;\n\n\t\tif ( this.hasAttribute( 'tangent' ) === false ) {\n\n\t\t\tthis.setAttribute( 'tangent', new BufferAttribute( new Float32Array( 4 * nVertices ), 4 ) );\n\n\t\t}\n\n\t\tconst tangents = this.getAttribute( 'tangent' ).array;\n\n\t\tconst tan1 = [], tan2 = [];\n\n\t\tfor ( let i = 0; i < nVertices; i ++ ) {\n\n\t\t\ttan1[ i ] = new Vector3();\n\t\t\ttan2[ i ] = new Vector3();\n\n\t\t}\n\n\t\tconst vA = new Vector3(),\n\t\t\tvB = new Vector3(),\n\t\t\tvC = new Vector3(),\n\n\t\t\tuvA = new Vector2(),\n\t\t\tuvB = new Vector2(),\n\t\t\tuvC = new Vector2(),\n\n\t\t\tsdir = new Vector3(),\n\t\t\ttdir = new Vector3();\n\n\t\tfunction handleTriangle( a, b, c ) {\n\n\t\t\tvA.fromArray( positions, a * 3 );\n\t\t\tvB.fromArray( positions, b * 3 );\n\t\t\tvC.fromArray( positions, c * 3 );\n\n\t\t\tuvA.fromArray( uvs, a * 2 );\n\t\t\tuvB.fromArray( uvs, b * 2 );\n\t\t\tuvC.fromArray( uvs, c * 2 );\n\n\t\t\tvB.sub( vA );\n\t\t\tvC.sub( vA );\n\n\t\t\tuvB.sub( uvA );\n\t\t\tuvC.sub( uvA );\n\n\t\t\tconst r = 1.0 / ( uvB.x * uvC.y - uvC.x * uvB.y );\n\n\t\t\t// silently ignore degenerate uv triangles having coincident or colinear vertices\n\n\t\t\tif ( ! isFinite( r ) ) return;\n\n\t\t\tsdir.copy( vB ).multiplyScalar( uvC.y ).addScaledVector( vC, - uvB.y ).multiplyScalar( r );\n\t\t\ttdir.copy( vC ).multiplyScalar( uvB.x ).addScaledVector( vB, - uvC.x ).multiplyScalar( r );\n\n\t\t\ttan1[ a ].add( sdir );\n\t\t\ttan1[ b ].add( sdir );\n\t\t\ttan1[ c ].add( sdir );\n\n\t\t\ttan2[ a ].add( tdir );\n\t\t\ttan2[ b ].add( tdir );\n\t\t\ttan2[ c ].add( tdir );\n\n\t\t}\n\n\t\tlet groups = this.groups;\n\n\t\tif ( groups.length === 0 ) {\n\n\t\t\tgroups = [ {\n\t\t\t\tstart: 0,\n\t\t\t\tcount: indices.length\n\t\t\t} ];\n\n\t\t}\n\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\tconst group = groups[ i ];\n\n\t\t\tconst start = group.start;\n\t\t\tconst count = group.count;\n\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\thandleTriangle(\n\t\t\t\t\tindices[ j + 0 ],\n\t\t\t\t\tindices[ j + 1 ],\n\t\t\t\t\tindices[ j + 2 ]\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst tmp = new Vector3(), tmp2 = new Vector3();\n\t\tconst n = new Vector3(), n2 = new Vector3();\n\n\t\tfunction handleVertex( v ) {\n\n\t\t\tn.fromArray( normals, v * 3 );\n\t\t\tn2.copy( n );\n\n\t\t\tconst t = tan1[ v ];\n\n\t\t\t// Gram-Schmidt orthogonalize\n\n\t\t\ttmp.copy( t );\n\t\t\ttmp.sub( n.multiplyScalar( n.dot( t ) ) ).normalize();\n\n\t\t\t// Calculate handedness\n\n\t\t\ttmp2.crossVectors( n2, t );\n\t\t\tconst test = tmp2.dot( tan2[ v ] );\n\t\t\tconst w = ( test < 0.0 ) ? - 1.0 : 1.0;\n\n\t\t\ttangents[ v * 4 ] = tmp.x;\n\t\t\ttangents[ v * 4 + 1 ] = tmp.y;\n\t\t\ttangents[ v * 4 + 2 ] = tmp.z;\n\t\t\ttangents[ v * 4 + 3 ] = w;\n\n\t\t}\n\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\tconst group = groups[ i ];\n\n\t\t\tconst start = group.start;\n\t\t\tconst count = group.count;\n\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\thandleVertex( indices[ j + 0 ] );\n\t\t\t\thandleVertex( indices[ j + 1 ] );\n\t\t\t\thandleVertex( indices[ j + 2 ] );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcomputeVertexNormals() {\n\n\t\tconst index = this.index;\n\t\tconst positionAttribute = this.getAttribute( 'position' );\n\n\t\tif ( positionAttribute !== undefined ) {\n\n\t\t\tlet normalAttribute = this.getAttribute( 'normal' );\n\n\t\t\tif ( normalAttribute === undefined ) {\n\n\t\t\t\tnormalAttribute = new BufferAttribute( new Float32Array( positionAttribute.count * 3 ), 3 );\n\t\t\t\tthis.setAttribute( 'normal', normalAttribute );\n\n\t\t\t} else {\n\n\t\t\t\t// reset existing normals to zero\n\n\t\t\t\tfor ( let i = 0, il = normalAttribute.count; i < il; i ++ ) {\n\n\t\t\t\t\tnormalAttribute.setXYZ( i, 0, 0, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst pA = new Vector3(), pB = new Vector3(), pC = new Vector3();\n\t\t\tconst nA = new Vector3(), nB = new Vector3(), nC = new Vector3();\n\t\t\tconst cb = new Vector3(), ab = new Vector3();\n\n\t\t\t// indexed elements\n\n\t\t\tif ( index ) {\n\n\t\t\t\tfor ( let i = 0, il = index.count; i < il; i += 3 ) {\n\n\t\t\t\t\tconst vA = index.getX( i + 0 );\n\t\t\t\t\tconst vB = index.getX( i + 1 );\n\t\t\t\t\tconst vC = index.getX( i + 2 );\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, vA );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, vB );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, vC );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnA.fromBufferAttribute( normalAttribute, vA );\n\t\t\t\t\tnB.fromBufferAttribute( normalAttribute, vB );\n\t\t\t\t\tnC.fromBufferAttribute( normalAttribute, vC );\n\n\t\t\t\t\tnA.add( cb );\n\t\t\t\t\tnB.add( cb );\n\t\t\t\t\tnC.add( cb );\n\n\t\t\t\t\tnormalAttribute.setXYZ( vA, nA.x, nA.y, nA.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vB, nB.x, nB.y, nB.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vC, nC.x, nC.y, nC.z );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed elements (unconnected triangle soup)\n\n\t\t\t\tfor ( let i = 0, il = positionAttribute.count; i < il; i += 3 ) {\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, i + 0 );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, i + 1 );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, i + 2 );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnormalAttribute.setXYZ( i + 0, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 1, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 2, cb.x, cb.y, cb.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.normalizeNormals();\n\n\t\t\tnormalAttribute.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tmerge( geometry, offset ) {\n\n\t\tif ( ! ( geometry && geometry.isBufferGeometry ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( offset === undefined ) {\n\n\t\t\toffset = 0;\n\n\t\t\tconsole.warn(\n\t\t\t\t'THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. '\n\t\t\t\t+ 'Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge.'\n\t\t\t);\n\n\t\t}\n\n\t\tconst attributes = this.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tif ( geometry.attributes[ key ] === undefined ) continue;\n\n\t\t\tconst attribute1 = attributes[ key ];\n\t\t\tconst attributeArray1 = attribute1.array;\n\n\t\t\tconst attribute2 = geometry.attributes[ key ];\n\t\t\tconst attributeArray2 = attribute2.array;\n\n\t\t\tconst attributeOffset = attribute2.itemSize * offset;\n\t\t\tconst length = Math.min( attributeArray2.length, attributeArray1.length - attributeOffset );\n\n\t\t\tfor ( let i = 0, j = attributeOffset; i < length; i ++, j ++ ) {\n\n\t\t\t\tattributeArray1[ j ] = attributeArray2[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tnormalizeNormals() {\n\n\t\tconst normals = this.attributes.normal;\n\n\t\tfor ( let i = 0, il = normals.count; i < il; i ++ ) {\n\n\t\t\t_vector$8.fromBufferAttribute( normals, i );\n\n\t\t\t_vector$8.normalize();\n\n\t\t\tnormals.setXYZ( i, _vector$8.x, _vector$8.y, _vector$8.z );\n\n\t\t}\n\n\t}\n\n\ttoNonIndexed() {\n\n\t\tfunction convertBufferAttribute( attribute, indices ) {\n\n\t\t\tconst array = attribute.array;\n\t\t\tconst itemSize = attribute.itemSize;\n\t\t\tconst normalized = attribute.normalized;\n\n\t\t\tconst array2 = new array.constructor( indices.length * itemSize );\n\n\t\t\tlet index = 0, index2 = 0;\n\n\t\t\tfor ( let i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\tindex = indices[ i ] * attribute.data.stride + attribute.offset;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tindex = indices[ i ] * itemSize;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let j = 0; j < itemSize; j ++ ) {\n\n\t\t\t\t\tarray2[ index2 ++ ] = array[ index ++ ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( array2, itemSize, normalized );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.index === null ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed.' );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst geometry2 = new BufferGeometry();\n\n\t\tconst indices = this.index.array;\n\t\tconst attributes = this.attributes;\n\n\t\t// attributes\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\n\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\tgeometry2.setAttribute( name, newAttribute );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = this.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst morphArray = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, il = morphAttribute.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = morphAttribute[ i ];\n\n\t\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\t\tmorphArray.push( newAttribute );\n\n\t\t\t}\n\n\t\t\tgeometry2.morphAttributes[ name ] = morphArray;\n\n\t\t}\n\n\t\tgeometry2.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = this.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tgeometry2.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\treturn geometry2;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'BufferGeometry',\n\t\t\t\tgenerator: 'BufferGeometry.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard BufferGeometry serialization\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\tif ( this.parameters !== undefined ) {\n\n\t\t\tconst parameters = this.parameters;\n\n\t\t\tfor ( const key in parameters ) {\n\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\t// for simplicity the code assumes attributes are not shared across geometries, see #15811\n\n\t\tdata.data = { attributes: {} };\n\n\t\tconst index = this.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tdata.data.index = {\n\t\t\t\ttype: index.array.constructor.name,\n\t\t\t\tarray: Array.prototype.slice.call( index.array )\n\t\t\t};\n\n\t\t}\n\n\t\tconst attributes = this.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\n\t\t\tdata.data.attributes[ key ] = attribute.toJSON( data.data );\n\n\t\t}\n\n\t\tconst morphAttributes = {};\n\t\tlet hasMorphAttributes = false;\n\n\t\tfor ( const key in this.morphAttributes ) {\n\n\t\t\tconst attributeArray = this.morphAttributes[ key ];\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = attributeArray[ i ];\n\n\t\t\t\tarray.push( attribute.toJSON( data.data ) );\n\n\t\t\t}\n\n\t\t\tif ( array.length > 0 ) {\n\n\t\t\t\tmorphAttributes[ key ] = array;\n\n\t\t\t\thasMorphAttributes = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( hasMorphAttributes ) {\n\n\t\t\tdata.data.morphAttributes = morphAttributes;\n\t\t\tdata.data.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t}\n\n\t\tconst groups = this.groups;\n\n\t\tif ( groups.length > 0 ) {\n\n\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\n\n\t\t}\n\n\t\tconst boundingSphere = this.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tdata.data.boundingSphere = {\n\t\t\t\tcenter: boundingSphere.center.toArray(),\n\t\t\t\tradius: boundingSphere.radius\n\t\t\t};\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tclone() {\n\n\t\t return new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\t// reset\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\t\tthis.morphAttributes = {};\n\t\tthis.groups = [];\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// used for storing cloned, shared data\n\n\t\tconst data = {};\n\n\t\t// name\n\n\t\tthis.name = source.name;\n\n\t\t// index\n\n\t\tconst index = source.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tthis.setIndex( index.clone( data ) );\n\n\t\t}\n\n\t\t// attributes\n\n\t\tconst attributes = source.attributes;\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\t\t\tthis.setAttribute( name, attribute.clone( data ) );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = source.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst array = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, l = morphAttribute.length; i < l; i ++ ) {\n\n\t\t\t\tarray.push( morphAttribute[ i ].clone( data ) );\n\n\t\t\t}\n\n\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t}\n\n\t\tthis.morphTargetsRelative = source.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = source.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\t// bounding box\n\n\t\tconst boundingBox = source.boundingBox;\n\n\t\tif ( boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t}\n\n\t\t// bounding sphere\n\n\t\tconst boundingSphere = source.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t}\n\n\t\t// draw range\n\n\t\tthis.drawRange.start = source.drawRange.start;\n\t\tthis.drawRange.count = source.drawRange.count;\n\n\t\t// user data\n\n\t\tthis.userData = source.userData;\n\n\t\t// geometry generator parameters\n\n\t\tif ( source.parameters !== undefined ) this.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nBufferGeometry.prototype.isBufferGeometry = true;\n\nconst _inverseMatrix$2 = /*@__PURE__*/ new Matrix4();\nconst _ray$2 = /*@__PURE__*/ new Ray();\nconst _sphere$3 = /*@__PURE__*/ new Sphere();\n\nconst _vA$1 = /*@__PURE__*/ new Vector3();\nconst _vB$1 = /*@__PURE__*/ new Vector3();\nconst _vC$1 = /*@__PURE__*/ new Vector3();\n\nconst _tempA = /*@__PURE__*/ new Vector3();\nconst _tempB = /*@__PURE__*/ new Vector3();\nconst _tempC = /*@__PURE__*/ new Vector3();\n\nconst _morphA = /*@__PURE__*/ new Vector3();\nconst _morphB = /*@__PURE__*/ new Vector3();\nconst _morphC = /*@__PURE__*/ new Vector3();\n\nconst _uvA$1 = /*@__PURE__*/ new Vector2();\nconst _uvB$1 = /*@__PURE__*/ new Vector2();\nconst _uvC$1 = /*@__PURE__*/ new Vector2();\n\nconst _intersectionPoint = /*@__PURE__*/ new Vector3();\nconst _intersectionPointWorld = /*@__PURE__*/ new Vector3();\n\nclass Mesh extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new MeshBasicMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Mesh';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tif ( source.morphTargetInfluences !== undefined ) {\n\n\t\t\tthis.morphTargetInfluences = source.morphTargetInfluences.slice();\n\n\t\t}\n\n\t\tif ( source.morphTargetDictionary !== undefined ) {\n\n\t\t\tthis.morphTargetDictionary = Object.assign( {}, source.morphTargetDictionary );\n\n\t\t}\n\n\t\tthis.material = source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tconst morphAttributes = geometry.morphAttributes;\n\t\t\tconst keys = Object.keys( morphAttributes );\n\n\t\t\tif ( keys.length > 0 ) {\n\n\t\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst morphTargets = geometry.morphTargets;\n\n\t\t\tif ( morphTargets !== undefined && morphTargets.length > 0 ) {\n\n\t\t\t\tconsole.error( 'THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst material = this.material;\n\t\tconst matrixWorld = this.matrixWorld;\n\n\t\tif ( material === undefined ) return;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$3.copy( geometry.boundingSphere );\n\t\t_sphere$3.applyMatrix4( matrixWorld );\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$3 ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix$2.copy( matrixWorld ).invert();\n\t\t_ray$2.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$2 );\n\n\t\t// Check boundingBox before continuing\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tif ( _ray$2.intersectsBox( geometry.boundingBox ) === false ) return;\n\n\t\t}\n\n\t\tlet intersection;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tconst index = geometry.index;\n\t\t\tconst position = geometry.attributes.position;\n\t\t\tconst morphPosition = geometry.morphAttributes.position;\n\t\t\tconst morphTargetsRelative = geometry.morphTargetsRelative;\n\t\t\tconst uv = geometry.attributes.uv;\n\t\t\tconst uv2 = geometry.attributes.uv2;\n\t\t\tconst groups = geometry.groups;\n\t\t\tconst drawRange = geometry.drawRange;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\t// indexed buffer geometry\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\t\tconst end = Math.min( index.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );\n\n\t\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\t\tconst a = index.getX( j );\n\t\t\t\t\t\t\tconst b = index.getX( j + 1 );\n\t\t\t\t\t\t\tconst c = index.getX( j + 2 );\n\n\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, groupMaterial, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );\n\n\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\t\tconst a = index.getX( i );\n\t\t\t\t\t\tconst b = index.getX( i + 1 );\n\t\t\t\t\t\tconst c = index.getX( i + 2 );\n\n\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, material, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( position !== undefined ) {\n\n\t\t\t\t// non-indexed buffer geometry\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\t\tconst end = Math.min( position.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );\n\n\t\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\t\tconst a = j;\n\t\t\t\t\t\t\tconst b = j + 1;\n\t\t\t\t\t\t\tconst c = j + 2;\n\n\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, groupMaterial, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );\n\n\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\t\tconst end = Math.min( position.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\t\tconst a = i;\n\t\t\t\t\t\tconst b = i + 1;\n\t\t\t\t\t\tconst c = i + 2;\n\n\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, material, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\tconsole.error( 'THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\n\t\t}\n\n\t}\n\n}\n\nMesh.prototype.isMesh = true;\n\nfunction checkIntersection( object, material, raycaster, ray, pA, pB, pC, point ) {\n\n\tlet intersect;\n\n\tif ( material.side === BackSide ) {\n\n\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\n\n\t} else {\n\n\t\tintersect = ray.intersectTriangle( pA, pB, pC, material.side !== DoubleSide, point );\n\n\t}\n\n\tif ( intersect === null ) return null;\n\n\t_intersectionPointWorld.copy( point );\n\t_intersectionPointWorld.applyMatrix4( object.matrixWorld );\n\n\tconst distance = raycaster.ray.origin.distanceTo( _intersectionPointWorld );\n\n\tif ( distance < raycaster.near || distance > raycaster.far ) return null;\n\n\treturn {\n\t\tdistance: distance,\n\t\tpoint: _intersectionPointWorld.clone(),\n\t\tobject: object\n\t};\n\n}\n\nfunction checkBufferGeometryIntersection( object, material, raycaster, ray, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c ) {\n\n\t_vA$1.fromBufferAttribute( position, a );\n\t_vB$1.fromBufferAttribute( position, b );\n\t_vC$1.fromBufferAttribute( position, c );\n\n\tconst morphInfluences = object.morphTargetInfluences;\n\n\tif ( morphPosition && morphInfluences ) {\n\n\t\t_morphA.set( 0, 0, 0 );\n\t\t_morphB.set( 0, 0, 0 );\n\t\t_morphC.set( 0, 0, 0 );\n\n\t\tfor ( let i = 0, il = morphPosition.length; i < il; i ++ ) {\n\n\t\t\tconst influence = morphInfluences[ i ];\n\t\t\tconst morphAttribute = morphPosition[ i ];\n\n\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t_tempA.fromBufferAttribute( morphAttribute, a );\n\t\t\t_tempB.fromBufferAttribute( morphAttribute, b );\n\t\t\t_tempC.fromBufferAttribute( morphAttribute, c );\n\n\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t_morphA.addScaledVector( _tempA, influence );\n\t\t\t\t_morphB.addScaledVector( _tempB, influence );\n\t\t\t\t_morphC.addScaledVector( _tempC, influence );\n\n\t\t\t} else {\n\n\t\t\t\t_morphA.addScaledVector( _tempA.sub( _vA$1 ), influence );\n\t\t\t\t_morphB.addScaledVector( _tempB.sub( _vB$1 ), influence );\n\t\t\t\t_morphC.addScaledVector( _tempC.sub( _vC$1 ), influence );\n\n\t\t\t}\n\n\t\t}\n\n\t\t_vA$1.add( _morphA );\n\t\t_vB$1.add( _morphB );\n\t\t_vC$1.add( _morphC );\n\n\t}\n\n\tif ( object.isSkinnedMesh ) {\n\n\t\tobject.boneTransform( a, _vA$1 );\n\t\tobject.boneTransform( b, _vB$1 );\n\t\tobject.boneTransform( c, _vC$1 );\n\n\t}\n\n\tconst intersection = checkIntersection( object, material, raycaster, ray, _vA$1, _vB$1, _vC$1, _intersectionPoint );\n\n\tif ( intersection ) {\n\n\t\tif ( uv ) {\n\n\t\t\t_uvA$1.fromBufferAttribute( uv, a );\n\t\t\t_uvB$1.fromBufferAttribute( uv, b );\n\t\t\t_uvC$1.fromBufferAttribute( uv, c );\n\n\t\t\tintersection.uv = Triangle.getUV( _intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2() );\n\n\t\t}\n\n\t\tif ( uv2 ) {\n\n\t\t\t_uvA$1.fromBufferAttribute( uv2, a );\n\t\t\t_uvB$1.fromBufferAttribute( uv2, b );\n\t\t\t_uvC$1.fromBufferAttribute( uv2, c );\n\n\t\t\tintersection.uv2 = Triangle.getUV( _intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2() );\n\n\t\t}\n\n\t\tconst face = {\n\t\t\ta: a,\n\t\t\tb: b,\n\t\t\tc: c,\n\t\t\tnormal: new Vector3(),\n\t\t\tmaterialIndex: 0\n\t\t};\n\n\t\tTriangle.getNormal( _vA$1, _vB$1, _vC$1, face.normal );\n\n\t\tintersection.face = face;\n\n\t}\n\n\treturn intersection;\n\n}\n\nclass BoxGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, depth = 1, widthSegments = 1, heightSegments = 1, depthSegments = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'BoxGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\tdepth: depth,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tdepthSegments: depthSegments\n\t\t};\n\n\t\tconst scope = this;\n\n\t\t// segments\n\n\t\twidthSegments = Math.floor( widthSegments );\n\t\theightSegments = Math.floor( heightSegments );\n\t\tdepthSegments = Math.floor( depthSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet numberOfVertices = 0;\n\t\tlet groupStart = 0;\n\n\t\t// build each side of the box geometry\n\n\t\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height, width, depthSegments, heightSegments, 0 ); // px\n\t\tbuildPlane( 'z', 'y', 'x', 1, - 1, depth, height, - width, depthSegments, heightSegments, 1 ); // nx\n\t\tbuildPlane( 'x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2 ); // py\n\t\tbuildPlane( 'x', 'z', 'y', 1, - 1, width, depth, - height, widthSegments, depthSegments, 3 ); // ny\n\t\tbuildPlane( 'x', 'y', 'z', 1, - 1, width, height, depth, widthSegments, heightSegments, 4 ); // pz\n\t\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth, widthSegments, heightSegments, 5 ); // nz\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\n\n\t\t\tconst segmentWidth = width / gridX;\n\t\t\tconst segmentHeight = height / gridY;\n\n\t\t\tconst widthHalf = width / 2;\n\t\t\tconst heightHalf = height / 2;\n\t\t\tconst depthHalf = depth / 2;\n\n\t\t\tconst gridX1 = gridX + 1;\n\t\t\tconst gridY1 = gridY + 1;\n\n\t\t\tlet vertexCounter = 0;\n\t\t\tlet groupCount = 0;\n\n\t\t\tconst vector = new Vector3();\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\t\tconst y = iy * segmentHeight - heightHalf;\n\n\t\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\t\tconst x = ix * segmentWidth - widthHalf;\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = x * udir;\n\t\t\t\t\tvector[ v ] = y * vdir;\n\t\t\t\t\tvector[ w ] = depthHalf;\n\n\t\t\t\t\t// now apply vector to vertex buffer\n\n\t\t\t\t\tvertices.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = 0;\n\t\t\t\t\tvector[ v ] = 0;\n\t\t\t\t\tvector[ w ] = depth > 0 ? 1 : - 1;\n\n\t\t\t\t\t// now apply vector to normal buffer\n\n\t\t\t\t\tnormals.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// uvs\n\n\t\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t\t\t// counters\n\n\t\t\t\t\tvertexCounter += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// indices\n\n\t\t\t// 1. you need three indices to draw a single face\n\t\t\t// 2. a single segment consists of two faces\n\t\t\t// 3. so we need to generate six (2*3) indices per segment\n\n\t\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\t\tconst a = numberOfVertices + ix + gridX1 * iy;\n\t\t\t\t\tconst b = numberOfVertices + ix + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// increase counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, materialIndex );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t\t// update total number of vertices\n\n\t\t\tnumberOfVertices += vertexCounter;\n\n\t\t}\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new BoxGeometry( data.width, data.height, data.depth, data.widthSegments, data.heightSegments, data.depthSegments );\n\n\t}\n\n}\n\n/**\n * Uniform Utilities\n */\n\nfunction cloneUniforms( src ) {\n\n\tconst dst = {};\n\n\tfor ( const u in src ) {\n\n\t\tdst[ u ] = {};\n\n\t\tfor ( const p in src[ u ] ) {\n\n\t\t\tconst property = src[ u ][ p ];\n\n\t\t\tif ( property && ( property.isColor ||\n\t\t\t\tproperty.isMatrix3 || property.isMatrix4 ||\n\t\t\t\tproperty.isVector2 || property.isVector3 || property.isVector4 ||\n\t\t\t\tproperty.isTexture || property.isQuaternion ) ) {\n\n\t\t\t\tdst[ u ][ p ] = property.clone();\n\n\t\t\t} else if ( Array.isArray( property ) ) {\n\n\t\t\t\tdst[ u ][ p ] = property.slice();\n\n\t\t\t} else {\n\n\t\t\t\tdst[ u ][ p ] = property;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn dst;\n\n}\n\nfunction mergeUniforms( uniforms ) {\n\n\tconst merged = {};\n\n\tfor ( let u = 0; u < uniforms.length; u ++ ) {\n\n\t\tconst tmp = cloneUniforms( uniforms[ u ] );\n\n\t\tfor ( const p in tmp ) {\n\n\t\t\tmerged[ p ] = tmp[ p ];\n\n\t\t}\n\n\t}\n\n\treturn merged;\n\n}\n\n// Legacy\n\nconst UniformsUtils = { clone: cloneUniforms, merge: mergeUniforms };\n\nvar default_vertex = \"void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\";\n\nvar default_fragment = \"void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}\";\n\nclass ShaderMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ShaderMaterial';\n\n\t\tthis.defines = {};\n\t\tthis.uniforms = {};\n\n\t\tthis.vertexShader = default_vertex;\n\t\tthis.fragmentShader = default_fragment;\n\n\t\tthis.linewidth = 1;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.fog = false; // set to use scene fog\n\t\tthis.lights = false; // set to use scene lights\n\t\tthis.clipping = false; // set to use user-defined clipping planes\n\n\t\tthis.extensions = {\n\t\t\tderivatives: false, // set to use derivatives\n\t\t\tfragDepth: false, // set to use fragment depth values\n\t\t\tdrawBuffers: false, // set to use draw buffers\n\t\t\tshaderTextureLOD: false // set to use shader texture LOD\n\t\t};\n\n\t\t// When rendered geometry doesn't include these attributes but the material does,\n\t\t// use these default values in WebGL. This avoids errors when buffer data is missing.\n\t\tthis.defaultAttributeValues = {\n\t\t\t'color': [ 1, 1, 1 ],\n\t\t\t'uv': [ 0, 0 ],\n\t\t\t'uv2': [ 0, 0 ]\n\t\t};\n\n\t\tthis.index0AttributeName = undefined;\n\t\tthis.uniformsNeedUpdate = false;\n\n\t\tthis.glslVersion = null;\n\n\t\tif ( parameters !== undefined ) {\n\n\t\t\tif ( parameters.attributes !== undefined ) {\n\n\t\t\t\tconsole.error( 'THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.' );\n\n\t\t\t}\n\n\t\t\tthis.setValues( parameters );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.fragmentShader = source.fragmentShader;\n\t\tthis.vertexShader = source.vertexShader;\n\n\t\tthis.uniforms = cloneUniforms( source.uniforms );\n\n\t\tthis.defines = Object.assign( {}, source.defines );\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.fog = source.fog;\n\t\tthis.lights = source.lights;\n\t\tthis.clipping = source.clipping;\n\n\t\tthis.extensions = Object.assign( {}, source.extensions );\n\n\t\tthis.glslVersion = source.glslVersion;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.glslVersion = this.glslVersion;\n\t\tdata.uniforms = {};\n\n\t\tfor ( const name in this.uniforms ) {\n\n\t\t\tconst uniform = this.uniforms[ name ];\n\t\t\tconst value = uniform.value;\n\n\t\t\tif ( value && value.isTexture ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 't',\n\t\t\t\t\tvalue: value.toJSON( meta ).uuid\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isColor ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'c',\n\t\t\t\t\tvalue: value.getHex()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector2 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v2',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\tvalue: value\n\t\t\t\t};\n\n\t\t\t\t// note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( Object.keys( this.defines ).length > 0 ) data.defines = this.defines;\n\n\t\tdata.vertexShader = this.vertexShader;\n\t\tdata.fragmentShader = this.fragmentShader;\n\n\t\tconst extensions = {};\n\n\t\tfor ( const key in this.extensions ) {\n\n\t\t\tif ( this.extensions[ key ] === true ) extensions[ key ] = true;\n\n\t\t}\n\n\t\tif ( Object.keys( extensions ).length > 0 ) data.extensions = extensions;\n\n\t\treturn data;\n\n\t}\n\n}\n\nShaderMaterial.prototype.isShaderMaterial = true;\n\nclass Camera extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'Camera';\n\n\t\tthis.matrixWorldInverse = new Matrix4();\n\n\t\tthis.projectionMatrix = new Matrix4();\n\t\tthis.projectionMatrixInverse = new Matrix4();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\n\n\t\tthis.projectionMatrix.copy( source.projectionMatrix );\n\t\tthis.projectionMatrixInverse.copy( source.projectionMatrixInverse );\n\n\t\treturn this;\n\n\t}\n\n\tgetWorldDirection( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tconst e = this.matrixWorld.elements;\n\n\t\treturn target.set( - e[ 8 ], - e[ 9 ], - e[ 10 ] ).normalize();\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t}\n\n\tupdateWorldMatrix( updateParents, updateChildren ) {\n\n\t\tsuper.updateWorldMatrix( updateParents, updateChildren );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nCamera.prototype.isCamera = true;\n\nclass PerspectiveCamera extends Camera {\n\n\tconstructor( fov = 50, aspect = 1, near = 0.1, far = 2000 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PerspectiveCamera';\n\n\t\tthis.fov = fov;\n\t\tthis.zoom = 1;\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\t\tthis.focus = 10;\n\n\t\tthis.aspect = aspect;\n\t\tthis.view = null;\n\n\t\tthis.filmGauge = 35;\t// width of the film (default in millimeters)\n\t\tthis.filmOffset = 0;\t// horizontal film offset (same unit as gauge)\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.fov = source.fov;\n\t\tthis.zoom = source.zoom;\n\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\t\tthis.focus = source.focus;\n\n\t\tthis.aspect = source.aspect;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\tthis.filmGauge = source.filmGauge;\n\t\tthis.filmOffset = source.filmOffset;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Sets the FOV by focal length in respect to the current .filmGauge.\n\t *\n\t * The default film gauge is 35, so that the focal length can be specified for\n\t * a 35mm (full frame) camera.\n\t *\n\t * Values for focal length and film gauge must have the same unit.\n\t */\n\tsetFocalLength( focalLength ) {\n\n\t\t/** see {@link http://www.bobatkins.com/photography/technical/field_of_view.html} */\n\t\tconst vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n\n\t\tthis.fov = RAD2DEG * 2 * Math.atan( vExtentSlope );\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\t/**\n\t * Calculates the focal length from the current .fov and .filmGauge.\n\t */\n\tgetFocalLength() {\n\n\t\tconst vExtentSlope = Math.tan( DEG2RAD * 0.5 * this.fov );\n\n\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\n\n\t}\n\n\tgetEffectiveFOV() {\n\n\t\treturn RAD2DEG * 2 * Math.atan(\n\t\t\tMath.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom );\n\n\t}\n\n\tgetFilmWidth() {\n\n\t\t// film not completely covered in portrait format (aspect < 1)\n\t\treturn this.filmGauge * Math.min( this.aspect, 1 );\n\n\t}\n\n\tgetFilmHeight() {\n\n\t\t// film not completely covered in landscape format (aspect > 1)\n\t\treturn this.filmGauge / Math.max( this.aspect, 1 );\n\n\t}\n\n\t/**\n\t * Sets an offset in a larger frustum. This is useful for multi-window or\n\t * multi-monitor/multi-machine setups.\n\t *\n\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t * the monitors are in grid like this\n\t *\n\t *   +---+---+---+\n\t *   | A | B | C |\n\t *   +---+---+---+\n\t *   | D | E | F |\n\t *   +---+---+---+\n\t *\n\t * then for each monitor you would call it like this\n\t *\n\t *   const w = 1920;\n\t *   const h = 1080;\n\t *   const fullWidth = w * 3;\n\t *   const fullHeight = h * 2;\n\t *\n\t *   --A--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t *   --B--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t *   --C--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t *   --D--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t *   --E--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t *   --F--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t *\n\t *   Note there is no reason monitors have to be the same size or in a grid.\n\t */\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tthis.aspect = fullWidth / fullHeight;\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tclearViewOffset() {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tupdateProjectionMatrix() {\n\n\t\tconst near = this.near;\n\t\tlet top = near * Math.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom;\n\t\tlet height = 2 * top;\n\t\tlet width = this.aspect * height;\n\t\tlet left = - 0.5 * width;\n\t\tconst view = this.view;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst fullWidth = view.fullWidth,\n\t\t\t\tfullHeight = view.fullHeight;\n\n\t\t\tleft += view.offsetX * width / fullWidth;\n\t\t\ttop -= view.offsetY * height / fullHeight;\n\t\t\twidth *= view.width / fullWidth;\n\t\t\theight *= view.height / fullHeight;\n\n\t\t}\n\n\t\tconst skew = this.filmOffset;\n\t\tif ( skew !== 0 ) left += near * skew / this.getFilmWidth();\n\n\t\tthis.projectionMatrix.makePerspective( left, left + width, top, top - height, near, this.far );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.fov = this.fov;\n\t\tdata.object.zoom = this.zoom;\n\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\t\tdata.object.focus = this.focus;\n\n\t\tdata.object.aspect = this.aspect;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\tdata.object.filmGauge = this.filmGauge;\n\t\tdata.object.filmOffset = this.filmOffset;\n\n\t\treturn data;\n\n\t}\n\n}\n\nPerspectiveCamera.prototype.isPerspectiveCamera = true;\n\nconst fov = 90, aspect = 1;\n\nclass CubeCamera extends Object3D {\n\n\tconstructor( near, far, renderTarget ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CubeCamera';\n\n\t\tif ( renderTarget.isWebGLCubeRenderTarget !== true ) {\n\n\t\t\tconsole.error( 'THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.renderTarget = renderTarget;\n\n\t\tconst cameraPX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPX.layers = this.layers;\n\t\tcameraPX.up.set( 0, - 1, 0 );\n\t\tcameraPX.lookAt( new Vector3( 1, 0, 0 ) );\n\t\tthis.add( cameraPX );\n\n\t\tconst cameraNX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNX.layers = this.layers;\n\t\tcameraNX.up.set( 0, - 1, 0 );\n\t\tcameraNX.lookAt( new Vector3( - 1, 0, 0 ) );\n\t\tthis.add( cameraNX );\n\n\t\tconst cameraPY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPY.layers = this.layers;\n\t\tcameraPY.up.set( 0, 0, 1 );\n\t\tcameraPY.lookAt( new Vector3( 0, 1, 0 ) );\n\t\tthis.add( cameraPY );\n\n\t\tconst cameraNY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNY.layers = this.layers;\n\t\tcameraNY.up.set( 0, 0, - 1 );\n\t\tcameraNY.lookAt( new Vector3( 0, - 1, 0 ) );\n\t\tthis.add( cameraNY );\n\n\t\tconst cameraPZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPZ.layers = this.layers;\n\t\tcameraPZ.up.set( 0, - 1, 0 );\n\t\tcameraPZ.lookAt( new Vector3( 0, 0, 1 ) );\n\t\tthis.add( cameraPZ );\n\n\t\tconst cameraNZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNZ.layers = this.layers;\n\t\tcameraNZ.up.set( 0, - 1, 0 );\n\t\tcameraNZ.lookAt( new Vector3( 0, 0, - 1 ) );\n\t\tthis.add( cameraNZ );\n\n\t}\n\n\tupdate( renderer, scene ) {\n\n\t\tif ( this.parent === null ) this.updateMatrixWorld();\n\n\t\tconst renderTarget = this.renderTarget;\n\n\t\tconst [ cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ ] = this.children;\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tconst currentToneMapping = renderer.toneMapping;\n\t\tconst currentXrEnabled = renderer.xr.enabled;\n\n\t\trenderer.toneMapping = NoToneMapping;\n\t\trenderer.xr.enabled = false;\n\n\t\tconst generateMipmaps = renderTarget.texture.generateMipmaps;\n\n\t\trenderTarget.texture.generateMipmaps = false;\n\n\t\trenderer.setRenderTarget( renderTarget, 0 );\n\t\trenderer.render( scene, cameraPX );\n\n\t\trenderer.setRenderTarget( renderTarget, 1 );\n\t\trenderer.render( scene, cameraNX );\n\n\t\trenderer.setRenderTarget( renderTarget, 2 );\n\t\trenderer.render( scene, cameraPY );\n\n\t\trenderer.setRenderTarget( renderTarget, 3 );\n\t\trenderer.render( scene, cameraNY );\n\n\t\trenderer.setRenderTarget( renderTarget, 4 );\n\t\trenderer.render( scene, cameraPZ );\n\n\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\n\n\t\trenderer.setRenderTarget( renderTarget, 5 );\n\t\trenderer.render( scene, cameraNZ );\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t\trenderer.toneMapping = currentToneMapping;\n\t\trenderer.xr.enabled = currentXrEnabled;\n\n\t\trenderTarget.texture.needsPMREMUpdate = true;\n\n\t}\n\n}\n\nclass CubeTexture extends Texture {\n\n\tconstructor( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\n\n\t\timages = images !== undefined ? images : [];\n\t\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n\n\t\tsuper( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\t\tthis.flipY = false;\n\n\t}\n\n\tget images() {\n\n\t\treturn this.image;\n\n\t}\n\n\tset images( value ) {\n\n\t\tthis.image = value;\n\n\t}\n\n}\n\nCubeTexture.prototype.isCubeTexture = true;\n\nclass WebGLCubeRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( size, options = {} ) {\n\n\t\tsuper( size, size, options );\n\n\t\tconst image = { width: size, height: size, depth: 1 };\n\t\tconst images = [ image, image, image, image, image, image ];\n\n\t\tthis.texture = new CubeTexture( images, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );\n\n\t\t// By convention -- likely based on the RenderMan spec from the 1990's -- cube maps are specified by WebGL (and three.js)\n\t\t// in a coordinate system in which positive-x is to the right when looking up the positive-z axis -- in other words,\n\t\t// in a left-handed coordinate system. By continuing this convention, preexisting cube maps continued to render correctly.\n\n\t\t// three.js uses a right-handed coordinate system. So environment maps used in three.js appear to have px and nx swapped\n\t\t// and the flag isRenderTargetTexture controls this conversion. The flip is not required when using WebGLCubeRenderTarget.texture\n\t\t// as a cube texture (this is detected when isRenderTargetTexture is set to true for cube textures).\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\t\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\n\t}\n\n\tfromEquirectangularTexture( renderer, texture ) {\n\n\t\tthis.texture.type = texture.type;\n\t\tthis.texture.encoding = texture.encoding;\n\n\t\tthis.texture.generateMipmaps = texture.generateMipmaps;\n\t\tthis.texture.minFilter = texture.minFilter;\n\t\tthis.texture.magFilter = texture.magFilter;\n\n\t\tconst shader = {\n\n\t\t\tuniforms: {\n\t\t\t\ttEquirect: { value: null },\n\t\t\t},\n\n\t\t\tvertexShader: /* glsl */`\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t`,\n\n\t\t\tfragmentShader: /* glsl */`\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t`\n\t\t};\n\n\t\tconst geometry = new BoxGeometry( 5, 5, 5 );\n\n\t\tconst material = new ShaderMaterial( {\n\n\t\t\tname: 'CubemapFromEquirect',\n\n\t\t\tuniforms: cloneUniforms( shader.uniforms ),\n\t\t\tvertexShader: shader.vertexShader,\n\t\t\tfragmentShader: shader.fragmentShader,\n\t\t\tside: BackSide,\n\t\t\tblending: NoBlending\n\n\t\t} );\n\n\t\tmaterial.uniforms.tEquirect.value = texture;\n\n\t\tconst mesh = new Mesh( geometry, material );\n\n\t\tconst currentMinFilter = texture.minFilter;\n\n\t\t// Avoid blurred poles\n\t\tif ( texture.minFilter === LinearMipmapLinearFilter ) texture.minFilter = LinearFilter;\n\n\t\tconst camera = new CubeCamera( 1, 10, this );\n\t\tcamera.update( renderer, mesh );\n\n\t\ttexture.minFilter = currentMinFilter;\n\n\t\tmesh.geometry.dispose();\n\t\tmesh.material.dispose();\n\n\t\treturn this;\n\n\t}\n\n\tclear( renderer, color, depth, stencil ) {\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\trenderer.setRenderTarget( this, i );\n\n\t\t\trenderer.clear( color, depth, stencil );\n\n\t\t}\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t}\n\n}\n\nWebGLCubeRenderTarget.prototype.isWebGLCubeRenderTarget = true;\n\nconst _vector1 = /*@__PURE__*/ new Vector3();\nconst _vector2 = /*@__PURE__*/ new Vector3();\nconst _normalMatrix = /*@__PURE__*/ new Matrix3();\n\nclass Plane {\n\n\tconstructor( normal = new Vector3( 1, 0, 0 ), constant = 0 ) {\n\n\t\t// normal is assumed to be normalized\n\n\t\tthis.normal = normal;\n\t\tthis.constant = constant;\n\n\t}\n\n\tset( normal, constant ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = constant;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponents( x, y, z, w ) {\n\n\t\tthis.normal.set( x, y, z );\n\t\tthis.constant = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromNormalAndCoplanarPoint( normal, point ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = - point.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCoplanarPoints( a, b, c ) {\n\n\t\tconst normal = _vector1.subVectors( c, b ).cross( _vector2.subVectors( a, b ) ).normalize();\n\n\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( plane ) {\n\n\t\tthis.normal.copy( plane.normal );\n\t\tthis.constant = plane.constant;\n\n\t\treturn this;\n\n\t}\n\n\tnormalize() {\n\n\t\t// Note: will lead to a divide by zero if the plane is invalid.\n\n\t\tconst inverseNormalLength = 1.0 / this.normal.length();\n\t\tthis.normal.multiplyScalar( inverseNormalLength );\n\t\tthis.constant *= inverseNormalLength;\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.constant *= - 1;\n\t\tthis.normal.negate();\n\n\t\treturn this;\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.normal.dot( point ) + this.constant;\n\n\t}\n\n\tdistanceToSphere( sphere ) {\n\n\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\n\n\t}\n\n\tprojectPoint( point, target ) {\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.distanceToPoint( point ) ).add( point );\n\n\t}\n\n\tintersectLine( line, target ) {\n\n\t\tconst direction = line.delta( _vector1 );\n\n\t\tconst denominator = this.normal.dot( direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\n\n\t\t\t\treturn target.copy( line.start );\n\n\t\t\t}\n\n\t\t\t// Unsure if this is the correct method to handle this case.\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\n\n\t\tif ( t < 0 || t > 1 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn target.copy( direction ).multiplyScalar( t ).add( line.start );\n\n\t}\n\n\tintersectsLine( line ) {\n\n\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\n\t\tconst startSign = this.distanceToPoint( line.start );\n\t\tconst endSign = this.distanceToPoint( line.end );\n\n\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsPlane( this );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn sphere.intersectsPlane( this );\n\n\t}\n\n\tcoplanarPoint( target ) {\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.constant );\n\n\t}\n\n\tapplyMatrix4( matrix, optionalNormalMatrix ) {\n\n\t\tconst normalMatrix = optionalNormalMatrix || _normalMatrix.getNormalMatrix( matrix );\n\n\t\tconst referencePoint = this.coplanarPoint( _vector1 ).applyMatrix4( matrix );\n\n\t\tconst normal = this.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\tthis.constant = - referencePoint.dot( normal );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.constant -= offset.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tequals( plane ) {\n\n\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nPlane.prototype.isPlane = true;\n\nconst _sphere$2 = /*@__PURE__*/ new Sphere();\nconst _vector$7 = /*@__PURE__*/ new Vector3();\n\nclass Frustum {\n\n\tconstructor( p0 = new Plane(), p1 = new Plane(), p2 = new Plane(), p3 = new Plane(), p4 = new Plane(), p5 = new Plane() ) {\n\n\t\tthis.planes = [ p0, p1, p2, p3, p4, p5 ];\n\n\t}\n\n\tset( p0, p1, p2, p3, p4, p5 ) {\n\n\t\tconst planes = this.planes;\n\n\t\tplanes[ 0 ].copy( p0 );\n\t\tplanes[ 1 ].copy( p1 );\n\t\tplanes[ 2 ].copy( p2 );\n\t\tplanes[ 3 ].copy( p3 );\n\t\tplanes[ 4 ].copy( p4 );\n\t\tplanes[ 5 ].copy( p5 );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( frustum ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromProjectionMatrix( m ) {\n\n\t\tconst planes = this.planes;\n\t\tconst me = m.elements;\n\t\tconst me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\n\t\tconst me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\n\t\tconst me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\n\t\tconst me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\n\n\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\n\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\n\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\n\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\n\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\n\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\n\n\t\treturn this;\n\n\t}\n\n\tintersectsObject( object ) {\n\n\t\tconst geometry = object.geometry;\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$2.copy( geometry.boundingSphere ).applyMatrix4( object.matrixWorld );\n\n\t\treturn this.intersectsSphere( _sphere$2 );\n\n\t}\n\n\tintersectsSprite( sprite ) {\n\n\t\t_sphere$2.center.set( 0, 0, 0 );\n\t\t_sphere$2.radius = 0.7071067811865476;\n\t\t_sphere$2.applyMatrix4( sprite.matrixWorld );\n\n\t\treturn this.intersectsSphere( _sphere$2 );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst planes = this.planes;\n\t\tconst center = sphere.center;\n\t\tconst negRadius = - sphere.radius;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst distance = planes[ i ].distanceToPoint( center );\n\n\t\t\tif ( distance < negRadius ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst plane = planes[ i ];\n\n\t\t\t// corner at max distance\n\n\t\t\t_vector$7.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n\t\t\t_vector$7.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n\t\t\t_vector$7.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n\t\t\tif ( plane.distanceToPoint( _vector$7 ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nfunction WebGLAnimation() {\n\n\tlet context = null;\n\tlet isAnimating = false;\n\tlet animationLoop = null;\n\tlet requestId = null;\n\n\tfunction onAnimationFrame( time, frame ) {\n\n\t\tanimationLoop( time, frame );\n\n\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t}\n\n\treturn {\n\n\t\tstart: function () {\n\n\t\t\tif ( isAnimating === true ) return;\n\t\t\tif ( animationLoop === null ) return;\n\n\t\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t\t\tisAnimating = true;\n\n\t\t},\n\n\t\tstop: function () {\n\n\t\t\tcontext.cancelAnimationFrame( requestId );\n\n\t\t\tisAnimating = false;\n\n\t\t},\n\n\t\tsetAnimationLoop: function ( callback ) {\n\n\t\t\tanimationLoop = callback;\n\n\t\t},\n\n\t\tsetContext: function ( value ) {\n\n\t\t\tcontext = value;\n\n\t\t}\n\n\t};\n\n}\n\nfunction WebGLAttributes( gl, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tconst buffers = new WeakMap();\n\n\tfunction createBuffer( attribute, bufferType ) {\n\n\t\tconst array = attribute.array;\n\t\tconst usage = attribute.usage;\n\n\t\tconst buffer = gl.createBuffer();\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\t\tgl.bufferData( bufferType, array, usage );\n\n\t\tattribute.onUploadCallback();\n\n\t\tlet type;\n\n\t\tif ( array instanceof Float32Array ) {\n\n\t\t\ttype = 5126;\n\n\t\t} else if ( array instanceof Uint16Array ) {\n\n\t\t\tif ( attribute.isFloat16BufferAttribute ) {\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\ttype = 5131;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( 'THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\ttype = 5123;\n\n\t\t\t}\n\n\t\t} else if ( array instanceof Int16Array ) {\n\n\t\t\ttype = 5122;\n\n\t\t} else if ( array instanceof Uint32Array ) {\n\n\t\t\ttype = 5125;\n\n\t\t} else if ( array instanceof Int32Array ) {\n\n\t\t\ttype = 5124;\n\n\t\t} else if ( array instanceof Int8Array ) {\n\n\t\t\ttype = 5120;\n\n\t\t} else if ( array instanceof Uint8Array ) {\n\n\t\t\ttype = 5121;\n\n\t\t} else if ( array instanceof Uint8ClampedArray ) {\n\n\t\t\ttype = 5121;\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.WebGLAttributes: Unsupported buffer data format: ' + array );\n\n\t\t}\n\n\t\treturn {\n\t\t\tbuffer: buffer,\n\t\t\ttype: type,\n\t\t\tbytesPerElement: array.BYTES_PER_ELEMENT,\n\t\t\tversion: attribute.version\n\t\t};\n\n\t}\n\n\tfunction updateBuffer( buffer, attribute, bufferType ) {\n\n\t\tconst array = attribute.array;\n\t\tconst updateRange = attribute.updateRange;\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\n\t\tif ( updateRange.count === - 1 ) {\n\n\t\t\t// Not using update ranges\n\n\t\t\tgl.bufferSubData( bufferType, 0, array );\n\n\t\t} else {\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\t\tarray, updateRange.offset, updateRange.count );\n\n\t\t\t} else {\n\n\t\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\t\tarray.subarray( updateRange.offset, updateRange.offset + updateRange.count ) );\n\n\t\t\t}\n\n\t\t\tupdateRange.count = - 1; // reset range\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction get( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\treturn buffers.get( attribute );\n\n\t}\n\n\tfunction remove( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tconst data = buffers.get( attribute );\n\n\t\tif ( data ) {\n\n\t\t\tgl.deleteBuffer( data.buffer );\n\n\t\t\tbuffers.delete( attribute );\n\n\t\t}\n\n\t}\n\n\tfunction update( attribute, bufferType ) {\n\n\t\tif ( attribute.isGLBufferAttribute ) {\n\n\t\t\tconst cached = buffers.get( attribute );\n\n\t\t\tif ( ! cached || cached.version < attribute.version ) {\n\n\t\t\t\tbuffers.set( attribute, {\n\t\t\t\t\tbuffer: attribute.buffer,\n\t\t\t\t\ttype: attribute.type,\n\t\t\t\t\tbytesPerElement: attribute.elementSize,\n\t\t\t\t\tversion: attribute.version\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tconst data = buffers.get( attribute );\n\n\t\tif ( data === undefined ) {\n\n\t\t\tbuffers.set( attribute, createBuffer( attribute, bufferType ) );\n\n\t\t} else if ( data.version < attribute.version ) {\n\n\t\t\tupdateBuffer( data.buffer, attribute, bufferType );\n\n\t\t\tdata.version = attribute.version;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update\n\n\t};\n\n}\n\nclass PlaneGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, widthSegments = 1, heightSegments = 1 ) {\n\n\t\tsuper();\n\t\tthis.type = 'PlaneGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments\n\t\t};\n\n\t\tconst width_half = width / 2;\n\t\tconst height_half = height / 2;\n\n\t\tconst gridX = Math.floor( widthSegments );\n\t\tconst gridY = Math.floor( heightSegments );\n\n\t\tconst gridX1 = gridX + 1;\n\t\tconst gridY1 = gridY + 1;\n\n\t\tconst segment_width = width / gridX;\n\t\tconst segment_height = height / gridY;\n\n\t\t//\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\tconst y = iy * segment_height - height_half;\n\n\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\tconst x = ix * segment_width - width_half;\n\n\t\t\t\tvertices.push( x, - y, 0 );\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\tconst a = ix + gridX1 * iy;\n\t\t\t\tconst b = ix + gridX1 * ( iy + 1 );\n\t\t\t\tconst c = ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\tconst d = ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new PlaneGeometry( data.width, data.height, data.widthSegments, data.heightSegments );\n\n\t}\n\n}\n\nvar alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\";\n\nvar alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\nvar alphatest_fragment = \"#ifdef USE_ALPHATEST\\n\\tif ( diffuseColor.a < alphaTest ) discard;\\n#endif\";\n\nvar alphatest_pars_fragment = \"#ifdef USE_ALPHATEST\\n\\tuniform float alphaTest;\\n#endif\";\n\nvar aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\\n\\t#endif\\n#endif\";\n\nvar aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\n\nvar begin_vertex = \"vec3 transformed = vec3( position );\";\n\nvar beginnormal_vertex = \"vec3 objectNormal = vec3( normal );\\n#ifdef USE_TANGENT\\n\\tvec3 objectTangent = vec3( tangent.xyz );\\n#endif\";\n\nvar bsdfs = \"vec3 BRDF_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\\n\\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\\n\\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\\n}\\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( f0, f90, dotVH );\\n\\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\tfloat D = D_GGX( alpha, dotNH );\\n\\treturn F * ( V * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn vec3( result );\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n}\\n#if defined( USE_SHEEN )\\nfloat D_Charlie( float roughness, float dotNH ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tfloat invAlpha = 1.0 / alpha;\\n\\tfloat cos2h = dotNH * dotNH;\\n\\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\\n\\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\\n}\\nfloat V_Neubelt( float dotNV, float dotNL ) {\\n\\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\\n}\\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat D = D_Charlie( sheenRoughness, dotNH );\\n\\tfloat V = V_Neubelt( dotNV, dotNL );\\n\\treturn sheenColor * ( D * V );\\n}\\n#endif\";\n\nvar bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vUv );\\n\\t\\tvec2 dSTdy = dFdy( vUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\\n\\t\\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\\n\\t\\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\";\n\nvar clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvec4 plane;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\tplane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t\\tif ( clipped ) discard;\\n\\t#endif\\n#endif\";\n\nvar clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\";\n\nvar clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n#endif\";\n\nvar clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvClipPosition = - mvPosition.xyz;\\n#endif\";\n\nvar color_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tdiffuseColor *= vColor;\\n#elif defined( USE_COLOR )\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\n\nvar color_pars_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_pars_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvColor = vec4( 1.0 );\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvColor = vec3( 1.0 );\\n#endif\\n#ifdef USE_COLOR\\n\\tvColor *= color;\\n#endif\\n#ifdef USE_INSTANCING_COLOR\\n\\tvColor.xyz *= instanceColor.xyz;\\n#endif\";\n\nvar common = \"#define PI 3.141592653589793\\n#define PI2 6.283185307179586\\n#define PI_HALF 1.5707963267948966\\n#define RECIPROCAL_PI 0.3183098861837907\\n#define RECIPROCAL_PI2 0.15915494309189535\\n#define EPSILON 1e-6\\n#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract( sin( sn ) * c );\\n}\\n#ifdef HIGH_PRECISION\\n\\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\\n#else\\n\\tfloat precisionSafeLength( vec3 v ) {\\n\\t\\tfloat maxComponent = max3( abs( v ) );\\n\\t\\treturn length( v / maxComponent ) * maxComponent;\\n\\t}\\n#endif\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n#ifdef USE_CLEARCOAT\\n\\tvec3 clearcoatNormal;\\n#endif\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nfloat linearToRelativeLuminance( const in vec3 color ) {\\n\\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\\n\\treturn dot( weights, color.rgb );\\n}\\nbool isPerspectiveMatrix( mat4 m ) {\\n\\treturn m[ 2 ][ 3 ] == - 1.0;\\n}\\nvec2 equirectUv( in vec3 dir ) {\\n\\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\treturn vec2( u, v );\\n}\";\n\nvar cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t#define cubeUV_minMipLevel 4.0\\n\\t#define cubeUV_minTileSize 16.0\\n\\tfloat getFace( vec3 direction ) {\\n\\t\\tvec3 absDirection = abs( direction );\\n\\t\\tfloat face = - 1.0;\\n\\t\\tif ( absDirection.x > absDirection.z ) {\\n\\t\\t\\tif ( absDirection.x > absDirection.y )\\n\\t\\t\\t\\tface = direction.x > 0.0 ? 0.0 : 3.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t} else {\\n\\t\\t\\tif ( absDirection.z > absDirection.y )\\n\\t\\t\\t\\tface = direction.z > 0.0 ? 2.0 : 5.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t}\\n\\t\\treturn face;\\n\\t}\\n\\tvec2 getUV( vec3 direction, float face ) {\\n\\t\\tvec2 uv;\\n\\t\\tif ( face == 0.0 ) {\\n\\t\\t\\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 1.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\\n\\t\\t} else if ( face == 2.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\\n\\t\\t} else if ( face == 3.0 ) {\\n\\t\\t\\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 4.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\\n\\t\\t} else {\\n\\t\\t\\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\\n\\t\\t}\\n\\t\\treturn 0.5 * ( uv + 1.0 );\\n\\t}\\n\\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\\n\\t\\tfloat face = getFace( direction );\\n\\t\\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\\n\\t\\tmipInt = max( mipInt, cubeUV_minMipLevel );\\n\\t\\tfloat faceSize = exp2( mipInt );\\n\\t\\tvec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;\\n\\t\\tif ( face > 2.0 ) {\\n\\t\\t\\tuv.y += faceSize;\\n\\t\\t\\tface -= 3.0;\\n\\t\\t}\\n\\t\\tuv.x += face * faceSize;\\n\\t\\tuv.x += filterInt * 3.0 * cubeUV_minTileSize;\\n\\t\\tuv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\\n\\t\\tuv.x *= CUBEUV_TEXEL_WIDTH;\\n\\t\\tuv.y *= CUBEUV_TEXEL_HEIGHT;\\n\\t\\t#ifdef texture2DGradEXT\\n\\t\\t\\treturn texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\\n\\t\\t#else\\n\\t\\t\\treturn texture2D( envMap, uv ).rgb;\\n\\t\\t#endif\\n\\t}\\n\\t#define r0 1.0\\n\\t#define v0 0.339\\n\\t#define m0 - 2.0\\n\\t#define r1 0.8\\n\\t#define v1 0.276\\n\\t#define m1 - 1.0\\n\\t#define r4 0.4\\n\\t#define v4 0.046\\n\\t#define m4 2.0\\n\\t#define r5 0.305\\n\\t#define v5 0.016\\n\\t#define m5 3.0\\n\\t#define r6 0.21\\n\\t#define v6 0.0038\\n\\t#define m6 4.0\\n\\tfloat roughnessToMip( float roughness ) {\\n\\t\\tfloat mip = 0.0;\\n\\t\\tif ( roughness >= r1 ) {\\n\\t\\t\\tmip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\\n\\t\\t} else if ( roughness >= r4 ) {\\n\\t\\t\\tmip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\\n\\t\\t} else if ( roughness >= r5 ) {\\n\\t\\t\\tmip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\\n\\t\\t} else if ( roughness >= r6 ) {\\n\\t\\t\\tmip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\\n\\t\\t} else {\\n\\t\\t\\tmip = - 2.0 * log2( 1.16 * roughness );\\t\\t}\\n\\t\\treturn mip;\\n\\t}\\n\\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\\n\\t\\tfloat mip = clamp( roughnessToMip( roughness ), m0, CUBEUV_MAX_MIP );\\n\\t\\tfloat mipF = fract( mip );\\n\\t\\tfloat mipInt = floor( mip );\\n\\t\\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\\n\\t\\tif ( mipF == 0.0 ) {\\n\\t\\t\\treturn vec4( color0, 1.0 );\\n\\t\\t} else {\\n\\t\\t\\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\\n\\t\\t\\treturn vec4( mix( color0, color1, mipF ), 1.0 );\\n\\t\\t}\\n\\t}\\n#endif\";\n\nvar defaultnormal_vertex = \"vec3 transformedNormal = objectNormal;\\n#ifdef USE_INSTANCING\\n\\tmat3 m = mat3( instanceMatrix );\\n\\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\\n\\ttransformedNormal = m * transformedNormal;\\n#endif\\ntransformedNormal = normalMatrix * transformedNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n#ifdef USE_TANGENT\\n\\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#ifdef FLIP_SIDED\\n\\t\\ttransformedTangent = - transformedTangent;\\n\\t#endif\\n#endif\";\n\nvar displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\";\n\nvar displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\\n#endif\";\n\nvar emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\";\n\nvar emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\";\n\nvar encodings_fragment = \"gl_FragColor = linearToOutputTexel( gl_FragColor );\";\n\nvar encodings_pars_fragment = \"vec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\\n}\";\n\nvar envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvec3 cameraToFrag;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\";\n\nvar envmap_common_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float envMapIntensity;\\n\\tuniform float flipEnvMap;\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\t\\n#endif\";\n\nvar envmap_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float reflectivity;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\";\n\nvar envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\t\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\";\n\nvar envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar fog_vertex = \"#ifdef USE_FOG\\n\\tvFogDepth = - mvPosition.z;\\n#endif\";\n\nvar fog_pars_vertex = \"#ifdef USE_FOG\\n\\tvarying float vFogDepth;\\n#endif\";\n\nvar fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\";\n\nvar fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float vFogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\";\n\nvar gradientmap_pars_fragment = \"#ifdef USE_GRADIENTMAP\\n\\tuniform sampler2D gradientMap;\\n#endif\\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\tfloat dotNL = dot( normal, lightDirection );\\n\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t#ifdef USE_GRADIENTMAP\\n\\t\\treturn vec3( texture2D( gradientMap, coord ).r );\\n\\t#else\\n\\t\\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\\n\\t#endif\\n}\";\n\nvar lightmap_fragment = \"#ifdef USE_LIGHTMAP\\n\\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\\n\\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\\n\\treflectedLight.indirectDiffuse += lightMapIrradiance;\\n#endif\";\n\nvar lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\n\nvar lights_lambert_vertex = \"vec3 diffuse = vec3( 1.0 );\\nGeometricContext geometry;\\ngeometry.position = mvPosition.xyz;\\ngeometry.normal = normalize( transformedNormal );\\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\\nGeometricContext backGeometry;\\nbackGeometry.position = geometry.position;\\nbackGeometry.normal = -geometry.normal;\\nbackGeometry.viewDir = geometry.viewDir;\\nvLightFront = vec3( 0.0 );\\nvIndirectFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\n\\tvLightBack = vec3( 0.0 );\\n\\tvIndirectBack = vec3( 0.0 );\\n#endif\\nIncidentLight directLight;\\nfloat dotNL;\\nvec3 directLightColor_Diffuse;\\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry.normal );\\n#ifdef DOUBLE_SIDED\\n\\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\\n\\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry.normal );\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tgetPointLightInfo( pointLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tgetSpotLightInfo( spotLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_DIR_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tgetDirectionalLightInfo( directionalLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry.normal );\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\";\n\nvar lights_pars_begin = \"uniform bool receiveShadow;\\nuniform vec3 ambientLightColor;\\nuniform vec3 lightProbe[ 9 ];\\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\\n\\tfloat x = normal.x, y = normal.y, z = normal.z;\\n\\tvec3 result = shCoefficients[ 0 ] * 0.886227;\\n\\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\\n\\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\\n\\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\\n\\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\\n\\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\\n\\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\\n\\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\\n\\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\\n\\treturn result;\\n}\\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\\n\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\\n\\treturn irradiance;\\n}\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\treturn irradiance;\\n}\\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n\\t#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\\t\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\t\\tif ( cutoffDistance > 0.0 ) {\\n\\t\\t\\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t\\t}\\n\\t\\treturn distanceFalloff;\\n\\t#else\\n\\t\\tif ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\\n\\t\\t\\treturn pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n\\t\\t}\\n\\t\\treturn 1.0;\\n\\t#endif\\n}\\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\\n\\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {\\n\\t\\tlight.color = directionalLight.color;\\n\\t\\tlight.direction = directionalLight.direction;\\n\\t\\tlight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tlight.color = pointLight.color;\\n\\t\\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat angleCos = dot( light.direction, spotLight.direction );\\n\\t\\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\tif ( spotAttenuation > 0.0 ) {\\n\\t\\t\\tfloat lightDistance = length( lVector );\\n\\t\\t\\tlight.color = spotLight.color * spotAttenuation;\\n\\t\\t\\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t\\t} else {\\n\\t\\t\\tlight.color = vec3( 0.0 );\\n\\t\\t\\tlight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltc_1;\\tuniform sampler2D ltc_2;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\\n\\t\\tfloat dotNL = dot( normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\";\n\nvar envmap_physical_pars_fragment = \"#if defined( USE_ENVMAP )\\n\\tvec3 getIBLIrradiance( const in vec3 normal ) {\\n\\t\\t#if defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\\n\\t\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n\\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\\n\\t\\t#if defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 reflectVec = reflect( - viewDir, normal );\\n\\t\\t\\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\\n\\t\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\\n\\t\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar lights_toon_fragment = \"ToonMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\";\n\nvar lights_toon_pars_fragment = \"varying vec3 vViewPosition;\\nstruct ToonMaterial {\\n\\tvec3 diffuseColor;\\n};\\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Toon\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Toon\\n#define Material_LightProbeLOD( material )\\t(0)\";\n\nvar lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\";\n\nvar lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\nstruct BlinnPhongMaterial {\\n\\tvec3 diffuseColor;\\n\\tvec3 specularColor;\\n\\tfloat specularShininess;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\\t(0)\";\n\nvar lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\\nmaterial.roughness = min( material.roughness, 1.0 );\\n#ifdef IOR\\n\\t#ifdef SPECULAR\\n\\t\\tfloat specularIntensityFactor = specularIntensity;\\n\\t\\tvec3 specularColorFactor = specularColor;\\n\\t\\t#ifdef USE_SPECULARINTENSITYMAP\\n\\t\\t\\tspecularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;\\n\\t\\t#endif\\n\\t\\t#ifdef USE_SPECULARCOLORMAP\\n\\t\\t\\tspecularColorFactor *= texture2D( specularColorMap, vUv ).rgb;\\n\\t\\t#endif\\n\\t\\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\\n\\t#else\\n\\t\\tfloat specularIntensityFactor = 1.0;\\n\\t\\tvec3 specularColorFactor = vec3( 1.0 );\\n\\t\\tmaterial.specularF90 = 1.0;\\n\\t#endif\\n\\tmaterial.specularColor = mix( min( pow2( ( ior - 1.0 ) / ( ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\\n\\tmaterial.specularF90 = 1.0;\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tmaterial.clearcoat = clearcoat;\\n\\tmaterial.clearcoatRoughness = clearcoatRoughness;\\n\\tmaterial.clearcoatF0 = vec3( 0.04 );\\n\\tmaterial.clearcoatF90 = 1.0;\\n\\t#ifdef USE_CLEARCOATMAP\\n\\t\\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\t\\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\\n\\t#endif\\n\\tmaterial.clearcoat = saturate( material.clearcoat );\\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\\n\\tmaterial.clearcoatRoughness += geometryRoughness;\\n\\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\\n#endif\\n#ifdef USE_SHEEN\\n\\tmaterial.sheenColor = sheenColor;\\n\\t#ifdef USE_SHEENCOLORMAP\\n\\t\\tmaterial.sheenColor *= texture2D( sheenColorMap, vUv ).rgb;\\n\\t#endif\\n\\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\\n\\t#ifdef USE_SHEENROUGHNESSMAP\\n\\t\\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;\\n\\t#endif\\n#endif\";\n\nvar lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat roughness;\\n\\tvec3 specularColor;\\n\\tfloat specularF90;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat clearcoat;\\n\\t\\tfloat clearcoatRoughness;\\n\\t\\tvec3 clearcoatF0;\\n\\t\\tfloat clearcoatF90;\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tvec3 sheenColor;\\n\\t\\tfloat sheenRoughness;\\n\\t#endif\\n};\\nvec3 clearcoatSpecular = vec3( 0.0 );\\nvec3 sheenSpecular = vec3( 0.0 );\\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat r2 = roughness * roughness;\\n\\tfloat a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\\n\\tfloat b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\\n\\tfloat DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\\n\\treturn saturate( DG * RECIPROCAL_PI );\\n}\\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\\n\\treturn fab;\\n}\\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\treturn specularColor * fab.x + specularF90 * fab.y;\\n}\\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\tvec3 FssEss = specularColor * fab.x + specularF90 * fab.y;\\n\\tfloat Ess = fab.x + fab.y;\\n\\tfloat Ems = 1.0 - Ess;\\n\\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\\n\\tsingleScatter += FssEss;\\n\\tmultiScatter += Fms * Ems;\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometry.normal;\\n\\t\\tvec3 viewDir = geometry.viewDir;\\n\\t\\tvec3 position = geometry.position;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.roughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tvec4 t1 = texture2D( ltc_1, uv );\\n\\t\\tvec4 t2 = texture2D( ltc_2, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\t\\tvec3(    0, 1,    0 ),\\n\\t\\t\\tvec3( t1.z, 0, t1.w )\\n\\t\\t);\\n\\t\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\\t\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\\n\\t\\tvec3 ccIrradiance = dotNLcc * directLight.color;\\n\\t\\tclearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tsheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );\\n\\t#endif\\n\\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tsheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );\\n\\t#endif\\n\\tvec3 singleScattering = vec3( 0.0 );\\n\\tvec3 multiScattering = vec3( 0.0 );\\n\\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\\n\\tcomputeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\\n\\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\\n\\treflectedLight.indirectSpecular += radiance * singleScattering;\\n\\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\\n\\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\";\n\nvar lights_fragment_begin = \"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\\n#ifdef USE_CLEARCOAT\\n\\tgeometry.clearcoatNormal = clearcoatNormal;\\n#endif\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointLightInfo( pointLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\\n\\t\\tpointLightShadow = pointLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotLightInfo( spotLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\tspotLightShadow = spotLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalLightInfo( directionalLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\\n\\t\\tdirectionalLightShadow = directionalLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 iblIrradiance = vec3( 0.0 );\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\tirradiance += getLightProbeIrradiance( lightProbe, geometry.normal );\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tvec3 radiance = vec3( 0.0 );\\n\\tvec3 clearcoatRadiance = vec3( 0.0 );\\n#endif\";\n\nvar lights_fragment_maps = \"#if defined( RE_IndirectDiffuse )\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\\n\\t\\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tiblIrradiance += getIBLIrradiance( geometry.normal );\\n\\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\tradiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );\\n\\t#endif\\n#endif\";\n\nvar lights_fragment_end = \"#if defined( RE_IndirectDiffuse )\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\\n#endif\";\n\nvar logdepthbuf_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\";\n\nvar logdepthbuf_pars_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tuniform float logDepthBufFC;\\n\\tvarying float vFragDepth;\\n\\tvarying float vIsPerspective;\\n#endif\";\n\nvar logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t\\tvarying float vIsPerspective;\\n\\t#else\\n\\t\\tuniform float logDepthBufFC;\\n\\t#endif\\n#endif\";\n\nvar logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t\\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\\n\\t#else\\n\\t\\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\\n\\t\\t\\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\\n\\t\\t\\tgl_Position.z *= gl_Position.w;\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\nvar map_fragment = \"#ifdef USE_MAP\\n\\tvec4 sampledDiffuseColor = texture2D( map, vUv );\\n\\t#ifdef DECODE_VIDEO_TEXTURE\\n\\t\\tsampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );\\n\\t#endif\\n\\tdiffuseColor *= sampledDiffuseColor;\\n#endif\";\n\nvar map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\";\n\nvar map_particle_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n#endif\\n#ifdef USE_MAP\\n\\tdiffuseColor *= texture2D( map, uv );\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\\n#endif\";\n\nvar map_particle_pars_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\tuniform mat3 uvTransform;\\n#endif\\n#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\nvar metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\";\n\nvar metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\n\nvar morphcolor_vertex = \"#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )\\n\\tvColor *= morphTargetBaseInfluence;\\n\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t#if defined( USE_COLOR_ALPHA )\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\\n\\t\\t#elif defined( USE_COLOR )\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal *= morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\\n\\t\\t}\\n\\t#else\\n\\t\\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\\n\\t\\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\\n\\t\\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\\n\\t\\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\\n\\t#endif\\n#endif\";\n\nvar morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\tuniform float morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\\n\\t\\tuniform sampler2DArray morphTargetsTexture;\\n\\t\\tuniform ivec2 morphTargetsTextureSize;\\n\\t\\tvec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\\n\\t\\t\\tint texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\\n\\t\\t\\tint y = texelIndex / morphTargetsTextureSize.x;\\n\\t\\t\\tint x = texelIndex - y * morphTargetsTextureSize.x;\\n\\t\\t\\tivec3 morphUV = ivec3( x, y, morphTargetIndex );\\n\\t\\t\\treturn texelFetch( morphTargetsTexture, morphUV, 0 );\\n\\t\\t}\\n\\t#else\\n\\t\\t#ifndef USE_MORPHNORMALS\\n\\t\\t\\tuniform float morphTargetInfluences[ 8 ];\\n\\t\\t#else\\n\\t\\t\\tuniform float morphTargetInfluences[ 4 ];\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed *= morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\\n\\t\\t}\\n\\t#else\\n\\t\\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\\n\\t\\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\\n\\t\\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\\n\\t\\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\\n\\t\\t#ifndef USE_MORPHNORMALS\\n\\t\\t\\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\\n\\t\\t\\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\\n\\t\\t\\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\\n\\t\\t\\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar normal_fragment_begin = \"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\\n#ifdef FLAT_SHADED\\n\\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\n\\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * faceDirection;\\n\\t#endif\\n\\t#ifdef USE_TANGENT\\n\\t\\tvec3 tangent = normalize( vTangent );\\n\\t\\tvec3 bitangent = normalize( vBitangent );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\ttangent = tangent * faceDirection;\\n\\t\\t\\tbitangent = bitangent * faceDirection;\\n\\t\\t#endif\\n\\t\\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\\n\\t\\t\\tmat3 vTBN = mat3( tangent, bitangent, normal );\\n\\t\\t#endif\\n\\t#endif\\n#endif\\nvec3 geometryNormal = normal;\";\n\nvar normal_fragment_maps = \"#ifdef OBJECTSPACE_NORMALMAP\\n\\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t#ifdef FLIP_SIDED\\n\\t\\tnormal = - normal;\\n\\t#endif\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * faceDirection;\\n\\t#endif\\n\\tnormal = normalize( normalMatrix * normal );\\n#elif defined( TANGENTSPACE_NORMALMAP )\\n\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\tmapN.xy *= normalScale;\\n\\t#ifdef USE_TANGENT\\n\\t\\tnormal = normalize( vTBN * mapN );\\n\\t#else\\n\\t\\tnormal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );\\n\\t#endif\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\\n#endif\";\n\nvar normal_pars_fragment = \"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";\n\nvar normal_pars_vertex = \"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";\n\nvar normal_vertex = \"#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\";\n\nvar normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n#endif\\n#ifdef OBJECTSPACE_NORMALMAP\\n\\tuniform mat3 normalMatrix;\\n#endif\\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\\n\\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\\n\\t\\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\\n\\t\\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\\n\\t\\tvec2 st0 = dFdx( vUv.st );\\n\\t\\tvec2 st1 = dFdy( vUv.st );\\n\\t\\tvec3 N = surf_norm;\\n\\t\\tvec3 q1perp = cross( q1, N );\\n\\t\\tvec3 q0perp = cross( N, q0 );\\n\\t\\tvec3 T = q1perp * st0.x + q0perp * st1.x;\\n\\t\\tvec3 B = q1perp * st0.y + q0perp * st1.y;\\n\\t\\tfloat det = max( dot( T, T ), dot( B, B ) );\\n\\t\\tfloat scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\\n\\t\\treturn normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\\n\\t}\\n#endif\";\n\nvar clearcoat_normal_fragment_begin = \"#ifdef USE_CLEARCOAT\\n\\tvec3 clearcoatNormal = geometryNormal;\\n#endif\";\n\nvar clearcoat_normal_fragment_maps = \"#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\\n\\tclearcoatMapN.xy *= clearcoatNormalScale;\\n\\t#ifdef USE_TANGENT\\n\\t\\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\\n\\t#else\\n\\t\\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\\n\\t#endif\\n#endif\";\n\nvar clearcoat_pars_fragment = \"#ifdef USE_CLEARCOATMAP\\n\\tuniform sampler2D clearcoatMap;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tuniform sampler2D clearcoatRoughnessMap;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform sampler2D clearcoatNormalMap;\\n\\tuniform vec2 clearcoatNormalScale;\\n#endif\";\n\nvar output_fragment = \"#ifdef OPAQUE\\ndiffuseColor.a = 1.0;\\n#endif\\n#ifdef USE_TRANSMISSION\\ndiffuseColor.a *= transmissionAlpha + 0.1;\\n#endif\\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );\";\n\nvar packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nvec4 pack2HalfToRGBA( vec2 v ) {\\n\\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\\n\\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\\n}\\nvec2 unpackRGBATo2Half( vec4 v ) {\\n\\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\n\\treturn linearClipZ * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\\n}\";\n\nvar premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\";\n\nvar project_vertex = \"vec4 mvPosition = vec4( transformed, 1.0 );\\n#ifdef USE_INSTANCING\\n\\tmvPosition = instanceMatrix * mvPosition;\\n#endif\\nmvPosition = modelViewMatrix * mvPosition;\\ngl_Position = projectionMatrix * mvPosition;\";\n\nvar dithering_fragment = \"#ifdef DITHERING\\n\\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\";\n\nvar dithering_pars_fragment = \"#ifdef DITHERING\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\";\n\nvar roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\";\n\nvar roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\n\nvar shadowmap_pars_fragment = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\\n\\t\\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\\n\\t}\\n\\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\\n\\t\\tfloat occlusion = 1.0;\\n\\t\\tvec2 distribution = texture2DDistribution( shadow, uv );\\n\\t\\tfloat hard_shadow = step( compare , distribution.x );\\n\\t\\tif (hard_shadow != 1.0 ) {\\n\\t\\t\\tfloat distance = compare - distribution.x ;\\n\\t\\t\\tfloat variance = max( 0.00000, distribution.y * distribution.y );\\n\\t\\t\\tfloat softness_probability = variance / (variance + distance * distance );\\t\\t\\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\\t\\t\\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\\n\\t\\t}\\n\\t\\treturn occlusion;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\\t\\tbool inFrustum = all( inFrustumVec );\\n\\t\\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\t\\tbool frustumTest = all( frustumTestVec );\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx2 = dx0 / 2.0;\\n\\t\\t\\tfloat dy2 = dy0 / 2.0;\\n\\t\\t\\tfloat dx3 = dx1 / 2.0;\\n\\t\\t\\tfloat dy3 = dy1 / 2.0;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 17.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx = texelSize.x;\\n\\t\\t\\tfloat dy = texelSize.y;\\n\\t\\t\\tvec2 uv = shadowCoord.xy;\\n\\t\\t\\tvec2 f = fract( uv * shadowMapSize + 0.5 );\\n\\t\\t\\tuv -= f * texelSize;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t f.y )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\tdp += shadowBias;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar shadowmap_pars_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n#endif\";\n\nvar shadowmap_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\tvec4 shadowWorldPosition;\\n\\t#endif\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\";\n\nvar shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tspotLight = spotLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tpointLight = pointLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\";\n\nvar skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\n\nvar skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\tuniform highp sampler2D boneTexture;\\n\\tuniform int boneTextureSize;\\n\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\tfloat j = i * 4.0;\\n\\t\\tfloat x = mod( j, float( boneTextureSize ) );\\n\\t\\tfloat y = floor( j / float( boneTextureSize ) );\\n\\t\\tfloat dx = 1.0 / float( boneTextureSize );\\n\\t\\tfloat dy = 1.0 / float( boneTextureSize );\\n\\t\\ty = dy * ( y + 0.5 );\\n\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\treturn bone;\\n\\t}\\n#endif\";\n\nvar skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\";\n\nvar skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\\t#ifdef USE_TANGENT\\n\\t\\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#endif\\n#endif\";\n\nvar specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\n\nvar specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\n\nvar tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n\\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\";\n\nvar tonemapping_pars_fragment = \"#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\nvec3 RRTAndODTFit( vec3 v ) {\\n\\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\\n\\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\\n\\treturn a / b;\\n}\\nvec3 ACESFilmicToneMapping( vec3 color ) {\\n\\tconst mat3 ACESInputMat = mat3(\\n\\t\\tvec3( 0.59719, 0.07600, 0.02840 ),\\t\\tvec3( 0.35458, 0.90834, 0.13383 ),\\n\\t\\tvec3( 0.04823, 0.01566, 0.83777 )\\n\\t);\\n\\tconst mat3 ACESOutputMat = mat3(\\n\\t\\tvec3(  1.60475, -0.10208, -0.00327 ),\\t\\tvec3( -0.53108,  1.10813, -0.07276 ),\\n\\t\\tvec3( -0.07367, -0.00605,  1.07602 )\\n\\t);\\n\\tcolor *= toneMappingExposure / 0.6;\\n\\tcolor = ACESInputMat * color;\\n\\tcolor = RRTAndODTFit( color );\\n\\tcolor = ACESOutputMat * color;\\n\\treturn saturate( color );\\n}\\nvec3 CustomToneMapping( vec3 color ) { return color; }\";\n\nvar transmission_fragment = \"#ifdef USE_TRANSMISSION\\n\\tfloat transmissionAlpha = 1.0;\\n\\tfloat transmissionFactor = transmission;\\n\\tfloat thicknessFactor = thickness;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\ttransmissionFactor *= texture2D( transmissionMap, vUv ).r;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tthicknessFactor *= texture2D( thicknessMap, vUv ).g;\\n\\t#endif\\n\\tvec3 pos = vWorldPosition;\\n\\tvec3 v = normalize( cameraPosition - pos );\\n\\tvec3 n = inverseTransformDirection( normal, viewMatrix );\\n\\tvec4 transmission = getIBLVolumeRefraction(\\n\\t\\tn, v, roughnessFactor, material.diffuseColor, material.specularColor, material.specularF90,\\n\\t\\tpos, modelMatrix, viewMatrix, projectionMatrix, ior, thicknessFactor,\\n\\t\\tattenuationColor, attenuationDistance );\\n\\ttotalDiffuse = mix( totalDiffuse, transmission.rgb, transmissionFactor );\\n\\ttransmissionAlpha = mix( transmissionAlpha, transmission.a, transmissionFactor );\\n#endif\";\n\nvar transmission_pars_fragment = \"#ifdef USE_TRANSMISSION\\n\\tuniform float transmission;\\n\\tuniform float thickness;\\n\\tuniform float attenuationDistance;\\n\\tuniform vec3 attenuationColor;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\tuniform sampler2D transmissionMap;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tuniform sampler2D thicknessMap;\\n\\t#endif\\n\\tuniform vec2 transmissionSamplerSize;\\n\\tuniform sampler2D transmissionSamplerMap;\\n\\tuniform mat4 modelMatrix;\\n\\tuniform mat4 projectionMatrix;\\n\\tvarying vec3 vWorldPosition;\\n\\tvec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\\n\\t\\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\\n\\t\\tvec3 modelScale;\\n\\t\\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\\n\\t\\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\\n\\t\\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\\n\\t\\treturn normalize( refractionVector ) * thickness * modelScale;\\n\\t}\\n\\tfloat applyIorToRoughness( const in float roughness, const in float ior ) {\\n\\t\\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\\n\\t}\\n\\tvec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\\n\\t\\tfloat framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\\n\\t\\t#ifdef texture2DLodEXT\\n\\t\\t\\treturn texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );\\n\\t\\t#else\\n\\t\\t\\treturn texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );\\n\\t\\t#endif\\n\\t}\\n\\tvec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\\n\\t\\tif ( attenuationDistance == 0.0 ) {\\n\\t\\t\\treturn radiance;\\n\\t\\t} else {\\n\\t\\t\\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\\n\\t\\t\\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\\t\\t\\treturn transmittance * radiance;\\n\\t\\t}\\n\\t}\\n\\tvec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\\n\\t\\tconst in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\\n\\t\\tconst in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,\\n\\t\\tconst in vec3 attenuationColor, const in float attenuationDistance ) {\\n\\t\\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\\n\\t\\tvec3 refractedRayExit = position + transmissionRay;\\n\\t\\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\\n\\t\\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\\n\\t\\trefractionCoords += 1.0;\\n\\t\\trefractionCoords /= 2.0;\\n\\t\\tvec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\\n\\t\\tvec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );\\n\\t\\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\\n\\t\\treturn vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );\\n\\t}\\n#endif\";\n\nvar uv_pars_fragment = \"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\\n\\tvarying vec2 vUv;\\n#endif\";\n\nvar uv_pars_vertex = \"#ifdef USE_UV\\n\\t#ifdef UVS_VERTEX_ONLY\\n\\t\\tvec2 vUv;\\n\\t#else\\n\\t\\tvarying vec2 vUv;\\n\\t#endif\\n\\tuniform mat3 uvTransform;\\n#endif\";\n\nvar uv_vertex = \"#ifdef USE_UV\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n#endif\";\n\nvar uv2_pars_fragment = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvarying vec2 vUv2;\\n#endif\";\n\nvar uv2_pars_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tattribute vec2 uv2;\\n\\tvarying vec2 vUv2;\\n\\tuniform mat3 uv2Transform;\\n#endif\";\n\nvar uv2_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\\n#endif\";\n\nvar worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION )\\n\\tvec4 worldPosition = vec4( transformed, 1.0 );\\n\\t#ifdef USE_INSTANCING\\n\\t\\tworldPosition = instanceMatrix * worldPosition;\\n\\t#endif\\n\\tworldPosition = modelMatrix * worldPosition;\\n#endif\";\n\nconst vertex$g = \"varying vec2 vUv;\\nuniform mat3 uvTransform;\\nvoid main() {\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\tgl_Position = vec4( position.xy, 1.0, 1.0 );\\n}\";\n\nconst fragment$g = \"uniform sampler2D t2D;\\nvarying vec2 vUv;\\nvoid main() {\\n\\tgl_FragColor = texture2D( t2D, vUv );\\n\\t#ifdef DECODE_VIDEO_TEXTURE\\n\\t\\tgl_FragColor = vec4( mix( pow( gl_FragColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), gl_FragColor.rgb * 0.0773993808, vec3( lessThanEqual( gl_FragColor.rgb, vec3( 0.04045 ) ) ) ), gl_FragColor.w );\\n\\t#endif\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\nconst vertex$f = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n\nconst fragment$f = \"#include <envmap_common_pars_fragment>\\nuniform float opacity;\\nvarying vec3 vWorldDirection;\\n#include <cube_uv_reflection_fragment>\\nvoid main() {\\n\\tvec3 vReflect = vWorldDirection;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = envColor;\\n\\tgl_FragColor.a *= opacity;\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\nconst vertex$e = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvHighPrecisionZW = gl_Position.zw;\\n}\";\n\nconst fragment$e = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( fragCoordZ );\\n\\t#endif\\n}\";\n\nconst vertex$d = \"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\";\n\nconst fragment$d = \"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\";\n\nconst vertex$c = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\";\n\nconst fragment$c = \"uniform sampler2D tEquirect;\\nvarying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldDirection );\\n\\tvec2 sampleUV = equirectUv( direction );\\n\\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\nconst vertex$b = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\tvLineDistance = scale * lineDistance;\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$b = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\nconst vertex$a = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinbase_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$a = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\\n\\t\\treflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$9 = \"#define LAMBERT\\nvarying vec3 vLightFront;\\nvarying vec3 vIndirectFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n\\tvarying vec3 vIndirectBack;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <lights_lambert_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$9 = \"uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\nvarying vec3 vIndirectFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n\\tvarying vec3 vIndirectBack;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <emissivemap_fragment>\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vIndirectFront;\\n\\t#endif\\n\\t#include <lightmap_fragment>\\n\\treflectedLight.indirectDiffuse *= BRDF_Lambert( diffuseColor.rgb );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\n\\t#else\\n\\t\\treflectedLight.directDiffuse = vLightFront;\\n\\t#endif\\n\\treflectedLight.directDiffuse *= BRDF_Lambert( diffuseColor.rgb ) * getShadowMask();\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$8 = \"#define MATCAP\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n}\";\n\nconst fragment$8 = \"#define MATCAP\\nuniform vec3 diffuse;\\nuniform float opacity;\\nuniform sampler2D matcap;\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tvec3 viewDir = normalize( vViewPosition );\\n\\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\\n\\tvec3 y = cross( viewDir, x );\\n\\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\\n\\t#ifdef USE_MATCAP\\n\\t\\tvec4 matcapColor = texture2D( matcap, uv );\\n\\t#else\\n\\t\\tvec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\\n\\t#endif\\n\\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$7 = \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\";\n\nconst fragment$7 = \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\n\\t#ifdef OPAQUE\\n\\t\\tgl_FragColor.a = 1.0;\\n\\t#endif\\n}\";\n\nconst vertex$6 = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$6 = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$5 = \"#define STANDARD\\nvarying vec3 vViewPosition;\\n#ifdef USE_TRANSMISSION\\n\\tvarying vec3 vWorldPosition;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n#ifdef USE_TRANSMISSION\\n\\tvWorldPosition = worldPosition.xyz;\\n#endif\\n}\";\n\nconst fragment$5 = \"#define STANDARD\\n#ifdef PHYSICAL\\n\\t#define IOR\\n\\t#define SPECULAR\\n#endif\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifdef IOR\\n\\tuniform float ior;\\n#endif\\n#ifdef SPECULAR\\n\\tuniform float specularIntensity;\\n\\tuniform vec3 specularColor;\\n\\t#ifdef USE_SPECULARINTENSITYMAP\\n\\t\\tuniform sampler2D specularIntensityMap;\\n\\t#endif\\n\\t#ifdef USE_SPECULARCOLORMAP\\n\\t\\tuniform sampler2D specularColorMap;\\n\\t#endif\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tuniform float clearcoat;\\n\\tuniform float clearcoatRoughness;\\n#endif\\n#ifdef USE_SHEEN\\n\\tuniform vec3 sheenColor;\\n\\tuniform float sheenRoughness;\\n\\t#ifdef USE_SHEENCOLORMAP\\n\\t\\tuniform sampler2D sheenColorMap;\\n\\t#endif\\n\\t#ifdef USE_SHEENROUGHNESSMAP\\n\\t\\tuniform sampler2D sheenRoughnessMap;\\n\\t#endif\\n#endif\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <bsdfs>\\n#include <cube_uv_reflection_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_physical_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_physical_pars_fragment>\\n#include <transmission_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <clearcoat_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <clearcoat_normal_fragment_begin>\\n\\t#include <clearcoat_normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\\n\\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\\n\\t#include <transmission_fragment>\\n\\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\\n\\t#ifdef USE_SHEEN\\n\\t\\tfloat sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\\n\\t\\toutgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\\n\\t\\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\\n\\t\\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;\\n\\t#endif\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$4 = \"#define TOON\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$4 = \"#define TOON\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_toon_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_toon_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$3 = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\tgl_PointSize = size;\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$3 = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\nconst vertex$2 = \"#include <common>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$2 = \"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nconst vertex$1 = \"uniform float rotation;\\nuniform vec2 center;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\tvec2 scale;\\n\\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\\n\\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\\n\\t#ifndef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) scale *= - mvPosition.z;\\n\\t#endif\\n\\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\\n\\tvec2 rotatedPosition;\\n\\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n\\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n\\tmvPosition.xy += rotatedPosition;\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$1 = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nconst ShaderChunk = {\n\talphamap_fragment: alphamap_fragment,\n\talphamap_pars_fragment: alphamap_pars_fragment,\n\talphatest_fragment: alphatest_fragment,\n\talphatest_pars_fragment: alphatest_pars_fragment,\n\taomap_fragment: aomap_fragment,\n\taomap_pars_fragment: aomap_pars_fragment,\n\tbegin_vertex: begin_vertex,\n\tbeginnormal_vertex: beginnormal_vertex,\n\tbsdfs: bsdfs,\n\tbumpmap_pars_fragment: bumpmap_pars_fragment,\n\tclipping_planes_fragment: clipping_planes_fragment,\n\tclipping_planes_pars_fragment: clipping_planes_pars_fragment,\n\tclipping_planes_pars_vertex: clipping_planes_pars_vertex,\n\tclipping_planes_vertex: clipping_planes_vertex,\n\tcolor_fragment: color_fragment,\n\tcolor_pars_fragment: color_pars_fragment,\n\tcolor_pars_vertex: color_pars_vertex,\n\tcolor_vertex: color_vertex,\n\tcommon: common,\n\tcube_uv_reflection_fragment: cube_uv_reflection_fragment,\n\tdefaultnormal_vertex: defaultnormal_vertex,\n\tdisplacementmap_pars_vertex: displacementmap_pars_vertex,\n\tdisplacementmap_vertex: displacementmap_vertex,\n\temissivemap_fragment: emissivemap_fragment,\n\temissivemap_pars_fragment: emissivemap_pars_fragment,\n\tencodings_fragment: encodings_fragment,\n\tencodings_pars_fragment: encodings_pars_fragment,\n\tenvmap_fragment: envmap_fragment,\n\tenvmap_common_pars_fragment: envmap_common_pars_fragment,\n\tenvmap_pars_fragment: envmap_pars_fragment,\n\tenvmap_pars_vertex: envmap_pars_vertex,\n\tenvmap_physical_pars_fragment: envmap_physical_pars_fragment,\n\tenvmap_vertex: envmap_vertex,\n\tfog_vertex: fog_vertex,\n\tfog_pars_vertex: fog_pars_vertex,\n\tfog_fragment: fog_fragment,\n\tfog_pars_fragment: fog_pars_fragment,\n\tgradientmap_pars_fragment: gradientmap_pars_fragment,\n\tlightmap_fragment: lightmap_fragment,\n\tlightmap_pars_fragment: lightmap_pars_fragment,\n\tlights_lambert_vertex: lights_lambert_vertex,\n\tlights_pars_begin: lights_pars_begin,\n\tlights_toon_fragment: lights_toon_fragment,\n\tlights_toon_pars_fragment: lights_toon_pars_fragment,\n\tlights_phong_fragment: lights_phong_fragment,\n\tlights_phong_pars_fragment: lights_phong_pars_fragment,\n\tlights_physical_fragment: lights_physical_fragment,\n\tlights_physical_pars_fragment: lights_physical_pars_fragment,\n\tlights_fragment_begin: lights_fragment_begin,\n\tlights_fragment_maps: lights_fragment_maps,\n\tlights_fragment_end: lights_fragment_end,\n\tlogdepthbuf_fragment: logdepthbuf_fragment,\n\tlogdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n\tlogdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n\tlogdepthbuf_vertex: logdepthbuf_vertex,\n\tmap_fragment: map_fragment,\n\tmap_pars_fragment: map_pars_fragment,\n\tmap_particle_fragment: map_particle_fragment,\n\tmap_particle_pars_fragment: map_particle_pars_fragment,\n\tmetalnessmap_fragment: metalnessmap_fragment,\n\tmetalnessmap_pars_fragment: metalnessmap_pars_fragment,\n\tmorphcolor_vertex: morphcolor_vertex,\n\tmorphnormal_vertex: morphnormal_vertex,\n\tmorphtarget_pars_vertex: morphtarget_pars_vertex,\n\tmorphtarget_vertex: morphtarget_vertex,\n\tnormal_fragment_begin: normal_fragment_begin,\n\tnormal_fragment_maps: normal_fragment_maps,\n\tnormal_pars_fragment: normal_pars_fragment,\n\tnormal_pars_vertex: normal_pars_vertex,\n\tnormal_vertex: normal_vertex,\n\tnormalmap_pars_fragment: normalmap_pars_fragment,\n\tclearcoat_normal_fragment_begin: clearcoat_normal_fragment_begin,\n\tclearcoat_normal_fragment_maps: clearcoat_normal_fragment_maps,\n\tclearcoat_pars_fragment: clearcoat_pars_fragment,\n\toutput_fragment: output_fragment,\n\tpacking: packing,\n\tpremultiplied_alpha_fragment: premultiplied_alpha_fragment,\n\tproject_vertex: project_vertex,\n\tdithering_fragment: dithering_fragment,\n\tdithering_pars_fragment: dithering_pars_fragment,\n\troughnessmap_fragment: roughnessmap_fragment,\n\troughnessmap_pars_fragment: roughnessmap_pars_fragment,\n\tshadowmap_pars_fragment: shadowmap_pars_fragment,\n\tshadowmap_pars_vertex: shadowmap_pars_vertex,\n\tshadowmap_vertex: shadowmap_vertex,\n\tshadowmask_pars_fragment: shadowmask_pars_fragment,\n\tskinbase_vertex: skinbase_vertex,\n\tskinning_pars_vertex: skinning_pars_vertex,\n\tskinning_vertex: skinning_vertex,\n\tskinnormal_vertex: skinnormal_vertex,\n\tspecularmap_fragment: specularmap_fragment,\n\tspecularmap_pars_fragment: specularmap_pars_fragment,\n\ttonemapping_fragment: tonemapping_fragment,\n\ttonemapping_pars_fragment: tonemapping_pars_fragment,\n\ttransmission_fragment: transmission_fragment,\n\ttransmission_pars_fragment: transmission_pars_fragment,\n\tuv_pars_fragment: uv_pars_fragment,\n\tuv_pars_vertex: uv_pars_vertex,\n\tuv_vertex: uv_vertex,\n\tuv2_pars_fragment: uv2_pars_fragment,\n\tuv2_pars_vertex: uv2_pars_vertex,\n\tuv2_vertex: uv2_vertex,\n\tworldpos_vertex: worldpos_vertex,\n\n\tbackground_vert: vertex$g,\n\tbackground_frag: fragment$g,\n\tcube_vert: vertex$f,\n\tcube_frag: fragment$f,\n\tdepth_vert: vertex$e,\n\tdepth_frag: fragment$e,\n\tdistanceRGBA_vert: vertex$d,\n\tdistanceRGBA_frag: fragment$d,\n\tequirect_vert: vertex$c,\n\tequirect_frag: fragment$c,\n\tlinedashed_vert: vertex$b,\n\tlinedashed_frag: fragment$b,\n\tmeshbasic_vert: vertex$a,\n\tmeshbasic_frag: fragment$a,\n\tmeshlambert_vert: vertex$9,\n\tmeshlambert_frag: fragment$9,\n\tmeshmatcap_vert: vertex$8,\n\tmeshmatcap_frag: fragment$8,\n\tmeshnormal_vert: vertex$7,\n\tmeshnormal_frag: fragment$7,\n\tmeshphong_vert: vertex$6,\n\tmeshphong_frag: fragment$6,\n\tmeshphysical_vert: vertex$5,\n\tmeshphysical_frag: fragment$5,\n\tmeshtoon_vert: vertex$4,\n\tmeshtoon_frag: fragment$4,\n\tpoints_vert: vertex$3,\n\tpoints_frag: fragment$3,\n\tshadow_vert: vertex$2,\n\tshadow_frag: fragment$2,\n\tsprite_vert: vertex$1,\n\tsprite_frag: fragment$1\n};\n\n/**\n * Uniforms library for shared webgl shaders\n */\n\nconst UniformsLib = {\n\n\tcommon: {\n\n\t\tdiffuse: { value: new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\n\t\tmap: { value: null },\n\t\tuvTransform: { value: new Matrix3() },\n\t\tuv2Transform: { value: new Matrix3() },\n\n\t\talphaMap: { value: null },\n\t\talphaTest: { value: 0 }\n\n\t},\n\n\tspecularmap: {\n\n\t\tspecularMap: { value: null },\n\n\t},\n\n\tenvmap: {\n\n\t\tenvMap: { value: null },\n\t\tflipEnvMap: { value: - 1 },\n\t\treflectivity: { value: 1.0 }, // basic, lambert, phong\n\t\tior: { value: 1.5 }, // physical\n\t\trefractionRatio: { value: 0.98 } // basic, lambert, phong\n\n\t},\n\n\taomap: {\n\n\t\taoMap: { value: null },\n\t\taoMapIntensity: { value: 1 }\n\n\t},\n\n\tlightmap: {\n\n\t\tlightMap: { value: null },\n\t\tlightMapIntensity: { value: 1 }\n\n\t},\n\n\temissivemap: {\n\n\t\temissiveMap: { value: null }\n\n\t},\n\n\tbumpmap: {\n\n\t\tbumpMap: { value: null },\n\t\tbumpScale: { value: 1 }\n\n\t},\n\n\tnormalmap: {\n\n\t\tnormalMap: { value: null },\n\t\tnormalScale: { value: new Vector2( 1, 1 ) }\n\n\t},\n\n\tdisplacementmap: {\n\n\t\tdisplacementMap: { value: null },\n\t\tdisplacementScale: { value: 1 },\n\t\tdisplacementBias: { value: 0 }\n\n\t},\n\n\troughnessmap: {\n\n\t\troughnessMap: { value: null }\n\n\t},\n\n\tmetalnessmap: {\n\n\t\tmetalnessMap: { value: null }\n\n\t},\n\n\tgradientmap: {\n\n\t\tgradientMap: { value: null }\n\n\t},\n\n\tfog: {\n\n\t\tfogDensity: { value: 0.00025 },\n\t\tfogNear: { value: 1 },\n\t\tfogFar: { value: 2000 },\n\t\tfogColor: { value: new Color( 0xffffff ) }\n\n\t},\n\n\tlights: {\n\n\t\tambientLightColor: { value: [] },\n\n\t\tlightProbe: { value: [] },\n\n\t\tdirectionalLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tcolor: {}\n\t\t} },\n\n\t\tdirectionalLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tdirectionalShadowMap: { value: [] },\n\t\tdirectionalShadowMatrix: { value: [] },\n\n\t\tspotLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdirection: {},\n\t\t\tdistance: {},\n\t\t\tconeCos: {},\n\t\t\tpenumbraCos: {},\n\t\t\tdecay: {}\n\t\t} },\n\n\t\tspotLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tspotShadowMap: { value: [] },\n\t\tspotShadowMatrix: { value: [] },\n\n\t\tpointLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdecay: {},\n\t\t\tdistance: {}\n\t\t} },\n\n\t\tpointLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {},\n\t\t\tshadowCameraNear: {},\n\t\t\tshadowCameraFar: {}\n\t\t} },\n\n\t\tpointShadowMap: { value: [] },\n\t\tpointShadowMatrix: { value: [] },\n\n\t\themisphereLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tskyColor: {},\n\t\t\tgroundColor: {}\n\t\t} },\n\n\t\t// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\n\t\trectAreaLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\twidth: {},\n\t\t\theight: {}\n\t\t} },\n\n\t\tltc_1: { value: null },\n\t\tltc_2: { value: null }\n\n\t},\n\n\tpoints: {\n\n\t\tdiffuse: { value: new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\t\tsize: { value: 1.0 },\n\t\tscale: { value: 1.0 },\n\t\tmap: { value: null },\n\t\talphaMap: { value: null },\n\t\talphaTest: { value: 0 },\n\t\tuvTransform: { value: new Matrix3() }\n\n\t},\n\n\tsprite: {\n\n\t\tdiffuse: { value: new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\t\tcenter: { value: new Vector2( 0.5, 0.5 ) },\n\t\trotation: { value: 0.0 },\n\t\tmap: { value: null },\n\t\talphaMap: { value: null },\n\t\talphaTest: { value: 0 },\n\t\tuvTransform: { value: new Matrix3() }\n\n\t}\n\n};\n\nconst ShaderLib = {\n\n\tbasic: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshbasic_vert,\n\t\tfragmentShader: ShaderChunk.meshbasic_frag\n\n\t},\n\n\tlambert: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshlambert_vert,\n\t\tfragmentShader: ShaderChunk.meshlambert_frag\n\n\t},\n\n\tphong: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) },\n\t\t\t\tspecular: { value: new Color( 0x111111 ) },\n\t\t\t\tshininess: { value: 30 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphong_vert,\n\t\tfragmentShader: ShaderChunk.meshphong_frag\n\n\t},\n\n\tstandard: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.roughnessmap,\n\t\t\tUniformsLib.metalnessmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) },\n\t\t\t\troughness: { value: 1.0 },\n\t\t\t\tmetalness: { value: 0.0 },\n\t\t\t\tenvMapIntensity: { value: 1 } // temporary\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\n\t},\n\n\ttoon: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.gradientmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshtoon_vert,\n\t\tfragmentShader: ShaderChunk.meshtoon_frag\n\n\t},\n\n\tmatcap: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tmatcap: { value: null }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshmatcap_vert,\n\t\tfragmentShader: ShaderChunk.meshmatcap_frag\n\n\t},\n\n\tpoints: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.points,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.points_vert,\n\t\tfragmentShader: ShaderChunk.points_frag\n\n\t},\n\n\tdashed: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tscale: { value: 1 },\n\t\t\t\tdashSize: { value: 1 },\n\t\t\t\ttotalSize: { value: 2 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.linedashed_vert,\n\t\tfragmentShader: ShaderChunk.linedashed_frag\n\n\t},\n\n\tdepth: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.depth_vert,\n\t\tfragmentShader: ShaderChunk.depth_frag\n\n\t},\n\n\tnormal: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshnormal_vert,\n\t\tfragmentShader: ShaderChunk.meshnormal_frag\n\n\t},\n\n\tsprite: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.sprite,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.sprite_vert,\n\t\tfragmentShader: ShaderChunk.sprite_frag\n\n\t},\n\n\tbackground: {\n\n\t\tuniforms: {\n\t\t\tuvTransform: { value: new Matrix3() },\n\t\t\tt2D: { value: null },\n\t\t},\n\n\t\tvertexShader: ShaderChunk.background_vert,\n\t\tfragmentShader: ShaderChunk.background_frag\n\n\t},\n\t/* -------------------------------------------------------------------------\n\t//\tCube map shader\n\t ------------------------------------------------------------------------- */\n\n\tcube: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.envmap,\n\t\t\t{\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.cube_vert,\n\t\tfragmentShader: ShaderChunk.cube_frag\n\n\t},\n\n\tequirect: {\n\n\t\tuniforms: {\n\t\t\ttEquirect: { value: null },\n\t\t},\n\n\t\tvertexShader: ShaderChunk.equirect_vert,\n\t\tfragmentShader: ShaderChunk.equirect_frag\n\n\t},\n\n\tdistanceRGBA: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\treferencePosition: { value: new Vector3() },\n\t\t\t\tnearDistance: { value: 1 },\n\t\t\t\tfarDistance: { value: 1000 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.distanceRGBA_vert,\n\t\tfragmentShader: ShaderChunk.distanceRGBA_frag\n\n\t},\n\n\tshadow: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.lights,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tcolor: { value: new Color( 0x00000 ) },\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t},\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.shadow_vert,\n\t\tfragmentShader: ShaderChunk.shadow_frag\n\n\t}\n\n};\n\nShaderLib.physical = {\n\n\tuniforms: mergeUniforms( [\n\t\tShaderLib.standard.uniforms,\n\t\t{\n\t\t\tclearcoat: { value: 0 },\n\t\t\tclearcoatMap: { value: null },\n\t\t\tclearcoatRoughness: { value: 0 },\n\t\t\tclearcoatRoughnessMap: { value: null },\n\t\t\tclearcoatNormalScale: { value: new Vector2( 1, 1 ) },\n\t\t\tclearcoatNormalMap: { value: null },\n\t\t\tsheen: { value: 0 },\n\t\t\tsheenColor: { value: new Color( 0x000000 ) },\n\t\t\tsheenColorMap: { value: null },\n\t\t\tsheenRoughness: { value: 1 },\n\t\t\tsheenRoughnessMap: { value: null },\n\t\t\ttransmission: { value: 0 },\n\t\t\ttransmissionMap: { value: null },\n\t\t\ttransmissionSamplerSize: { value: new Vector2() },\n\t\t\ttransmissionSamplerMap: { value: null },\n\t\t\tthickness: { value: 0 },\n\t\t\tthicknessMap: { value: null },\n\t\t\tattenuationDistance: { value: 0 },\n\t\t\tattenuationColor: { value: new Color( 0x000000 ) },\n\t\t\tspecularIntensity: { value: 1 },\n\t\t\tspecularIntensityMap: { value: null },\n\t\t\tspecularColor: { value: new Color( 1, 1, 1 ) },\n\t\t\tspecularColorMap: { value: null },\n\t\t}\n\t] ),\n\n\tvertexShader: ShaderChunk.meshphysical_vert,\n\tfragmentShader: ShaderChunk.meshphysical_frag\n\n};\n\nfunction WebGLBackground( renderer, cubemaps, state, objects, alpha, premultipliedAlpha ) {\n\n\tconst clearColor = new Color( 0x000000 );\n\tlet clearAlpha = alpha === true ? 0 : 1;\n\n\tlet planeMesh;\n\tlet boxMesh;\n\n\tlet currentBackground = null;\n\tlet currentBackgroundVersion = 0;\n\tlet currentTonemapping = null;\n\n\tfunction render( renderList, scene ) {\n\n\t\tlet forceClear = false;\n\t\tlet background = scene.isScene === true ? scene.background : null;\n\n\t\tif ( background && background.isTexture ) {\n\n\t\t\tbackground = cubemaps.get( background );\n\n\t\t}\n\n\t\t// Ignore background in AR\n\t\t// TODO: Reconsider this.\n\n\t\tconst xr = renderer.xr;\n\t\tconst session = xr.getSession && xr.getSession();\n\n\t\tif ( session && session.environmentBlendMode === 'additive' ) {\n\n\t\t\tbackground = null;\n\n\t\t}\n\n\t\tif ( background === null ) {\n\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t} else if ( background && background.isColor ) {\n\n\t\t\tsetClear( background, 1 );\n\t\t\tforceClear = true;\n\n\t\t}\n\n\t\tif ( renderer.autoClear || forceClear ) {\n\n\t\t\trenderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\n\t\t}\n\n\t\tif ( background && ( background.isCubeTexture || background.mapping === CubeUVReflectionMapping ) ) {\n\n\t\t\tif ( boxMesh === undefined ) {\n\n\t\t\t\tboxMesh = new Mesh(\n\t\t\t\t\tnew BoxGeometry( 1, 1, 1 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tname: 'BackgroundCubeMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.cube.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.cube.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.cube.fragmentShader,\n\t\t\t\t\t\tside: BackSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'normal' );\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'uv' );\n\n\t\t\t\tboxMesh.onBeforeRender = function ( renderer, scene, camera ) {\n\n\t\t\t\t\tthis.matrixWorld.copyPosition( camera.matrixWorld );\n\n\t\t\t\t};\n\n\t\t\t\t// enable code injection for non-built-in material\n\t\t\t\tObject.defineProperty( boxMesh.material, 'envMap', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.envMap.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( boxMesh );\n\n\t\t\t}\n\n\t\t\tboxMesh.material.uniforms.envMap.value = background;\n\t\t\tboxMesh.material.uniforms.flipEnvMap.value = ( background.isCubeTexture && background.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tboxMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t\tboxMesh.layers.enableAll();\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( boxMesh, boxMesh.geometry, boxMesh.material, 0, 0, null );\n\n\t\t} else if ( background && background.isTexture ) {\n\n\t\t\tif ( planeMesh === undefined ) {\n\n\t\t\t\tplaneMesh = new Mesh(\n\t\t\t\t\tnew PlaneGeometry( 2, 2 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tname: 'BackgroundMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.background.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.background.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.background.fragmentShader,\n\t\t\t\t\t\tside: FrontSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tplaneMesh.geometry.deleteAttribute( 'normal' );\n\n\t\t\t\t// enable code injection for non-built-in material\n\t\t\t\tObject.defineProperty( planeMesh.material, 'map', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.t2D.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( planeMesh );\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.t2D.value = background;\n\n\t\t\tif ( background.matrixAutoUpdate === true ) {\n\n\t\t\t\tbackground.updateMatrix();\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.uvTransform.value.copy( background.matrix );\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tplaneMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t\tplaneMesh.layers.enableAll();\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( planeMesh, planeMesh.geometry, planeMesh.material, 0, 0, null );\n\n\t\t}\n\n\t}\n\n\tfunction setClear( color, alpha ) {\n\n\t\tstate.buffers.color.setClear( color.r, color.g, color.b, alpha, premultipliedAlpha );\n\n\t}\n\n\treturn {\n\n\t\tgetClearColor: function () {\n\n\t\t\treturn clearColor;\n\n\t\t},\n\t\tsetClearColor: function ( color, alpha = 1 ) {\n\n\t\t\tclearColor.set( color );\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\tgetClearAlpha: function () {\n\n\t\t\treturn clearAlpha;\n\n\t\t},\n\t\tsetClearAlpha: function ( alpha ) {\n\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\trender: render\n\n\t};\n\n}\n\nfunction WebGLBindingStates( gl, extensions, attributes, capabilities ) {\n\n\tconst maxVertexAttributes = gl.getParameter( 34921 );\n\n\tconst extension = capabilities.isWebGL2 ? null : extensions.get( 'OES_vertex_array_object' );\n\tconst vaoAvailable = capabilities.isWebGL2 || extension !== null;\n\n\tconst bindingStates = {};\n\n\tconst defaultState = createBindingState( null );\n\tlet currentState = defaultState;\n\tlet forceUpdate = false;\n\n\tfunction setup( object, material, program, geometry, index ) {\n\n\t\tlet updateBuffers = false;\n\n\t\tif ( vaoAvailable ) {\n\n\t\t\tconst state = getBindingState( geometry, program, material );\n\n\t\t\tif ( currentState !== state ) {\n\n\t\t\t\tcurrentState = state;\n\t\t\t\tbindVertexArrayObject( currentState.object );\n\n\t\t\t}\n\n\t\t\tupdateBuffers = needsUpdate( object, geometry, program, index );\n\n\t\t\tif ( updateBuffers ) saveCache( object, geometry, program, index );\n\n\t\t} else {\n\n\t\t\tconst wireframe = ( material.wireframe === true );\n\n\t\t\tif ( currentState.geometry !== geometry.id ||\n\t\t\t\tcurrentState.program !== program.id ||\n\t\t\t\tcurrentState.wireframe !== wireframe ) {\n\n\t\t\t\tcurrentState.geometry = geometry.id;\n\t\t\t\tcurrentState.program = program.id;\n\t\t\t\tcurrentState.wireframe = wireframe;\n\n\t\t\t\tupdateBuffers = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( index !== null ) {\n\n\t\t\tattributes.update( index, 34963 );\n\n\t\t}\n\n\t\tif ( updateBuffers || forceUpdate ) {\n\n\t\t\tforceUpdate = false;\n\n\t\t\tsetupVertexAttributes( object, material, program, geometry );\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tgl.bindBuffer( 34963, attributes.get( index ).buffer );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction createVertexArrayObject() {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.createVertexArray();\n\n\t\treturn extension.createVertexArrayOES();\n\n\t}\n\n\tfunction bindVertexArrayObject( vao ) {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.bindVertexArray( vao );\n\n\t\treturn extension.bindVertexArrayOES( vao );\n\n\t}\n\n\tfunction deleteVertexArrayObject( vao ) {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.deleteVertexArray( vao );\n\n\t\treturn extension.deleteVertexArrayOES( vao );\n\n\t}\n\n\tfunction getBindingState( geometry, program, material ) {\n\n\t\tconst wireframe = ( material.wireframe === true );\n\n\t\tlet programMap = bindingStates[ geometry.id ];\n\n\t\tif ( programMap === undefined ) {\n\n\t\t\tprogramMap = {};\n\t\t\tbindingStates[ geometry.id ] = programMap;\n\n\t\t}\n\n\t\tlet stateMap = programMap[ program.id ];\n\n\t\tif ( stateMap === undefined ) {\n\n\t\t\tstateMap = {};\n\t\t\tprogramMap[ program.id ] = stateMap;\n\n\t\t}\n\n\t\tlet state = stateMap[ wireframe ];\n\n\t\tif ( state === undefined ) {\n\n\t\t\tstate = createBindingState( createVertexArrayObject() );\n\t\t\tstateMap[ wireframe ] = state;\n\n\t\t}\n\n\t\treturn state;\n\n\t}\n\n\tfunction createBindingState( vao ) {\n\n\t\tconst newAttributes = [];\n\t\tconst enabledAttributes = [];\n\t\tconst attributeDivisors = [];\n\n\t\tfor ( let i = 0; i < maxVertexAttributes; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\t\t\tenabledAttributes[ i ] = 0;\n\t\t\tattributeDivisors[ i ] = 0;\n\n\t\t}\n\n\t\treturn {\n\n\t\t\t// for backward compatibility on non-VAO support browser\n\t\t\tgeometry: null,\n\t\t\tprogram: null,\n\t\t\twireframe: false,\n\n\t\t\tnewAttributes: newAttributes,\n\t\t\tenabledAttributes: enabledAttributes,\n\t\t\tattributeDivisors: attributeDivisors,\n\t\t\tobject: vao,\n\t\t\tattributes: {},\n\t\t\tindex: null\n\n\t\t};\n\n\t}\n\n\tfunction needsUpdate( object, geometry, program, index ) {\n\n\t\tconst cachedAttributes = currentState.attributes;\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\tlet attributesNum = 0;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tconst cachedAttribute = cachedAttributes[ name ];\n\t\t\t\tlet geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) geometryAttribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) geometryAttribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tif ( cachedAttribute === undefined ) return true;\n\n\t\t\t\tif ( cachedAttribute.attribute !== geometryAttribute ) return true;\n\n\t\t\t\tif ( geometryAttribute && cachedAttribute.data !== geometryAttribute.data ) return true;\n\n\t\t\t\tattributesNum ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( currentState.attributesNum !== attributesNum ) return true;\n\n\t\tif ( currentState.index !== index ) return true;\n\n\t\treturn false;\n\n\t}\n\n\tfunction saveCache( object, geometry, program, index ) {\n\n\t\tconst cache = {};\n\t\tconst attributes = geometry.attributes;\n\t\tlet attributesNum = 0;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tlet attribute = attributes[ name ];\n\n\t\t\t\tif ( attribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) attribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) attribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tconst data = {};\n\t\t\t\tdata.attribute = attribute;\n\n\t\t\t\tif ( attribute && attribute.data ) {\n\n\t\t\t\t\tdata.data = attribute.data;\n\n\t\t\t\t}\n\n\t\t\t\tcache[ name ] = data;\n\n\t\t\t\tattributesNum ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tcurrentState.attributes = cache;\n\t\tcurrentState.attributesNum = attributesNum;\n\n\t\tcurrentState.index = index;\n\n\t}\n\n\tfunction initAttributes() {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\n\t\tfor ( let i = 0, il = newAttributes.length; i < il; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\tfunction enableAttribute( attribute ) {\n\n\t\tenableAttributeAndDivisor( attribute, 0 );\n\n\t}\n\n\tfunction enableAttributeAndDivisor( attribute, meshPerAttribute ) {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\t\tconst enabledAttributes = currentState.enabledAttributes;\n\t\tconst attributeDivisors = currentState.attributeDivisors;\n\n\t\tnewAttributes[ attribute ] = 1;\n\n\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\tenabledAttributes[ attribute ] = 1;\n\n\t\t}\n\n\t\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\n\n\t\t\tconst extension = capabilities.isWebGL2 ? gl : extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\textension[ capabilities.isWebGL2 ? 'vertexAttribDivisor' : 'vertexAttribDivisorANGLE' ]( attribute, meshPerAttribute );\n\t\t\tattributeDivisors[ attribute ] = meshPerAttribute;\n\n\t\t}\n\n\t}\n\n\tfunction disableUnusedAttributes() {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\t\tconst enabledAttributes = currentState.enabledAttributes;\n\n\t\tfor ( let i = 0, il = enabledAttributes.length; i < il; i ++ ) {\n\n\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\n\n\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction vertexAttribPointer( index, size, type, normalized, stride, offset ) {\n\n\t\tif ( capabilities.isWebGL2 === true && ( type === 5124 || type === 5125 ) ) {\n\n\t\t\tgl.vertexAttribIPointer( index, size, type, stride, offset );\n\n\t\t} else {\n\n\t\t\tgl.vertexAttribPointer( index, size, type, normalized, stride, offset );\n\n\t\t}\n\n\t}\n\n\tfunction setupVertexAttributes( object, material, program, geometry ) {\n\n\t\tif ( capabilities.isWebGL2 === false && ( object.isInstancedMesh || geometry.isInstancedBufferGeometry ) ) {\n\n\t\t\tif ( extensions.get( 'ANGLE_instanced_arrays' ) === null ) return;\n\n\t\t}\n\n\t\tinitAttributes();\n\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tconst materialDefaultAttributeValues = material.defaultAttributeValues;\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tlet geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) geometryAttribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) geometryAttribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometryAttribute !== undefined ) {\n\n\t\t\t\t\tconst normalized = geometryAttribute.normalized;\n\t\t\t\t\tconst size = geometryAttribute.itemSize;\n\n\t\t\t\t\tconst attribute = attributes.get( geometryAttribute );\n\n\t\t\t\t\t// TODO Attribute may not be available on context restore\n\n\t\t\t\t\tif ( attribute === undefined ) continue;\n\n\t\t\t\t\tconst buffer = attribute.buffer;\n\t\t\t\t\tconst type = attribute.type;\n\t\t\t\t\tconst bytesPerElement = attribute.bytesPerElement;\n\n\t\t\t\t\tif ( geometryAttribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tconst data = geometryAttribute.data;\n\t\t\t\t\t\tconst stride = data.stride;\n\t\t\t\t\t\tconst offset = geometryAttribute.offset;\n\n\t\t\t\t\t\tif ( data.isInstancedInterleavedBuffer ) {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute.location + i, data.meshPerAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = data.meshPerAttribute * data.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttribute( programAttribute.location + i );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( 34962, buffer );\n\n\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\tvertexAttribPointer(\n\t\t\t\t\t\t\t\tprogramAttribute.location + i,\n\t\t\t\t\t\t\t\tsize / programAttribute.locationSize,\n\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t\tnormalized,\n\t\t\t\t\t\t\t\tstride * bytesPerElement,\n\t\t\t\t\t\t\t\t( offset + ( size / programAttribute.locationSize ) * i ) * bytesPerElement\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( geometryAttribute.isInstancedBufferAttribute ) {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute.location + i, geometryAttribute.meshPerAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttribute( programAttribute.location + i );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( 34962, buffer );\n\n\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\tvertexAttribPointer(\n\t\t\t\t\t\t\t\tprogramAttribute.location + i,\n\t\t\t\t\t\t\t\tsize / programAttribute.locationSize,\n\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t\tnormalized,\n\t\t\t\t\t\t\t\tsize * bytesPerElement,\n\t\t\t\t\t\t\t\t( size / programAttribute.locationSize ) * i * bytesPerElement\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\n\n\t\t\t\t\tconst value = materialDefaultAttributeValues[ name ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\tswitch ( value.length ) {\n\n\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\tgl.vertexAttrib2fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\tgl.vertexAttrib3fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\tgl.vertexAttrib4fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tgl.vertexAttrib1fv( programAttribute.location, value );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tdisableUnusedAttributes();\n\n\t}\n\n\tfunction dispose() {\n\n\t\treset();\n\n\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\tfor ( const programId in programMap ) {\n\n\t\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t\t}\n\n\t\t\t\tdelete programMap[ programId ];\n\n\t\t\t}\n\n\t\t\tdelete bindingStates[ geometryId ];\n\n\t\t}\n\n\t}\n\n\tfunction releaseStatesOfGeometry( geometry ) {\n\n\t\tif ( bindingStates[ geometry.id ] === undefined ) return;\n\n\t\tconst programMap = bindingStates[ geometry.id ];\n\n\t\tfor ( const programId in programMap ) {\n\n\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ programId ];\n\n\t\t}\n\n\t\tdelete bindingStates[ geometry.id ];\n\n\t}\n\n\tfunction releaseStatesOfProgram( program ) {\n\n\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\tif ( programMap[ program.id ] === undefined ) continue;\n\n\t\t\tconst stateMap = programMap[ program.id ];\n\n\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ program.id ];\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\tresetDefaultState();\n\t\tforceUpdate = true;\n\n\t\tif ( currentState === defaultState ) return;\n\n\t\tcurrentState = defaultState;\n\t\tbindVertexArrayObject( currentState.object );\n\n\t}\n\n\t// for backward-compatibility\n\n\tfunction resetDefaultState() {\n\n\t\tdefaultState.geometry = null;\n\t\tdefaultState.program = null;\n\t\tdefaultState.wireframe = false;\n\n\t}\n\n\treturn {\n\n\t\tsetup: setup,\n\t\treset: reset,\n\t\tresetDefaultState: resetDefaultState,\n\t\tdispose: dispose,\n\t\treleaseStatesOfGeometry: releaseStatesOfGeometry,\n\t\treleaseStatesOfProgram: releaseStatesOfProgram,\n\n\t\tinitAttributes: initAttributes,\n\t\tenableAttribute: enableAttribute,\n\t\tdisableUnusedAttributes: disableUnusedAttributes\n\n\t};\n\n}\n\nfunction WebGLBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tlet mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawArrays( mode, start, count );\n\n\t\tinfo.update( count, mode, 1 );\n\n\t}\n\n\tfunction renderInstances( start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tlet extension, methodName;\n\n\t\tif ( isWebGL2 ) {\n\n\t\t\textension = gl;\n\t\t\tmethodName = 'drawArraysInstanced';\n\n\t\t} else {\n\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\t\t\tmethodName = 'drawArraysInstancedANGLE';\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ methodName ]( mode, start, count, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\nfunction WebGLCapabilities( gl, extensions, parameters ) {\n\n\tlet maxAnisotropy;\n\n\tfunction getMaxAnisotropy() {\n\n\t\tif ( maxAnisotropy !== undefined ) return maxAnisotropy;\n\n\t\tif ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\n\n\t\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tmaxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\n\n\t\t} else {\n\n\t\t\tmaxAnisotropy = 0;\n\n\t\t}\n\n\t\treturn maxAnisotropy;\n\n\t}\n\n\tfunction getMaxPrecision( precision ) {\n\n\t\tif ( precision === 'highp' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( 35633, 36338 ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( 35632, 36338 ).precision > 0 ) {\n\n\t\t\t\treturn 'highp';\n\n\t\t\t}\n\n\t\t\tprecision = 'mediump';\n\n\t\t}\n\n\t\tif ( precision === 'mediump' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( 35633, 36337 ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( 35632, 36337 ).precision > 0 ) {\n\n\t\t\t\treturn 'mediump';\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn 'lowp';\n\n\t}\n\n\tconst isWebGL2 = ( typeof WebGL2RenderingContext !== 'undefined' && gl instanceof WebGL2RenderingContext ) ||\n\t\t( typeof WebGL2ComputeRenderingContext !== 'undefined' && gl instanceof WebGL2ComputeRenderingContext );\n\n\tlet precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n\tconst maxPrecision = getMaxPrecision( precision );\n\n\tif ( maxPrecision !== precision ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );\n\t\tprecision = maxPrecision;\n\n\t}\n\n\tconst drawBuffers = isWebGL2 || extensions.has( 'WEBGL_draw_buffers' );\n\n\tconst logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\n\n\tconst maxTextures = gl.getParameter( 34930 );\n\tconst maxVertexTextures = gl.getParameter( 35660 );\n\tconst maxTextureSize = gl.getParameter( 3379 );\n\tconst maxCubemapSize = gl.getParameter( 34076 );\n\n\tconst maxAttributes = gl.getParameter( 34921 );\n\tconst maxVertexUniforms = gl.getParameter( 36347 );\n\tconst maxVaryings = gl.getParameter( 36348 );\n\tconst maxFragmentUniforms = gl.getParameter( 36349 );\n\n\tconst vertexTextures = maxVertexTextures > 0;\n\tconst floatFragmentTextures = isWebGL2 || extensions.has( 'OES_texture_float' );\n\tconst floatVertexTextures = vertexTextures && floatFragmentTextures;\n\n\tconst maxSamples = isWebGL2 ? gl.getParameter( 36183 ) : 0;\n\n\treturn {\n\n\t\tisWebGL2: isWebGL2,\n\n\t\tdrawBuffers: drawBuffers,\n\n\t\tgetMaxAnisotropy: getMaxAnisotropy,\n\t\tgetMaxPrecision: getMaxPrecision,\n\n\t\tprecision: precision,\n\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\tmaxTextures: maxTextures,\n\t\tmaxVertexTextures: maxVertexTextures,\n\t\tmaxTextureSize: maxTextureSize,\n\t\tmaxCubemapSize: maxCubemapSize,\n\n\t\tmaxAttributes: maxAttributes,\n\t\tmaxVertexUniforms: maxVertexUniforms,\n\t\tmaxVaryings: maxVaryings,\n\t\tmaxFragmentUniforms: maxFragmentUniforms,\n\n\t\tvertexTextures: vertexTextures,\n\t\tfloatFragmentTextures: floatFragmentTextures,\n\t\tfloatVertexTextures: floatVertexTextures,\n\n\t\tmaxSamples: maxSamples\n\n\t};\n\n}\n\nfunction WebGLClipping( properties ) {\n\n\tconst scope = this;\n\n\tlet globalState = null,\n\t\tnumGlobalPlanes = 0,\n\t\tlocalClippingEnabled = false,\n\t\trenderingShadows = false;\n\n\tconst plane = new Plane(),\n\t\tviewNormalMatrix = new Matrix3(),\n\n\t\tuniform = { value: null, needsUpdate: false };\n\n\tthis.uniform = uniform;\n\tthis.numPlanes = 0;\n\tthis.numIntersection = 0;\n\n\tthis.init = function ( planes, enableLocalClipping, camera ) {\n\n\t\tconst enabled =\n\t\t\tplanes.length !== 0 ||\n\t\t\tenableLocalClipping ||\n\t\t\t// enable state of previous frame - the clipping code has to\n\t\t\t// run another frame in order to reset the state:\n\t\t\tnumGlobalPlanes !== 0 ||\n\t\t\tlocalClippingEnabled;\n\n\t\tlocalClippingEnabled = enableLocalClipping;\n\n\t\tglobalState = projectPlanes( planes, camera, 0 );\n\t\tnumGlobalPlanes = planes.length;\n\n\t\treturn enabled;\n\n\t};\n\n\tthis.beginShadows = function () {\n\n\t\trenderingShadows = true;\n\t\tprojectPlanes( null );\n\n\t};\n\n\tthis.endShadows = function () {\n\n\t\trenderingShadows = false;\n\t\tresetGlobalState();\n\n\t};\n\n\tthis.setState = function ( material, camera, useCache ) {\n\n\t\tconst planes = material.clippingPlanes,\n\t\t\tclipIntersection = material.clipIntersection,\n\t\t\tclipShadows = material.clipShadows;\n\n\t\tconst materialProperties = properties.get( material );\n\n\t\tif ( ! localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && ! clipShadows ) {\n\n\t\t\t// there's no local clipping\n\n\t\t\tif ( renderingShadows ) {\n\n\t\t\t\t// there's no global clipping\n\n\t\t\t\tprojectPlanes( null );\n\n\t\t\t} else {\n\n\t\t\t\tresetGlobalState();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n\t\t\t\tlGlobal = nGlobal * 4;\n\n\t\t\tlet dstArray = materialProperties.clippingState || null;\n\n\t\t\tuniform.value = dstArray; // ensure unique state\n\n\t\t\tdstArray = projectPlanes( planes, camera, lGlobal, useCache );\n\n\t\t\tfor ( let i = 0; i !== lGlobal; ++ i ) {\n\n\t\t\t\tdstArray[ i ] = globalState[ i ];\n\n\t\t\t}\n\n\t\t\tmaterialProperties.clippingState = dstArray;\n\t\t\tthis.numIntersection = clipIntersection ? this.numPlanes : 0;\n\t\t\tthis.numPlanes += nGlobal;\n\n\t\t}\n\n\n\t};\n\n\tfunction resetGlobalState() {\n\n\t\tif ( uniform.value !== globalState ) {\n\n\t\t\tuniform.value = globalState;\n\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\n\n\t\t}\n\n\t\tscope.numPlanes = numGlobalPlanes;\n\t\tscope.numIntersection = 0;\n\n\t}\n\n\tfunction projectPlanes( planes, camera, dstOffset, skipTransform ) {\n\n\t\tconst nPlanes = planes !== null ? planes.length : 0;\n\t\tlet dstArray = null;\n\n\t\tif ( nPlanes !== 0 ) {\n\n\t\t\tdstArray = uniform.value;\n\n\t\t\tif ( skipTransform !== true || dstArray === null ) {\n\n\t\t\t\tconst flatSize = dstOffset + nPlanes * 4,\n\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\n\n\t\t\t\tviewNormalMatrix.getNormalMatrix( viewMatrix );\n\n\t\t\t\tif ( dstArray === null || dstArray.length < flatSize ) {\n\n\t\t\t\t\tdstArray = new Float32Array( flatSize );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0, i4 = dstOffset; i !== nPlanes; ++ i, i4 += 4 ) {\n\n\t\t\t\t\tplane.copy( planes[ i ] ).applyMatrix4( viewMatrix, viewNormalMatrix );\n\n\t\t\t\t\tplane.normal.toArray( dstArray, i4 );\n\t\t\t\t\tdstArray[ i4 + 3 ] = plane.constant;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tuniform.value = dstArray;\n\t\t\tuniform.needsUpdate = true;\n\n\t\t}\n\n\t\tscope.numPlanes = nPlanes;\n\t\tscope.numIntersection = 0;\n\n\t\treturn dstArray;\n\n\t}\n\n}\n\nfunction WebGLCubeMaps( renderer ) {\n\n\tlet cubemaps = new WeakMap();\n\n\tfunction mapTextureMapping( texture, mapping ) {\n\n\t\tif ( mapping === EquirectangularReflectionMapping ) {\n\n\t\t\ttexture.mapping = CubeReflectionMapping;\n\n\t\t} else if ( mapping === EquirectangularRefractionMapping ) {\n\n\t\t\ttexture.mapping = CubeRefractionMapping;\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction get( texture ) {\n\n\t\tif ( texture && texture.isTexture && texture.isRenderTargetTexture === false ) {\n\n\t\t\tconst mapping = texture.mapping;\n\n\t\t\tif ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping ) {\n\n\t\t\t\tif ( cubemaps.has( texture ) ) {\n\n\t\t\t\t\tconst cubemap = cubemaps.get( texture ).texture;\n\t\t\t\t\treturn mapTextureMapping( cubemap, texture.mapping );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst image = texture.image;\n\n\t\t\t\t\tif ( image && image.height > 0 ) {\n\n\t\t\t\t\t\tconst renderTarget = new WebGLCubeRenderTarget( image.height / 2 );\n\t\t\t\t\t\trenderTarget.fromEquirectangularTexture( renderer, texture );\n\t\t\t\t\t\tcubemaps.set( texture, renderTarget );\n\n\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\t\treturn mapTextureMapping( renderTarget.texture, texture.mapping );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\n\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tconst cubemap = cubemaps.get( texture );\n\n\t\tif ( cubemap !== undefined ) {\n\n\t\t\tcubemaps.delete( texture );\n\t\t\tcubemap.dispose();\n\n\t\t}\n\n\t}\n\n\tfunction dispose() {\n\n\t\tcubemaps = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nclass OrthographicCamera extends Camera {\n\n\tconstructor( left = - 1, right = 1, top = 1, bottom = - 1, near = 0.1, far = 2000 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'OrthographicCamera';\n\n\t\tthis.zoom = 1;\n\t\tthis.view = null;\n\n\t\tthis.left = left;\n\t\tthis.right = right;\n\t\tthis.top = top;\n\t\tthis.bottom = bottom;\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.left = source.left;\n\t\tthis.right = source.right;\n\t\tthis.top = source.top;\n\t\tthis.bottom = source.bottom;\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\n\t\tthis.zoom = source.zoom;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\treturn this;\n\n\t}\n\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tclearViewOffset() {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tupdateProjectionMatrix() {\n\n\t\tconst dx = ( this.right - this.left ) / ( 2 * this.zoom );\n\t\tconst dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\n\t\tconst cx = ( this.right + this.left ) / 2;\n\t\tconst cy = ( this.top + this.bottom ) / 2;\n\n\t\tlet left = cx - dx;\n\t\tlet right = cx + dx;\n\t\tlet top = cy + dy;\n\t\tlet bottom = cy - dy;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst scaleW = ( this.right - this.left ) / this.view.fullWidth / this.zoom;\n\t\t\tconst scaleH = ( this.top - this.bottom ) / this.view.fullHeight / this.zoom;\n\n\t\t\tleft += scaleW * this.view.offsetX;\n\t\t\tright = left + scaleW * this.view.width;\n\t\t\ttop -= scaleH * this.view.offsetY;\n\t\t\tbottom = top - scaleH * this.view.height;\n\n\t\t}\n\n\t\tthis.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.zoom = this.zoom;\n\t\tdata.object.left = this.left;\n\t\tdata.object.right = this.right;\n\t\tdata.object.top = this.top;\n\t\tdata.object.bottom = this.bottom;\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\treturn data;\n\n\t}\n\n}\n\nOrthographicCamera.prototype.isOrthographicCamera = true;\n\nconst LOD_MIN = 4;\n\n// The standard deviations (radians) associated with the extra mips. These are\n// chosen to approximate a Trowbridge-Reitz distribution function times the\n// geometric shadowing function. These sigma values squared must match the\n// variance #defines in cube_uv_reflection_fragment.glsl.js.\nconst EXTRA_LOD_SIGMA = [ 0.125, 0.215, 0.35, 0.446, 0.526, 0.582 ];\n\n// The maximum length of the blur for loop. Smaller sigmas will use fewer\n// samples and exit early, but not recompile the shader.\nconst MAX_SAMPLES = 20;\n\nconst _flatCamera = /*@__PURE__*/ new OrthographicCamera();\nconst _clearColor = /*@__PURE__*/ new Color();\nlet _oldTarget = null;\n\n// Golden Ratio\nconst PHI = ( 1 + Math.sqrt( 5 ) ) / 2;\nconst INV_PHI = 1 / PHI;\n\n// Vertices of a dodecahedron (except the opposites, which represent the\n// same axis), used as axis directions evenly spread on a sphere.\nconst _axisDirections = [\n\t/*@__PURE__*/ new Vector3( 1, 1, 1 ),\n\t/*@__PURE__*/ new Vector3( - 1, 1, 1 ),\n\t/*@__PURE__*/ new Vector3( 1, 1, - 1 ),\n\t/*@__PURE__*/ new Vector3( - 1, 1, - 1 ),\n\t/*@__PURE__*/ new Vector3( 0, PHI, INV_PHI ),\n\t/*@__PURE__*/ new Vector3( 0, PHI, - INV_PHI ),\n\t/*@__PURE__*/ new Vector3( INV_PHI, 0, PHI ),\n\t/*@__PURE__*/ new Vector3( - INV_PHI, 0, PHI ),\n\t/*@__PURE__*/ new Vector3( PHI, INV_PHI, 0 ),\n\t/*@__PURE__*/ new Vector3( - PHI, INV_PHI, 0 ) ];\n\n/**\n * This class generates a Prefiltered, Mipmapped Radiance Environment Map\n * (PMREM) from a cubeMap environment texture. This allows different levels of\n * blur to be quickly accessed based on material roughness. It is packed into a\n * special CubeUV format that allows us to perform custom interpolation so that\n * we can support nonlinear formats such as RGBE. Unlike a traditional mipmap\n * chain, it only goes down to the LOD_MIN level (above), and then creates extra\n * even more filtered 'mips' at the same LOD_MIN resolution, associated with\n * higher roughness levels. In this way we maintain resolution to smoothly\n * interpolate diffuse lighting while limiting sampling computation.\n *\n * Paper: Fast, Accurate Image-Based Lighting\n * https://drive.google.com/file/d/15y8r_UpKlU9SvV4ILb0C3qCPecS8pvLz/view\n*/\n\nclass PMREMGenerator {\n\n\tconstructor( renderer ) {\n\n\t\tthis._renderer = renderer;\n\t\tthis._pingPongRenderTarget = null;\n\n\t\tthis._lodMax = 0;\n\t\tthis._cubeSize = 0;\n\t\tthis._lodPlanes = [];\n\t\tthis._sizeLods = [];\n\t\tthis._sigmas = [];\n\n\t\tthis._blurMaterial = null;\n\t\tthis._cubemapMaterial = null;\n\t\tthis._equirectMaterial = null;\n\n\t\tthis._compileMaterial( this._blurMaterial );\n\n\t}\n\n\t/**\n\t * Generates a PMREM from a supplied Scene, which can be faster than using an\n\t * image if networking bandwidth is low. Optional sigma specifies a blur radius\n\t * in radians to be applied to the scene before PMREM generation. Optional near\n\t * and far planes ensure the scene is rendered in its entirety (the cubeCamera\n\t * is placed at the origin).\n\t */\n\tfromScene( scene, sigma = 0, near = 0.1, far = 100 ) {\n\n\t\t_oldTarget = this._renderer.getRenderTarget();\n\n\t\tthis._setSize( 256 );\n\n\t\tconst cubeUVRenderTarget = this._allocateTargets();\n\t\tcubeUVRenderTarget.depthBuffer = true;\n\n\t\tthis._sceneToCubeUV( scene, near, far, cubeUVRenderTarget );\n\n\t\tif ( sigma > 0 ) {\n\n\t\t\tthis._blur( cubeUVRenderTarget, 0, 0, sigma );\n\n\t\t}\n\n\t\tthis._applyPMREM( cubeUVRenderTarget );\n\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t/**\n\t * Generates a PMREM from an equirectangular texture, which can be either LDR\n\t * or HDR. The ideal input image size is 1k (1024 x 512),\n\t * as this matches best with the 256 x 256 cubemap output.\n\t */\n\tfromEquirectangular( equirectangular, renderTarget = null ) {\n\n\t\treturn this._fromTexture( equirectangular, renderTarget );\n\n\t}\n\n\t/**\n\t * Generates a PMREM from an cubemap texture, which can be either LDR\n\t * or HDR. The ideal input cube size is 256 x 256,\n\t * as this matches best with the 256 x 256 cubemap output.\n\t */\n\tfromCubemap( cubemap, renderTarget = null ) {\n\n\t\treturn this._fromTexture( cubemap, renderTarget );\n\n\t}\n\n\t/**\n\t * Pre-compiles the cubemap shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */\n\tcompileCubemapShader() {\n\n\t\tif ( this._cubemapMaterial === null ) {\n\n\t\t\tthis._cubemapMaterial = _getCubemapMaterial();\n\t\t\tthis._compileMaterial( this._cubemapMaterial );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Pre-compiles the equirectangular shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */\n\tcompileEquirectangularShader() {\n\n\t\tif ( this._equirectMaterial === null ) {\n\n\t\t\tthis._equirectMaterial = _getEquirectMaterial();\n\t\t\tthis._compileMaterial( this._equirectMaterial );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Disposes of the PMREMGenerator's internal memory. Note that PMREMGenerator is a static class,\n\t * so you should not need more than one PMREMGenerator object. If you do, calling dispose() on\n\t * one of them will cause any others to also become unusable.\n\t */\n\tdispose() {\n\n\t\tthis._dispose();\n\n\t\tif ( this._cubemapMaterial !== null ) this._cubemapMaterial.dispose();\n\t\tif ( this._equirectMaterial !== null ) this._equirectMaterial.dispose();\n\n\t}\n\n\t// private interface\n\n\t_setSize( cubeSize ) {\n\n\t\tthis._lodMax = Math.floor( Math.log2( cubeSize ) );\n\t\tthis._cubeSize = Math.pow( 2, this._lodMax );\n\n\t}\n\n\t_dispose() {\n\n\t\tif ( this._blurMaterial !== null ) this._blurMaterial.dispose();\n\n\t\tif ( this._pingPongRenderTarget !== null ) this._pingPongRenderTarget.dispose();\n\n\t\tfor ( let i = 0; i < this._lodPlanes.length; i ++ ) {\n\n\t\t\tthis._lodPlanes[ i ].dispose();\n\n\t\t}\n\n\t}\n\n\t_cleanup( outputTarget ) {\n\n\t\tthis._renderer.setRenderTarget( _oldTarget );\n\t\toutputTarget.scissorTest = false;\n\t\t_setViewport( outputTarget, 0, 0, outputTarget.width, outputTarget.height );\n\n\t}\n\n\t_fromTexture( texture, renderTarget ) {\n\n\t\tif ( texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping ) {\n\n\t\t\tthis._setSize( texture.image.length === 0 ? 16 : ( texture.image[ 0 ].width || texture.image[ 0 ].image.width ) );\n\n\t\t} else { // Equirectangular\n\n\t\t\tthis._setSize( texture.image.width / 4 );\n\n\t\t}\n\n\t\t_oldTarget = this._renderer.getRenderTarget();\n\n\t\tconst cubeUVRenderTarget = renderTarget || this._allocateTargets();\n\t\tthis._textureToCubeUV( texture, cubeUVRenderTarget );\n\t\tthis._applyPMREM( cubeUVRenderTarget );\n\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t_allocateTargets() {\n\n\t\tconst width = 3 * Math.max( this._cubeSize, 16 * 7 );\n\t\tconst height = 4 * this._cubeSize;\n\n\t\tconst params = {\n\t\t\tmagFilter: LinearFilter,\n\t\t\tminFilter: LinearFilter,\n\t\t\tgenerateMipmaps: false,\n\t\t\ttype: HalfFloatType,\n\t\t\tformat: RGBAFormat,\n\t\t\tencoding: LinearEncoding,\n\t\t\tdepthBuffer: false\n\t\t};\n\n\t\tconst cubeUVRenderTarget = _createRenderTarget( width, height, params );\n\n\t\tif ( this._pingPongRenderTarget === null || this._pingPongRenderTarget.width !== width ) {\n\n\t\t\tif ( this._pingPongRenderTarget !== null ) {\n\n\t\t\t\tthis._dispose();\n\n\t\t\t}\n\n\t\t\tthis._pingPongRenderTarget = _createRenderTarget( width, height, params );\n\n\t\t\tconst { _lodMax } = this;\n\t\t\t( { sizeLods: this._sizeLods, lodPlanes: this._lodPlanes, sigmas: this._sigmas } = _createPlanes( _lodMax ) );\n\n\t\t\tthis._blurMaterial = _getBlurShader( _lodMax, width, height );\n\n\t\t}\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t_compileMaterial( material ) {\n\n\t\tconst tmpMesh = new Mesh( this._lodPlanes[ 0 ], material );\n\t\tthis._renderer.compile( tmpMesh, _flatCamera );\n\n\t}\n\n\t_sceneToCubeUV( scene, near, far, cubeUVRenderTarget ) {\n\n\t\tconst fov = 90;\n\t\tconst aspect = 1;\n\t\tconst cubeCamera = new PerspectiveCamera( fov, aspect, near, far );\n\t\tconst upSign = [ 1, - 1, 1, 1, 1, 1 ];\n\t\tconst forwardSign = [ 1, 1, 1, - 1, - 1, - 1 ];\n\t\tconst renderer = this._renderer;\n\n\t\tconst originalAutoClear = renderer.autoClear;\n\t\tconst toneMapping = renderer.toneMapping;\n\t\trenderer.getClearColor( _clearColor );\n\n\t\trenderer.toneMapping = NoToneMapping;\n\t\trenderer.autoClear = false;\n\n\t\tconst backgroundMaterial = new MeshBasicMaterial( {\n\t\t\tname: 'PMREM.Background',\n\t\t\tside: BackSide,\n\t\t\tdepthWrite: false,\n\t\t\tdepthTest: false,\n\t\t} );\n\n\t\tconst backgroundBox = new Mesh( new BoxGeometry(), backgroundMaterial );\n\n\t\tlet useSolidColor = false;\n\t\tconst background = scene.background;\n\n\t\tif ( background ) {\n\n\t\t\tif ( background.isColor ) {\n\n\t\t\t\tbackgroundMaterial.color.copy( background );\n\t\t\t\tscene.background = null;\n\t\t\t\tuseSolidColor = true;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tbackgroundMaterial.color.copy( _clearColor );\n\t\t\tuseSolidColor = true;\n\n\t\t}\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst col = i % 3;\n\n\t\t\tif ( col === 0 ) {\n\n\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\tcubeCamera.lookAt( forwardSign[ i ], 0, 0 );\n\n\t\t\t} else if ( col === 1 ) {\n\n\t\t\t\tcubeCamera.up.set( 0, 0, upSign[ i ] );\n\t\t\t\tcubeCamera.lookAt( 0, forwardSign[ i ], 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\tcubeCamera.lookAt( 0, 0, forwardSign[ i ] );\n\n\t\t\t}\n\n\t\t\tconst size = this._cubeSize;\n\n\t\t\t_setViewport( cubeUVRenderTarget, col * size, i > 2 ? size : 0, size, size );\n\n\t\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\n\t\t\tif ( useSolidColor ) {\n\n\t\t\t\trenderer.render( backgroundBox, cubeCamera );\n\n\t\t\t}\n\n\t\t\trenderer.render( scene, cubeCamera );\n\n\t\t}\n\n\t\tbackgroundBox.geometry.dispose();\n\t\tbackgroundBox.material.dispose();\n\n\t\trenderer.toneMapping = toneMapping;\n\t\trenderer.autoClear = originalAutoClear;\n\t\tscene.background = background;\n\n\t}\n\n\t_textureToCubeUV( texture, cubeUVRenderTarget ) {\n\n\t\tconst renderer = this._renderer;\n\n\t\tconst isCubeTexture = ( texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping );\n\n\t\tif ( isCubeTexture ) {\n\n\t\t\tif ( this._cubemapMaterial === null ) {\n\n\t\t\t\tthis._cubemapMaterial = _getCubemapMaterial();\n\n\t\t\t}\n\n\t\t\tthis._cubemapMaterial.uniforms.flipEnvMap.value = ( texture.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t} else {\n\n\t\t\tif ( this._equirectMaterial === null ) {\n\n\t\t\t\tthis._equirectMaterial = _getEquirectMaterial();\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst material = isCubeTexture ? this._cubemapMaterial : this._equirectMaterial;\n\t\tconst mesh = new Mesh( this._lodPlanes[ 0 ], material );\n\n\t\tconst uniforms = material.uniforms;\n\n\t\tuniforms[ 'envMap' ].value = texture;\n\n\t\tconst size = this._cubeSize;\n\n\t\t_setViewport( cubeUVRenderTarget, 0, 0, 3 * size, 2 * size );\n\n\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\t\trenderer.render( mesh, _flatCamera );\n\n\t}\n\n\t_applyPMREM( cubeUVRenderTarget ) {\n\n\t\tconst renderer = this._renderer;\n\t\tconst autoClear = renderer.autoClear;\n\t\trenderer.autoClear = false;\n\n\t\tfor ( let i = 1; i < this._lodPlanes.length; i ++ ) {\n\n\t\t\tconst sigma = Math.sqrt( this._sigmas[ i ] * this._sigmas[ i ] - this._sigmas[ i - 1 ] * this._sigmas[ i - 1 ] );\n\n\t\t\tconst poleAxis = _axisDirections[ ( i - 1 ) % _axisDirections.length ];\n\n\t\t\tthis._blur( cubeUVRenderTarget, i - 1, i, sigma, poleAxis );\n\n\t\t}\n\n\t\trenderer.autoClear = autoClear;\n\n\t}\n\n\t/**\n\t * This is a two-pass Gaussian blur for a cubemap. Normally this is done\n\t * vertically and horizontally, but this breaks down on a cube. Here we apply\n\t * the blur latitudinally (around the poles), and then longitudinally (towards\n\t * the poles) to approximate the orthogonally-separable blur. It is least\n\t * accurate at the poles, but still does a decent job.\n\t */\n\t_blur( cubeUVRenderTarget, lodIn, lodOut, sigma, poleAxis ) {\n\n\t\tconst pingPongRenderTarget = this._pingPongRenderTarget;\n\n\t\tthis._halfBlur(\n\t\t\tcubeUVRenderTarget,\n\t\t\tpingPongRenderTarget,\n\t\t\tlodIn,\n\t\t\tlodOut,\n\t\t\tsigma,\n\t\t\t'latitudinal',\n\t\t\tpoleAxis );\n\n\t\tthis._halfBlur(\n\t\t\tpingPongRenderTarget,\n\t\t\tcubeUVRenderTarget,\n\t\t\tlodOut,\n\t\t\tlodOut,\n\t\t\tsigma,\n\t\t\t'longitudinal',\n\t\t\tpoleAxis );\n\n\t}\n\n\t_halfBlur( targetIn, targetOut, lodIn, lodOut, sigmaRadians, direction, poleAxis ) {\n\n\t\tconst renderer = this._renderer;\n\t\tconst blurMaterial = this._blurMaterial;\n\n\t\tif ( direction !== 'latitudinal' && direction !== 'longitudinal' ) {\n\n\t\t\tconsole.error(\n\t\t\t\t'blur direction must be either latitudinal or longitudinal!' );\n\n\t\t}\n\n\t\t// Number of standard deviations at which to cut off the discrete approximation.\n\t\tconst STANDARD_DEVIATIONS = 3;\n\n\t\tconst blurMesh = new Mesh( this._lodPlanes[ lodOut ], blurMaterial );\n\t\tconst blurUniforms = blurMaterial.uniforms;\n\n\t\tconst pixels = this._sizeLods[ lodIn ] - 1;\n\t\tconst radiansPerPixel = isFinite( sigmaRadians ) ? Math.PI / ( 2 * pixels ) : 2 * Math.PI / ( 2 * MAX_SAMPLES - 1 );\n\t\tconst sigmaPixels = sigmaRadians / radiansPerPixel;\n\t\tconst samples = isFinite( sigmaRadians ) ? 1 + Math.floor( STANDARD_DEVIATIONS * sigmaPixels ) : MAX_SAMPLES;\n\n\t\tif ( samples > MAX_SAMPLES ) {\n\n\t\t\tconsole.warn( `sigmaRadians, ${\n\t\t\t\tsigmaRadians}, is too large and will clip, as it requested ${\n\t\t\t\tsamples} samples when the maximum is set to ${MAX_SAMPLES}` );\n\n\t\t}\n\n\t\tconst weights = [];\n\t\tlet sum = 0;\n\n\t\tfor ( let i = 0; i < MAX_SAMPLES; ++ i ) {\n\n\t\t\tconst x = i / sigmaPixels;\n\t\t\tconst weight = Math.exp( - x * x / 2 );\n\t\t\tweights.push( weight );\n\n\t\t\tif ( i === 0 ) {\n\n\t\t\t\tsum += weight;\n\n\t\t\t} else if ( i < samples ) {\n\n\t\t\t\tsum += 2 * weight;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let i = 0; i < weights.length; i ++ ) {\n\n\t\t\tweights[ i ] = weights[ i ] / sum;\n\n\t\t}\n\n\t\tblurUniforms[ 'envMap' ].value = targetIn.texture;\n\t\tblurUniforms[ 'samples' ].value = samples;\n\t\tblurUniforms[ 'weights' ].value = weights;\n\t\tblurUniforms[ 'latitudinal' ].value = direction === 'latitudinal';\n\n\t\tif ( poleAxis ) {\n\n\t\t\tblurUniforms[ 'poleAxis' ].value = poleAxis;\n\n\t\t}\n\n\t\tconst { _lodMax } = this;\n\t\tblurUniforms[ 'dTheta' ].value = radiansPerPixel;\n\t\tblurUniforms[ 'mipInt' ].value = _lodMax - lodIn;\n\n\t\tconst outputSize = this._sizeLods[ lodOut ];\n\t\tconst x = 3 * outputSize * ( lodOut > _lodMax - LOD_MIN ? lodOut - _lodMax + LOD_MIN : 0 );\n\t\tconst y = 4 * ( this._cubeSize - outputSize );\n\n\t\t_setViewport( targetOut, x, y, 3 * outputSize, 2 * outputSize );\n\t\trenderer.setRenderTarget( targetOut );\n\t\trenderer.render( blurMesh, _flatCamera );\n\n\t}\n\n}\n\n\n\nfunction _createPlanes( lodMax ) {\n\n\tconst lodPlanes = [];\n\tconst sizeLods = [];\n\tconst sigmas = [];\n\n\tlet lod = lodMax;\n\n\tconst totalLods = lodMax - LOD_MIN + 1 + EXTRA_LOD_SIGMA.length;\n\n\tfor ( let i = 0; i < totalLods; i ++ ) {\n\n\t\tconst sizeLod = Math.pow( 2, lod );\n\t\tsizeLods.push( sizeLod );\n\t\tlet sigma = 1.0 / sizeLod;\n\n\t\tif ( i > lodMax - LOD_MIN ) {\n\n\t\t\tsigma = EXTRA_LOD_SIGMA[ i - lodMax + LOD_MIN - 1 ];\n\n\t\t} else if ( i === 0 ) {\n\n\t\t\tsigma = 0;\n\n\t\t}\n\n\t\tsigmas.push( sigma );\n\n\t\tconst texelSize = 1.0 / ( sizeLod - 2 );\n\t\tconst min = - texelSize;\n\t\tconst max = 1 + texelSize;\n\t\tconst uv1 = [ min, min, max, min, max, max, min, min, max, max, min, max ];\n\n\t\tconst cubeFaces = 6;\n\t\tconst vertices = 6;\n\t\tconst positionSize = 3;\n\t\tconst uvSize = 2;\n\t\tconst faceIndexSize = 1;\n\n\t\tconst position = new Float32Array( positionSize * vertices * cubeFaces );\n\t\tconst uv = new Float32Array( uvSize * vertices * cubeFaces );\n\t\tconst faceIndex = new Float32Array( faceIndexSize * vertices * cubeFaces );\n\n\t\tfor ( let face = 0; face < cubeFaces; face ++ ) {\n\n\t\t\tconst x = ( face % 3 ) * 2 / 3 - 1;\n\t\t\tconst y = face > 2 ? 0 : - 1;\n\t\t\tconst coordinates = [\n\t\t\t\tx, y, 0,\n\t\t\t\tx + 2 / 3, y, 0,\n\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\tx, y, 0,\n\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\tx, y + 1, 0\n\t\t\t];\n\t\t\tposition.set( coordinates, positionSize * vertices * face );\n\t\t\tuv.set( uv1, uvSize * vertices * face );\n\t\t\tconst fill = [ face, face, face, face, face, face ];\n\t\t\tfaceIndex.set( fill, faceIndexSize * vertices * face );\n\n\t\t}\n\n\t\tconst planes = new BufferGeometry();\n\t\tplanes.setAttribute( 'position', new BufferAttribute( position, positionSize ) );\n\t\tplanes.setAttribute( 'uv', new BufferAttribute( uv, uvSize ) );\n\t\tplanes.setAttribute( 'faceIndex', new BufferAttribute( faceIndex, faceIndexSize ) );\n\t\tlodPlanes.push( planes );\n\n\t\tif ( lod > LOD_MIN ) {\n\n\t\t\tlod --;\n\n\t\t}\n\n\t}\n\n\treturn { lodPlanes, sizeLods, sigmas };\n\n}\n\nfunction _createRenderTarget( width, height, params ) {\n\n\tconst cubeUVRenderTarget = new WebGLRenderTarget( width, height, params );\n\tcubeUVRenderTarget.texture.mapping = CubeUVReflectionMapping;\n\tcubeUVRenderTarget.texture.name = 'PMREM.cubeUv';\n\tcubeUVRenderTarget.scissorTest = true;\n\treturn cubeUVRenderTarget;\n\n}\n\nfunction _setViewport( target, x, y, width, height ) {\n\n\ttarget.viewport.set( x, y, width, height );\n\ttarget.scissor.set( x, y, width, height );\n\n}\n\nfunction _getBlurShader( lodMax, width, height ) {\n\n\tconst weights = new Float32Array( MAX_SAMPLES );\n\tconst poleAxis = new Vector3( 0, 1, 0 );\n\tconst shaderMaterial = new ShaderMaterial( {\n\n\t\tname: 'SphericalGaussianBlur',\n\n\t\tdefines: {\n\t\t\t'n': MAX_SAMPLES,\n\t\t\t'CUBEUV_TEXEL_WIDTH': 1.0 / width,\n\t\t\t'CUBEUV_TEXEL_HEIGHT': 1.0 / height,\n\t\t\t'CUBEUV_MAX_MIP': `${lodMax}.0`,\n\t\t},\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'samples': { value: 1 },\n\t\t\t'weights': { value: weights },\n\t\t\t'latitudinal': { value: false },\n\t\t\t'dTheta': { value: 0 },\n\t\t\t'mipInt': { value: 0 },\n\t\t\t'poleAxis': { value: poleAxis }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n\treturn shaderMaterial;\n\n}\n\nfunction _getEquirectMaterial() {\n\n\treturn new ShaderMaterial( {\n\n\t\tname: 'EquirectangularToCubeUV',\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tgl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n}\n\nfunction _getCubemapMaterial() {\n\n\treturn new ShaderMaterial( {\n\n\t\tname: 'CubemapToCubeUV',\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'flipEnvMap': { value: - 1 }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tuniform float flipEnvMap;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n}\n\nfunction _getCommonVertexShader() {\n\n\treturn /* glsl */`\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t`;\n\n}\n\nfunction WebGLCubeUVMaps( renderer ) {\n\n\tlet cubeUVmaps = new WeakMap();\n\n\tlet pmremGenerator = null;\n\n\tfunction get( texture ) {\n\n\t\tif ( texture && texture.isTexture ) {\n\n\t\t\tconst mapping = texture.mapping;\n\n\t\t\tconst isEquirectMap = ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping );\n\t\t\tconst isCubeMap = ( mapping === CubeReflectionMapping || mapping === CubeRefractionMapping );\n\n\t\t\t// equirect/cube map to cubeUV conversion\n\n\t\t\tif ( isEquirectMap || isCubeMap ) {\n\n\t\t\t\tif ( texture.isRenderTargetTexture && texture.needsPMREMUpdate === true ) {\n\n\t\t\t\t\ttexture.needsPMREMUpdate = false;\n\n\t\t\t\t\tlet renderTarget = cubeUVmaps.get( texture );\n\n\t\t\t\t\tif ( pmremGenerator === null ) pmremGenerator = new PMREMGenerator( renderer );\n\n\t\t\t\t\trenderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular( texture, renderTarget ) : pmremGenerator.fromCubemap( texture, renderTarget );\n\t\t\t\t\tcubeUVmaps.set( texture, renderTarget );\n\n\t\t\t\t\treturn renderTarget.texture;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( cubeUVmaps.has( texture ) ) {\n\n\t\t\t\t\t\treturn cubeUVmaps.get( texture ).texture;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst image = texture.image;\n\n\t\t\t\t\t\tif ( ( isEquirectMap && image && image.height > 0 ) || ( isCubeMap && image && isCubeTextureComplete( image ) ) ) {\n\n\t\t\t\t\t\t\tif ( pmremGenerator === null ) pmremGenerator = new PMREMGenerator( renderer );\n\n\t\t\t\t\t\t\tconst renderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular( texture ) : pmremGenerator.fromCubemap( texture );\n\t\t\t\t\t\t\tcubeUVmaps.set( texture, renderTarget );\n\n\t\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\t\t\treturn renderTarget.texture;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\n\t\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction isCubeTextureComplete( image ) {\n\n\t\tlet count = 0;\n\t\tconst length = 6;\n\n\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\tif ( image[ i ] !== undefined ) count ++;\n\n\t\t}\n\n\t\treturn count === length;\n\n\n\t}\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tconst cubemapUV = cubeUVmaps.get( texture );\n\n\t\tif ( cubemapUV !== undefined ) {\n\n\t\t\tcubeUVmaps.delete( texture );\n\t\t\tcubemapUV.dispose();\n\n\t\t}\n\n\t}\n\n\tfunction dispose() {\n\n\t\tcubeUVmaps = new WeakMap();\n\n\t\tif ( pmremGenerator !== null ) {\n\n\t\t\tpmremGenerator.dispose();\n\t\t\tpmremGenerator = null;\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction WebGLExtensions( gl ) {\n\n\tconst extensions = {};\n\n\tfunction getExtension( name ) {\n\n\t\tif ( extensions[ name ] !== undefined ) {\n\n\t\t\treturn extensions[ name ];\n\n\t\t}\n\n\t\tlet extension;\n\n\t\tswitch ( name ) {\n\n\t\t\tcase 'WEBGL_depth_texture':\n\t\t\t\textension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'EXT_texture_filter_anisotropic':\n\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'WEBGL_compressed_texture_s3tc':\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\textension = gl.getExtension( name );\n\n\t\t}\n\n\t\textensions[ name ] = extension;\n\n\t\treturn extension;\n\n\t}\n\n\treturn {\n\n\t\thas: function ( name ) {\n\n\t\t\treturn getExtension( name ) !== null;\n\n\t\t},\n\n\t\tinit: function ( capabilities ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\tgetExtension( 'EXT_color_buffer_float' );\n\n\t\t\t} else {\n\n\t\t\t\tgetExtension( 'WEBGL_depth_texture' );\n\t\t\t\tgetExtension( 'OES_texture_float' );\n\t\t\t\tgetExtension( 'OES_texture_half_float' );\n\t\t\t\tgetExtension( 'OES_texture_half_float_linear' );\n\t\t\t\tgetExtension( 'OES_standard_derivatives' );\n\t\t\t\tgetExtension( 'OES_element_index_uint' );\n\t\t\t\tgetExtension( 'OES_vertex_array_object' );\n\t\t\t\tgetExtension( 'ANGLE_instanced_arrays' );\n\n\t\t\t}\n\n\t\t\tgetExtension( 'OES_texture_float_linear' );\n\t\t\tgetExtension( 'EXT_color_buffer_half_float' );\n\t\t\tgetExtension( 'WEBGL_multisampled_render_to_texture' );\n\n\t\t},\n\n\t\tget: function ( name ) {\n\n\t\t\tconst extension = getExtension( name );\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\n\n\t\t\t}\n\n\t\t\treturn extension;\n\n\t\t}\n\n\t};\n\n}\n\nfunction WebGLGeometries( gl, attributes, info, bindingStates ) {\n\n\tconst geometries = {};\n\tconst wireframeAttributes = new WeakMap();\n\n\tfunction onGeometryDispose( event ) {\n\n\t\tconst geometry = event.target;\n\n\t\tif ( geometry.index !== null ) {\n\n\t\t\tattributes.remove( geometry.index );\n\n\t\t}\n\n\t\tfor ( const name in geometry.attributes ) {\n\n\t\t\tattributes.remove( geometry.attributes[ name ] );\n\n\t\t}\n\n\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\n\n\t\tdelete geometries[ geometry.id ];\n\n\t\tconst attribute = wireframeAttributes.get( geometry );\n\n\t\tif ( attribute ) {\n\n\t\t\tattributes.remove( attribute );\n\t\t\twireframeAttributes.delete( geometry );\n\n\t\t}\n\n\t\tbindingStates.releaseStatesOfGeometry( geometry );\n\n\t\tif ( geometry.isInstancedBufferGeometry === true ) {\n\n\t\t\tdelete geometry._maxInstanceCount;\n\n\t\t}\n\n\t\t//\n\n\t\tinfo.memory.geometries --;\n\n\t}\n\n\tfunction get( object, geometry ) {\n\n\t\tif ( geometries[ geometry.id ] === true ) return geometry;\n\n\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\n\n\t\tgeometries[ geometry.id ] = true;\n\n\t\tinfo.memory.geometries ++;\n\n\t\treturn geometry;\n\n\t}\n\n\tfunction update( geometry ) {\n\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates.\n\n\t\tfor ( const name in geometryAttributes ) {\n\n\t\t\tattributes.update( geometryAttributes[ name ], 34962 );\n\n\t\t}\n\n\t\t// morph targets\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst array = morphAttributes[ name ];\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tattributes.update( array[ i ], 34962 );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction updateWireframeAttribute( geometry ) {\n\n\t\tconst indices = [];\n\n\t\tconst geometryIndex = geometry.index;\n\t\tconst geometryPosition = geometry.attributes.position;\n\t\tlet version = 0;\n\n\t\tif ( geometryIndex !== null ) {\n\n\t\t\tconst array = geometryIndex.array;\n\t\t\tversion = geometryIndex.version;\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\tconst a = array[ i + 0 ];\n\t\t\t\tconst b = array[ i + 1 ];\n\t\t\t\tconst c = array[ i + 2 ];\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst array = geometryPosition.array;\n\t\t\tversion = geometryPosition.version;\n\n\t\t\tfor ( let i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\n\n\t\t\t\tconst a = i + 0;\n\t\t\t\tconst b = i + 1;\n\t\t\t\tconst c = i + 2;\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst attribute = new ( arrayNeedsUint32( indices ) ? Uint32BufferAttribute : Uint16BufferAttribute )( indices, 1 );\n\t\tattribute.version = version;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates\n\n\t\t//\n\n\t\tconst previousAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( previousAttribute ) attributes.remove( previousAttribute );\n\n\t\t//\n\n\t\twireframeAttributes.set( geometry, attribute );\n\n\t}\n\n\tfunction getWireframeAttribute( geometry ) {\n\n\t\tconst currentAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( currentAttribute ) {\n\n\t\t\tconst geometryIndex = geometry.index;\n\n\t\t\tif ( geometryIndex !== null ) {\n\n\t\t\t\t// if the attribute is obsolete, create a new one\n\n\t\t\t\tif ( currentAttribute.version < geometryIndex.version ) {\n\n\t\t\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t}\n\n\t\treturn wireframeAttributes.get( geometry );\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tupdate: update,\n\n\t\tgetWireframeAttribute: getWireframeAttribute\n\n\t};\n\n}\n\nfunction WebGLIndexedBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tlet mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tlet type, bytesPerElement;\n\n\tfunction setIndex( value ) {\n\n\t\ttype = value.type;\n\t\tbytesPerElement = value.bytesPerElement;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawElements( mode, count, type, start * bytesPerElement );\n\n\t\tinfo.update( count, mode, 1 );\n\n\t}\n\n\tfunction renderInstances( start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tlet extension, methodName;\n\n\t\tif ( isWebGL2 ) {\n\n\t\t\textension = gl;\n\t\t\tmethodName = 'drawElementsInstanced';\n\n\t\t} else {\n\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\t\t\tmethodName = 'drawElementsInstancedANGLE';\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ methodName ]( mode, count, type, start * bytesPerElement, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.setIndex = setIndex;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\nfunction WebGLInfo( gl ) {\n\n\tconst memory = {\n\t\tgeometries: 0,\n\t\ttextures: 0\n\t};\n\n\tconst render = {\n\t\tframe: 0,\n\t\tcalls: 0,\n\t\ttriangles: 0,\n\t\tpoints: 0,\n\t\tlines: 0\n\t};\n\n\tfunction update( count, mode, instanceCount ) {\n\n\t\trender.calls ++;\n\n\t\tswitch ( mode ) {\n\n\t\t\tcase 4:\n\t\t\t\trender.triangles += instanceCount * ( count / 3 );\n\t\t\t\tbreak;\n\n\t\t\tcase 1:\n\t\t\t\trender.lines += instanceCount * ( count / 2 );\n\t\t\t\tbreak;\n\n\t\t\tcase 3:\n\t\t\t\trender.lines += instanceCount * ( count - 1 );\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\n\t\t\t\trender.lines += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tcase 0:\n\t\t\t\trender.points += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.error( 'THREE.WebGLInfo: Unknown draw mode:', mode );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\trender.frame ++;\n\t\trender.calls = 0;\n\t\trender.triangles = 0;\n\t\trender.points = 0;\n\t\trender.lines = 0;\n\n\t}\n\n\treturn {\n\t\tmemory: memory,\n\t\trender: render,\n\t\tprograms: null,\n\t\tautoReset: true,\n\t\treset: reset,\n\t\tupdate: update\n\t};\n\n}\n\nfunction numericalSort( a, b ) {\n\n\treturn a[ 0 ] - b[ 0 ];\n\n}\n\nfunction absNumericalSort( a, b ) {\n\n\treturn Math.abs( b[ 1 ] ) - Math.abs( a[ 1 ] );\n\n}\n\nfunction denormalize( morph, attribute ) {\n\n\tlet denominator = 1;\n\tconst array = attribute.isInterleavedBufferAttribute ? attribute.data.array : attribute.array;\n\n\tif ( array instanceof Int8Array ) denominator = 127;\n\telse if ( array instanceof Int16Array ) denominator = 32767;\n\telse if ( array instanceof Int32Array ) denominator = 2147483647;\n\telse console.error( 'THREE.WebGLMorphtargets: Unsupported morph attribute data type: ', array );\n\n\tmorph.divideScalar( denominator );\n\n}\n\nfunction WebGLMorphtargets( gl, capabilities, textures ) {\n\n\tconst influencesList = {};\n\tconst morphInfluences = new Float32Array( 8 );\n\tconst morphTextures = new WeakMap();\n\tconst morph = new Vector4();\n\n\tconst workInfluences = [];\n\n\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\tworkInfluences[ i ] = [ i, 0 ];\n\n\t}\n\n\tfunction update( object, geometry, material, program ) {\n\n\t\tconst objectInfluences = object.morphTargetInfluences;\n\n\t\tif ( capabilities.isWebGL2 === true ) {\n\n\t\t\t// instead of using attributes, the WebGL 2 code path encodes morph targets\n\t\t\t// into an array of data textures. Each layer represents a single morph target.\n\n\t\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\t\tlet entry = morphTextures.get( geometry );\n\n\t\t\tif ( entry === undefined || entry.count !== morphTargetsCount ) {\n\n\t\t\t\tif ( entry !== undefined ) entry.texture.dispose();\n\n\t\t\t\tconst hasMorphPosition = geometry.morphAttributes.position !== undefined;\n\t\t\t\tconst hasMorphNormals = geometry.morphAttributes.normal !== undefined;\n\t\t\t\tconst hasMorphColors = geometry.morphAttributes.color !== undefined;\n\n\t\t\t\tconst morphTargets = geometry.morphAttributes.position || [];\n\t\t\t\tconst morphNormals = geometry.morphAttributes.normal || [];\n\t\t\t\tconst morphColors = geometry.morphAttributes.color || [];\n\n\t\t\t\tlet vertexDataCount = 0;\n\n\t\t\t\tif ( hasMorphPosition === true ) vertexDataCount = 1;\n\t\t\t\tif ( hasMorphNormals === true ) vertexDataCount = 2;\n\t\t\t\tif ( hasMorphColors === true ) vertexDataCount = 3;\n\n\t\t\t\tlet width = geometry.attributes.position.count * vertexDataCount;\n\t\t\t\tlet height = 1;\n\n\t\t\t\tif ( width > capabilities.maxTextureSize ) {\n\n\t\t\t\t\theight = Math.ceil( width / capabilities.maxTextureSize );\n\t\t\t\t\twidth = capabilities.maxTextureSize;\n\n\t\t\t\t}\n\n\t\t\t\tconst buffer = new Float32Array( width * height * 4 * morphTargetsCount );\n\n\t\t\t\tconst texture = new DataArrayTexture( buffer, width, height, morphTargetsCount );\n\t\t\t\ttexture.type = FloatType;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t// fill buffer\n\n\t\t\t\tconst vertexDataStride = vertexDataCount * 4;\n\n\t\t\t\tfor ( let i = 0; i < morphTargetsCount; i ++ ) {\n\n\t\t\t\t\tconst morphTarget = morphTargets[ i ];\n\t\t\t\t\tconst morphNormal = morphNormals[ i ];\n\t\t\t\t\tconst morphColor = morphColors[ i ];\n\n\t\t\t\t\tconst offset = width * height * 4 * i;\n\n\t\t\t\t\tfor ( let j = 0; j < morphTarget.count; j ++ ) {\n\n\t\t\t\t\t\tconst stride = j * vertexDataStride;\n\n\t\t\t\t\t\tif ( hasMorphPosition === true ) {\n\n\t\t\t\t\t\t\tmorph.fromBufferAttribute( morphTarget, j );\n\n\t\t\t\t\t\t\tif ( morphTarget.normalized === true ) denormalize( morph, morphTarget );\n\n\t\t\t\t\t\t\tbuffer[ offset + stride + 0 ] = morph.x;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 1 ] = morph.y;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 2 ] = morph.z;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 3 ] = 0;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasMorphNormals === true ) {\n\n\t\t\t\t\t\t\tmorph.fromBufferAttribute( morphNormal, j );\n\n\t\t\t\t\t\t\tif ( morphNormal.normalized === true ) denormalize( morph, morphNormal );\n\n\t\t\t\t\t\t\tbuffer[ offset + stride + 4 ] = morph.x;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 5 ] = morph.y;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 6 ] = morph.z;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 7 ] = 0;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasMorphColors === true ) {\n\n\t\t\t\t\t\t\tmorph.fromBufferAttribute( morphColor, j );\n\n\t\t\t\t\t\t\tif ( morphColor.normalized === true ) denormalize( morph, morphColor );\n\n\t\t\t\t\t\t\tbuffer[ offset + stride + 8 ] = morph.x;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 9 ] = morph.y;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 10 ] = morph.z;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 11 ] = ( morphColor.itemSize === 4 ) ? morph.w : 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tentry = {\n\t\t\t\t\tcount: morphTargetsCount,\n\t\t\t\t\ttexture: texture,\n\t\t\t\t\tsize: new Vector2( width, height )\n\t\t\t\t};\n\n\t\t\t\tmorphTextures.set( geometry, entry );\n\n\t\t\t\tfunction disposeTexture() {\n\n\t\t\t\t\ttexture.dispose();\n\n\t\t\t\t\tmorphTextures.delete( geometry );\n\n\t\t\t\t\tgeometry.removeEventListener( 'dispose', disposeTexture );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.addEventListener( 'dispose', disposeTexture );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tlet morphInfluencesSum = 0;\n\n\t\t\tfor ( let i = 0; i < objectInfluences.length; i ++ ) {\n\n\t\t\t\tmorphInfluencesSum += objectInfluences[ i ];\n\n\t\t\t}\n\n\t\t\tconst morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetBaseInfluence', morphBaseInfluence );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', objectInfluences );\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetsTexture', entry.texture, textures );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetsTextureSize', entry.size );\n\n\n\t\t} else {\n\n\t\t\t// When object doesn't have morph target influences defined, we treat it as a 0-length array\n\t\t\t// This is important to make sure we set up morphTargetBaseInfluence / morphTargetInfluences\n\n\t\t\tconst length = objectInfluences === undefined ? 0 : objectInfluences.length;\n\n\t\t\tlet influences = influencesList[ geometry.id ];\n\n\t\t\tif ( influences === undefined || influences.length !== length ) {\n\n\t\t\t\t// initialise list\n\n\t\t\t\tinfluences = [];\n\n\t\t\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\t\t\tinfluences[ i ] = [ i, 0 ];\n\n\t\t\t\t}\n\n\t\t\t\tinfluencesList[ geometry.id ] = influences;\n\n\t\t\t}\n\n\t\t\t// Collect influences\n\n\t\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\t\tconst influence = influences[ i ];\n\n\t\t\t\tinfluence[ 0 ] = i;\n\t\t\t\tinfluence[ 1 ] = objectInfluences[ i ];\n\n\t\t\t}\n\n\t\t\tinfluences.sort( absNumericalSort );\n\n\t\t\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\t\t\tif ( i < length && influences[ i ][ 1 ] ) {\n\n\t\t\t\t\tworkInfluences[ i ][ 0 ] = influences[ i ][ 0 ];\n\t\t\t\t\tworkInfluences[ i ][ 1 ] = influences[ i ][ 1 ];\n\n\t\t\t\t} else {\n\n\t\t\t\t\tworkInfluences[ i ][ 0 ] = Number.MAX_SAFE_INTEGER;\n\t\t\t\t\tworkInfluences[ i ][ 1 ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tworkInfluences.sort( numericalSort );\n\n\t\t\tconst morphTargets = geometry.morphAttributes.position;\n\t\t\tconst morphNormals = geometry.morphAttributes.normal;\n\n\t\t\tlet morphInfluencesSum = 0;\n\n\t\t\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\t\t\tconst influence = workInfluences[ i ];\n\t\t\t\tconst index = influence[ 0 ];\n\t\t\t\tconst value = influence[ 1 ];\n\n\t\t\t\tif ( index !== Number.MAX_SAFE_INTEGER && value ) {\n\n\t\t\t\t\tif ( morphTargets && geometry.getAttribute( 'morphTarget' + i ) !== morphTargets[ index ] ) {\n\n\t\t\t\t\t\tgeometry.setAttribute( 'morphTarget' + i, morphTargets[ index ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( morphNormals && geometry.getAttribute( 'morphNormal' + i ) !== morphNormals[ index ] ) {\n\n\t\t\t\t\t\tgeometry.setAttribute( 'morphNormal' + i, morphNormals[ index ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmorphInfluences[ i ] = value;\n\t\t\t\t\tmorphInfluencesSum += value;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( morphTargets && geometry.hasAttribute( 'morphTarget' + i ) === true ) {\n\n\t\t\t\t\t\tgeometry.deleteAttribute( 'morphTarget' + i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( morphNormals && geometry.hasAttribute( 'morphNormal' + i ) === true ) {\n\n\t\t\t\t\t\tgeometry.deleteAttribute( 'morphNormal' + i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmorphInfluences[ i ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// GLSL shader uses formula baseinfluence * base + sum(target * influence)\n\t\t\t// This allows us to switch between absolute morphs and relative morphs without changing shader code\n\t\t\t// When baseinfluence = 1 - sum(influence), the above is equivalent to sum((target - base) * influence)\n\t\t\tconst morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetBaseInfluence', morphBaseInfluence );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', morphInfluences );\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tupdate: update\n\n\t};\n\n}\n\nfunction WebGLObjects( gl, geometries, attributes, info ) {\n\n\tlet updateMap = new WeakMap();\n\n\tfunction update( object ) {\n\n\t\tconst frame = info.render.frame;\n\n\t\tconst geometry = object.geometry;\n\t\tconst buffergeometry = geometries.get( object, geometry );\n\n\t\t// Update once per frame\n\n\t\tif ( updateMap.get( buffergeometry ) !== frame ) {\n\n\t\t\tgeometries.update( buffergeometry );\n\n\t\t\tupdateMap.set( buffergeometry, frame );\n\n\t\t}\n\n\t\tif ( object.isInstancedMesh ) {\n\n\t\t\tif ( object.hasEventListener( 'dispose', onInstancedMeshDispose ) === false ) {\n\n\t\t\t\tobject.addEventListener( 'dispose', onInstancedMeshDispose );\n\n\t\t\t}\n\n\t\t\tattributes.update( object.instanceMatrix, 34962 );\n\n\t\t\tif ( object.instanceColor !== null ) {\n\n\t\t\t\tattributes.update( object.instanceColor, 34962 );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn buffergeometry;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tupdateMap = new WeakMap();\n\n\t}\n\n\tfunction onInstancedMeshDispose( event ) {\n\n\t\tconst instancedMesh = event.target;\n\n\t\tinstancedMesh.removeEventListener( 'dispose', onInstancedMeshDispose );\n\n\t\tattributes.remove( instancedMesh.instanceMatrix );\n\n\t\tif ( instancedMesh.instanceColor !== null ) attributes.remove( instancedMesh.instanceColor );\n\n\t}\n\n\treturn {\n\n\t\tupdate: update,\n\t\tdispose: dispose\n\n\t};\n\n}\n\n/**\n * Uniforms of a program.\n * Those form a tree structure with a special top-level container for the root,\n * which you get by calling 'new WebGLUniforms( gl, program )'.\n *\n *\n * Properties of inner nodes including the top-level container:\n *\n * .seq - array of nested uniforms\n * .map - nested uniforms by name\n *\n *\n * Methods of all nodes except the top-level container:\n *\n * .setValue( gl, value, [textures] )\n *\n * \t\tuploads a uniform value(s)\n *  \tthe 'textures' parameter is needed for sampler uniforms\n *\n *\n * Static methods of the top-level container (textures factorizations):\n *\n * .upload( gl, seq, values, textures )\n *\n * \t\tsets uniforms in 'seq' to 'values[id].value'\n *\n * .seqWithValue( seq, values ) : filteredSeq\n *\n * \t\tfilters 'seq' entries with corresponding entry in values\n *\n *\n * Methods of the top-level container (textures factorizations):\n *\n * .setValue( gl, name, value, textures )\n *\n * \t\tsets uniform with  name 'name' to 'value'\n *\n * .setOptional( gl, obj, prop )\n *\n * \t\tlike .set for an optional property of the object\n *\n */\n\nconst emptyTexture = new Texture();\nconst emptyArrayTexture = new DataArrayTexture();\nconst empty3dTexture = new Data3DTexture();\nconst emptyCubeTexture = new CubeTexture();\n\n// --- Utilities ---\n\n// Array Caches (provide typed arrays for temporary by size)\n\nconst arrayCacheF32 = [];\nconst arrayCacheI32 = [];\n\n// Float32Array caches used for uploading Matrix uniforms\n\nconst mat4array = new Float32Array( 16 );\nconst mat3array = new Float32Array( 9 );\nconst mat2array = new Float32Array( 4 );\n\n// Flattening for arrays of vectors and matrices\n\nfunction flatten( array, nBlocks, blockSize ) {\n\n\tconst firstElem = array[ 0 ];\n\n\tif ( firstElem <= 0 || firstElem > 0 ) return array;\n\t// unoptimized: ! isNaN( firstElem )\n\t// see http://jacksondunstan.com/articles/983\n\n\tconst n = nBlocks * blockSize;\n\tlet r = arrayCacheF32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Float32Array( n );\n\t\tarrayCacheF32[ n ] = r;\n\n\t}\n\n\tif ( nBlocks !== 0 ) {\n\n\t\tfirstElem.toArray( r, 0 );\n\n\t\tfor ( let i = 1, offset = 0; i !== nBlocks; ++ i ) {\n\n\t\t\toffset += blockSize;\n\t\t\tarray[ i ].toArray( r, offset );\n\n\t\t}\n\n\t}\n\n\treturn r;\n\n}\n\nfunction arraysEqual( a, b ) {\n\n\tif ( a.length !== b.length ) return false;\n\n\tfor ( let i = 0, l = a.length; i < l; i ++ ) {\n\n\t\tif ( a[ i ] !== b[ i ] ) return false;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction copyArray( a, b ) {\n\n\tfor ( let i = 0, l = b.length; i < l; i ++ ) {\n\n\t\ta[ i ] = b[ i ];\n\n\t}\n\n}\n\n// Texture unit allocation\n\nfunction allocTexUnits( textures, n ) {\n\n\tlet r = arrayCacheI32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Int32Array( n );\n\t\tarrayCacheI32[ n ] = r;\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\tr[ i ] = textures.allocateTextureUnit();\n\n\t}\n\n\treturn r;\n\n}\n\n// --- Setters ---\n\n// Note: Defining these methods externally, because they come in a bunch\n// and this way their names minify.\n\n// Single scalar\n\nfunction setValueV1f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1f( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single float vector (from flat array or THREE.VectorN)\n\nfunction setValueV2f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2f( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3f( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else if ( v.r !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.r || cache[ 1 ] !== v.g || cache[ 2 ] !== v.b ) {\n\n\t\t\tgl.uniform3f( this.addr, v.r, v.g, v.b );\n\n\t\t\tcache[ 0 ] = v.r;\n\t\t\tcache[ 1 ] = v.g;\n\t\t\tcache[ 2 ] = v.b;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n// Single matrix (from flat array or THREE.MatrixN)\n\nfunction setValueM2( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix2fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat2array.set( elements );\n\n\t\tgl.uniformMatrix2fv( this.addr, false, mat2array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM3( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix3fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat3array.set( elements );\n\n\t\tgl.uniformMatrix3fv( this.addr, false, mat3array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM4( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix4fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat4array.set( elements );\n\n\t\tgl.uniformMatrix4fv( this.addr, false, mat4array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\n// Single integer / boolean\n\nfunction setValueV1i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1i( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single integer / boolean vector (from flat array)\n\nfunction setValueV2i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform2iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\nfunction setValueV3i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform3iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\nfunction setValueV4i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform4iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\n// Single unsigned integer\n\nfunction setValueV1ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1ui( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single unsigned integer vector (from flat array)\n\nfunction setValueV2ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform2uiv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\nfunction setValueV3ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform3uiv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\nfunction setValueV4ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform4uiv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\n\n// Single texture (2D / Cube)\n\nfunction setValueT1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture2D( v || emptyTexture, unit );\n\n}\n\nfunction setValueT3D1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture3D( v || empty3dTexture, unit );\n\n}\n\nfunction setValueT6( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTextureCube( v || emptyCubeTexture, unit );\n\n}\n\nfunction setValueT2DArray1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture2DArray( v || emptyArrayTexture, unit );\n\n}\n\n// Helper to pick the right setter for the singular case\n\nfunction getSingularSetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1f; // FLOAT\n\t\tcase 0x8b50: return setValueV2f; // _VEC2\n\t\tcase 0x8b51: return setValueV3f; // _VEC3\n\t\tcase 0x8b52: return setValueV4f; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2; // _MAT2\n\t\tcase 0x8b5b: return setValueM3; // _MAT3\n\t\tcase 0x8b5c: return setValueM4; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1i; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2i; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3i; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4i; // _VEC4\n\n\t\tcase 0x1405: return setValueV1ui; // UINT\n\t\tcase 0x8dc6: return setValueV2ui; // _VEC2\n\t\tcase 0x8dc7: return setValueV3ui; // _VEC3\n\t\tcase 0x8dc8: return setValueV4ui; // _VEC4\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1;\n\n\t\tcase 0x8b5f: // SAMPLER_3D\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\treturn setValueT3D1;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6;\n\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\treturn setValueT2DArray1;\n\n\t}\n\n}\n\n\n// Array of scalars\n\nfunction setValueV1fArray( gl, v ) {\n\n\tgl.uniform1fv( this.addr, v );\n\n}\n\n// Array of vectors (from flat array or array of THREE.VectorN)\n\nfunction setValueV2fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 2 );\n\n\tgl.uniform2fv( this.addr, data );\n\n}\n\nfunction setValueV3fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 3 );\n\n\tgl.uniform3fv( this.addr, data );\n\n}\n\nfunction setValueV4fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniform4fv( this.addr, data );\n\n}\n\n// Array of matrices (from flat array or array of THREE.MatrixN)\n\nfunction setValueM2Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniformMatrix2fv( this.addr, false, data );\n\n}\n\nfunction setValueM3Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 9 );\n\n\tgl.uniformMatrix3fv( this.addr, false, data );\n\n}\n\nfunction setValueM4Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 16 );\n\n\tgl.uniformMatrix4fv( this.addr, false, data );\n\n}\n\n// Array of integer / boolean\n\nfunction setValueV1iArray( gl, v ) {\n\n\tgl.uniform1iv( this.addr, v );\n\n}\n\n// Array of integer / boolean vectors (from flat array)\n\nfunction setValueV2iArray( gl, v ) {\n\n\tgl.uniform2iv( this.addr, v );\n\n}\n\nfunction setValueV3iArray( gl, v ) {\n\n\tgl.uniform3iv( this.addr, v );\n\n}\n\nfunction setValueV4iArray( gl, v ) {\n\n\tgl.uniform4iv( this.addr, v );\n\n}\n\n// Array of unsigned integer\n\nfunction setValueV1uiArray( gl, v ) {\n\n\tgl.uniform1uiv( this.addr, v );\n\n}\n\n// Array of unsigned integer vectors (from flat array)\n\nfunction setValueV2uiArray( gl, v ) {\n\n\tgl.uniform2uiv( this.addr, v );\n\n}\n\nfunction setValueV3uiArray( gl, v ) {\n\n\tgl.uniform3uiv( this.addr, v );\n\n}\n\nfunction setValueV4uiArray( gl, v ) {\n\n\tgl.uniform4uiv( this.addr, v );\n\n}\n\n\n// Array of textures (2D / 3D / Cube / 2DArray)\n\nfunction setValueT1Array( gl, v, textures ) {\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tgl.uniform1iv( this.addr, units );\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture2D( v[ i ] || emptyTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT3DArray( gl, v, textures ) {\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tgl.uniform1iv( this.addr, units );\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture3D( v[ i ] || empty3dTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT6Array( gl, v, textures ) {\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tgl.uniform1iv( this.addr, units );\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT2DArrayArray( gl, v, textures ) {\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tgl.uniform1iv( this.addr, units );\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture2DArray( v[ i ] || emptyArrayTexture, units[ i ] );\n\n\t}\n\n}\n\n\n// Helper to pick the right setter for a pure (bottom-level) array\n\nfunction getPureArraySetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1fArray; // FLOAT\n\t\tcase 0x8b50: return setValueV2fArray; // _VEC2\n\t\tcase 0x8b51: return setValueV3fArray; // _VEC3\n\t\tcase 0x8b52: return setValueV4fArray; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2Array; // _MAT2\n\t\tcase 0x8b5b: return setValueM3Array; // _MAT3\n\t\tcase 0x8b5c: return setValueM4Array; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1iArray; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2iArray; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3iArray; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4iArray; // _VEC4\n\n\t\tcase 0x1405: return setValueV1uiArray; // UINT\n\t\tcase 0x8dc6: return setValueV2uiArray; // _VEC2\n\t\tcase 0x8dc7: return setValueV3uiArray; // _VEC3\n\t\tcase 0x8dc8: return setValueV4uiArray; // _VEC4\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1Array;\n\n\t\tcase 0x8b5f: // SAMPLER_3D\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\treturn setValueT3DArray;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6Array;\n\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\treturn setValueT2DArrayArray;\n\n\t}\n\n}\n\n// --- Uniform Classes ---\n\nfunction SingleUniform( id, activeInfo, addr ) {\n\n\tthis.id = id;\n\tthis.addr = addr;\n\tthis.cache = [];\n\tthis.setValue = getSingularSetter( activeInfo.type );\n\n\t// this.path = activeInfo.name; // DEBUG\n\n}\n\nfunction PureArrayUniform( id, activeInfo, addr ) {\n\n\tthis.id = id;\n\tthis.addr = addr;\n\tthis.cache = [];\n\tthis.size = activeInfo.size;\n\tthis.setValue = getPureArraySetter( activeInfo.type );\n\n\t// this.path = activeInfo.name; // DEBUG\n\n}\n\nfunction StructuredUniform( id ) {\n\n\tthis.id = id;\n\n\tthis.seq = [];\n\tthis.map = {};\n\n}\n\nStructuredUniform.prototype.setValue = function ( gl, value, textures ) {\n\n\tconst seq = this.seq;\n\n\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tconst u = seq[ i ];\n\t\tu.setValue( gl, value[ u.id ], textures );\n\n\t}\n\n};\n\n// --- Top-level ---\n\n// Parser - builds up the property tree from the path strings\n\nconst RePathPart = /(\\w+)(\\])?(\\[|\\.)?/g;\n\n// extracts\n// \t- the identifier (member name or array index)\n//  - followed by an optional right bracket (found when array index)\n//  - followed by an optional left bracket or dot (type of subscript)\n//\n// Note: These portions can be read in a non-overlapping fashion and\n// allow straightforward parsing of the hierarchy that WebGL encodes\n// in the uniform names.\n\nfunction addUniform( container, uniformObject ) {\n\n\tcontainer.seq.push( uniformObject );\n\tcontainer.map[ uniformObject.id ] = uniformObject;\n\n}\n\nfunction parseUniform( activeInfo, addr, container ) {\n\n\tconst path = activeInfo.name,\n\t\tpathLength = path.length;\n\n\t// reset RegExp object, because of the early exit of a previous run\n\tRePathPart.lastIndex = 0;\n\n\twhile ( true ) {\n\n\t\tconst match = RePathPart.exec( path ),\n\t\t\tmatchEnd = RePathPart.lastIndex;\n\n\t\tlet id = match[ 1 ];\n\t\tconst idIsIndex = match[ 2 ] === ']',\n\t\t\tsubscript = match[ 3 ];\n\n\t\tif ( idIsIndex ) id = id | 0; // convert to integer\n\n\t\tif ( subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength ) {\n\n\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\n\n\t\t\taddUniform( container, subscript === undefined ?\n\t\t\t\tnew SingleUniform( id, activeInfo, addr ) :\n\t\t\t\tnew PureArrayUniform( id, activeInfo, addr ) );\n\n\t\t\tbreak;\n\n\t\t} else {\n\n\t\t\t// step into inner node / create it in case it doesn't exist\n\n\t\t\tconst map = container.map;\n\t\t\tlet next = map[ id ];\n\n\t\t\tif ( next === undefined ) {\n\n\t\t\t\tnext = new StructuredUniform( id );\n\t\t\t\taddUniform( container, next );\n\n\t\t\t}\n\n\t\t\tcontainer = next;\n\n\t\t}\n\n\t}\n\n}\n\n// Root Container\n\nfunction WebGLUniforms( gl, program ) {\n\n\tthis.seq = [];\n\tthis.map = {};\n\n\tconst n = gl.getProgramParameter( program, 35718 );\n\n\tfor ( let i = 0; i < n; ++ i ) {\n\n\t\tconst info = gl.getActiveUniform( program, i ),\n\t\t\taddr = gl.getUniformLocation( program, info.name );\n\n\t\tparseUniform( info, addr, this );\n\n\t}\n\n}\n\nWebGLUniforms.prototype.setValue = function ( gl, name, value, textures ) {\n\n\tconst u = this.map[ name ];\n\n\tif ( u !== undefined ) u.setValue( gl, value, textures );\n\n};\n\nWebGLUniforms.prototype.setOptional = function ( gl, object, name ) {\n\n\tconst v = object[ name ];\n\n\tif ( v !== undefined ) this.setValue( gl, name, v );\n\n};\n\n\n// Static interface\n\nWebGLUniforms.upload = function ( gl, seq, values, textures ) {\n\n\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tconst u = seq[ i ],\n\t\t\tv = values[ u.id ];\n\n\t\tif ( v.needsUpdate !== false ) {\n\n\t\t\t// note: always updating when .needsUpdate is undefined\n\t\t\tu.setValue( gl, v.value, textures );\n\n\t\t}\n\n\t}\n\n};\n\nWebGLUniforms.seqWithValue = function ( seq, values ) {\n\n\tconst r = [];\n\n\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tconst u = seq[ i ];\n\t\tif ( u.id in values ) r.push( u );\n\n\t}\n\n\treturn r;\n\n};\n\nfunction WebGLShader( gl, type, string ) {\n\n\tconst shader = gl.createShader( type );\n\n\tgl.shaderSource( shader, string );\n\tgl.compileShader( shader );\n\n\treturn shader;\n\n}\n\nlet programIdCount = 0;\n\nfunction handleSource( string, errorLine ) {\n\n\tconst lines = string.split( '\\n' );\n\tconst lines2 = [];\n\n\tconst from = Math.max( errorLine - 6, 0 );\n\tconst to = Math.min( errorLine + 6, lines.length );\n\n\tfor ( let i = from; i < to; i ++ ) {\n\n\t\tlines2.push( ( i + 1 ) + ': ' + lines[ i ] );\n\n\t}\n\n\treturn lines2.join( '\\n' );\n\n}\n\nfunction getEncodingComponents( encoding ) {\n\n\tswitch ( encoding ) {\n\n\t\tcase LinearEncoding:\n\t\t\treturn [ 'Linear', '( value )' ];\n\t\tcase sRGBEncoding:\n\t\t\treturn [ 'sRGB', '( value )' ];\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported encoding:', encoding );\n\t\t\treturn [ 'Linear', '( value )' ];\n\n\t}\n\n}\n\nfunction getShaderErrors( gl, shader, type ) {\n\n\tconst status = gl.getShaderParameter( shader, 35713 );\n\tconst errors = gl.getShaderInfoLog( shader ).trim();\n\n\tif ( status && errors === '' ) return '';\n\n\tconst errorMatches = /ERROR: 0:(\\d+)/.exec( errors );\n\tif ( errorMatches ) {\n\n\t\t// --enable-privileged-webgl-extension\n\t\t// console.log( '**' + type + '**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\t\tconst errorLine = parseInt( errorMatches[ 0 ] );\n\t\treturn type.toUpperCase() + '\\n\\n' + errors + '\\n\\n' + handleSource( gl.getShaderSource( shader ), errorLine );\n\n\t} else {\n\n\t\treturn errors;\n\n\t}\n\n}\n\nfunction getTexelEncodingFunction( functionName, encoding ) {\n\n\tconst components = getEncodingComponents( encoding );\n\treturn 'vec4 ' + functionName + '( vec4 value ) { return LinearTo' + components[ 0 ] + components[ 1 ] + '; }';\n\n}\n\nfunction getToneMappingFunction( functionName, toneMapping ) {\n\n\tlet toneMappingName;\n\n\tswitch ( toneMapping ) {\n\n\t\tcase LinearToneMapping:\n\t\t\ttoneMappingName = 'Linear';\n\t\t\tbreak;\n\n\t\tcase ReinhardToneMapping:\n\t\t\ttoneMappingName = 'Reinhard';\n\t\t\tbreak;\n\n\t\tcase CineonToneMapping:\n\t\t\ttoneMappingName = 'OptimizedCineon';\n\t\t\tbreak;\n\n\t\tcase ACESFilmicToneMapping:\n\t\t\ttoneMappingName = 'ACESFilmic';\n\t\t\tbreak;\n\n\t\tcase CustomToneMapping:\n\t\t\ttoneMappingName = 'Custom';\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported toneMapping:', toneMapping );\n\t\t\ttoneMappingName = 'Linear';\n\n\t}\n\n\treturn 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\n\n}\n\nfunction generateExtensions( parameters ) {\n\n\tconst chunks = [\n\t\t( parameters.extensionDerivatives || !! parameters.envMapCubeUVHeight || parameters.bumpMap || parameters.tangentSpaceNormalMap || parameters.clearcoatNormalMap || parameters.flatShading || parameters.shaderID === 'physical' ) ? '#extension GL_OES_standard_derivatives : enable' : '',\n\t\t( parameters.extensionFragDepth || parameters.logarithmicDepthBuffer ) && parameters.rendererExtensionFragDepth ? '#extension GL_EXT_frag_depth : enable' : '',\n\t\t( parameters.extensionDrawBuffers && parameters.rendererExtensionDrawBuffers ) ? '#extension GL_EXT_draw_buffers : require' : '',\n\t\t( parameters.extensionShaderTextureLOD || parameters.envMap || parameters.transmission ) && parameters.rendererExtensionShaderTextureLod ? '#extension GL_EXT_shader_texture_lod : enable' : ''\n\t];\n\n\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\n\n}\n\nfunction generateDefines( defines ) {\n\n\tconst chunks = [];\n\n\tfor ( const name in defines ) {\n\n\t\tconst value = defines[ name ];\n\n\t\tif ( value === false ) continue;\n\n\t\tchunks.push( '#define ' + name + ' ' + value );\n\n\t}\n\n\treturn chunks.join( '\\n' );\n\n}\n\nfunction fetchAttributeLocations( gl, program ) {\n\n\tconst attributes = {};\n\n\tconst n = gl.getProgramParameter( program, 35721 );\n\n\tfor ( let i = 0; i < n; i ++ ) {\n\n\t\tconst info = gl.getActiveAttrib( program, i );\n\t\tconst name = info.name;\n\n\t\tlet locationSize = 1;\n\t\tif ( info.type === 35674 ) locationSize = 2;\n\t\tif ( info.type === 35675 ) locationSize = 3;\n\t\tif ( info.type === 35676 ) locationSize = 4;\n\n\t\t// console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\n\n\t\tattributes[ name ] = {\n\t\t\ttype: info.type,\n\t\t\tlocation: gl.getAttribLocation( program, name ),\n\t\t\tlocationSize: locationSize\n\t\t};\n\n\t}\n\n\treturn attributes;\n\n}\n\nfunction filterEmptyLine( string ) {\n\n\treturn string !== '';\n\n}\n\nfunction replaceLightNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\n\t\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\n\t\t.replace( /NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights )\n\t\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\n\t\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights )\n\t\t.replace( /NUM_DIR_LIGHT_SHADOWS/g, parameters.numDirLightShadows )\n\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS/g, parameters.numSpotLightShadows )\n\t\t.replace( /NUM_POINT_LIGHT_SHADOWS/g, parameters.numPointLightShadows );\n\n}\n\nfunction replaceClippingPlaneNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes )\n\t\t.replace( /UNION_CLIPPING_PLANES/g, ( parameters.numClippingPlanes - parameters.numClipIntersection ) );\n\n}\n\n// Resolve Includes\n\nconst includePattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\n\nfunction resolveIncludes( string ) {\n\n\treturn string.replace( includePattern, includeReplacer );\n\n}\n\nfunction includeReplacer( match, include ) {\n\n\tconst string = ShaderChunk[ include ];\n\n\tif ( string === undefined ) {\n\n\t\tthrow new Error( 'Can not resolve #include <' + include + '>' );\n\n\t}\n\n\treturn resolveIncludes( string );\n\n}\n\n// Unroll Loops\n\nconst deprecatedUnrollLoopPattern = /#pragma unroll_loop[\\s]+?for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g;\nconst unrollLoopPattern = /#pragma unroll_loop_start\\s+for\\s*\\(\\s*int\\s+i\\s*=\\s*(\\d+)\\s*;\\s*i\\s*<\\s*(\\d+)\\s*;\\s*i\\s*\\+\\+\\s*\\)\\s*{([\\s\\S]+?)}\\s+#pragma unroll_loop_end/g;\n\nfunction unrollLoops( string ) {\n\n\treturn string\n\t\t.replace( unrollLoopPattern, loopReplacer )\n\t\t.replace( deprecatedUnrollLoopPattern, deprecatedLoopReplacer );\n\n}\n\nfunction deprecatedLoopReplacer( match, start, end, snippet ) {\n\n\tconsole.warn( 'WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead.' );\n\treturn loopReplacer( match, start, end, snippet );\n\n}\n\nfunction loopReplacer( match, start, end, snippet ) {\n\n\tlet string = '';\n\n\tfor ( let i = parseInt( start ); i < parseInt( end ); i ++ ) {\n\n\t\tstring += snippet\n\t\t\t.replace( /\\[\\s*i\\s*\\]/g, '[ ' + i + ' ]' )\n\t\t\t.replace( /UNROLLED_LOOP_INDEX/g, i );\n\n\t}\n\n\treturn string;\n\n}\n\n//\n\nfunction generatePrecision( parameters ) {\n\n\tlet precisionstring = 'precision ' + parameters.precision + ' float;\\nprecision ' + parameters.precision + ' int;';\n\n\tif ( parameters.precision === 'highp' ) {\n\n\t\tprecisionstring += '\\n#define HIGH_PRECISION';\n\n\t} else if ( parameters.precision === 'mediump' ) {\n\n\t\tprecisionstring += '\\n#define MEDIUM_PRECISION';\n\n\t} else if ( parameters.precision === 'lowp' ) {\n\n\t\tprecisionstring += '\\n#define LOW_PRECISION';\n\n\t}\n\n\treturn precisionstring;\n\n}\n\nfunction generateShadowMapTypeDefine( parameters ) {\n\n\tlet shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n\tif ( parameters.shadowMapType === PCFShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n\n\t} else if ( parameters.shadowMapType === PCFSoftShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n\n\t} else if ( parameters.shadowMapType === VSMShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_VSM';\n\n\t}\n\n\treturn shadowMapTypeDefine;\n\n}\n\nfunction generateEnvMapTypeDefine( parameters ) {\n\n\tlet envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeReflectionMapping:\n\t\t\tcase CubeRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\t\t\tbreak;\n\n\t\t\tcase CubeUVReflectionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapTypeDefine;\n\n}\n\nfunction generateEnvMapModeDefine( parameters ) {\n\n\tlet envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeRefractionMapping:\n\n\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapModeDefine;\n\n}\n\nfunction generateEnvMapBlendingDefine( parameters ) {\n\n\tlet envMapBlendingDefine = 'ENVMAP_BLENDING_NONE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.combine ) {\n\n\t\t\tcase MultiplyOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\t\t\t\tbreak;\n\n\t\t\tcase MixOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n\t\t\t\tbreak;\n\n\t\t\tcase AddOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapBlendingDefine;\n\n}\n\nfunction generateCubeUVSize( parameters ) {\n\n\tconst imageHeight = parameters.envMapCubeUVHeight;\n\n\tif ( imageHeight === null ) return null;\n\n\tconst maxMip = Math.log2( imageHeight ) - 2;\n\n\tconst texelHeight = 1.0 / imageHeight;\n\n\tconst texelWidth = 1.0 / ( 3 * Math.max( Math.pow( 2, maxMip ), 7 * 16 ) );\n\n\treturn { texelWidth, texelHeight, maxMip };\n\n}\n\nfunction WebGLProgram( renderer, cacheKey, parameters, bindingStates ) {\n\n\t// TODO Send this event to Three.js DevTools\n\t// console.log( 'WebGLProgram', cacheKey );\n\n\tconst gl = renderer.getContext();\n\n\tconst defines = parameters.defines;\n\n\tlet vertexShader = parameters.vertexShader;\n\tlet fragmentShader = parameters.fragmentShader;\n\n\tconst shadowMapTypeDefine = generateShadowMapTypeDefine( parameters );\n\tconst envMapTypeDefine = generateEnvMapTypeDefine( parameters );\n\tconst envMapModeDefine = generateEnvMapModeDefine( parameters );\n\tconst envMapBlendingDefine = generateEnvMapBlendingDefine( parameters );\n\tconst envMapCubeUVSize = generateCubeUVSize( parameters );\n\n\tconst customExtensions = parameters.isWebGL2 ? '' : generateExtensions( parameters );\n\n\tconst customDefines = generateDefines( defines );\n\n\tconst program = gl.createProgram();\n\n\tlet prefixVertex, prefixFragment;\n\tlet versionString = parameters.glslVersion ? '#version ' + parameters.glslVersion + '\\n' : '';\n\n\tif ( parameters.isRawShaderMaterial ) {\n\n\t\tprefixVertex = [\n\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixVertex.length > 0 ) {\n\n\t\t\tprefixVertex += '\\n';\n\n\t\t}\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixFragment.length > 0 ) {\n\n\t\t\tprefixFragment += '\\n';\n\n\t\t}\n\n\t} else {\n\n\t\tprefixVertex = [\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.instancing ? '#define USE_INSTANCING' : '',\n\t\t\tparameters.instancingColor ? '#define USE_INSTANCING_COLOR' : '',\n\n\t\t\tparameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',\n\n\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t( parameters.useFog && parameters.fogExp2 ) ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.tangentSpaceNormalMap ) ? '#define TANGENTSPACE_NORMALMAP' : '',\n\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\n\t\t\tparameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '',\n\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.specularIntensityMap ? '#define USE_SPECULARINTENSITYMAP' : '',\n\t\t\tparameters.specularColorMap ? '#define USE_SPECULARCOLORMAP' : '',\n\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\n\t\t\tparameters.transmission ? '#define USE_TRANSMISSION' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\t\t\tparameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\n\n\t\t\tparameters.sheenColorMap ? '#define USE_SHEENCOLORMAP' : '',\n\t\t\tparameters.sheenRoughnessMap ? '#define USE_SHEENROUGHNESSMAP' : '',\n\n\t\t\tparameters.vertexTangents ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\n\t\t\tparameters.vertexUvs ? '#define USE_UV' : '',\n\t\t\tparameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\n\n\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\n\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\n\t\t\t( parameters.morphColors && parameters.isWebGL2 ) ? '#define USE_MORPHCOLORS' : '',\n\t\t\t( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_TEXTURE' : '',\n\t\t\t( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_TEXTURE_STRIDE ' + parameters.morphTextureStride : '',\n\t\t\t( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_COUNT ' + parameters.morphTargetsCount : '',\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t'uniform mat4 modelMatrix;',\n\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform mat3 normalMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t'#ifdef USE_INSTANCING',\n\n\t\t\t'\tattribute mat4 instanceMatrix;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_INSTANCING_COLOR',\n\n\t\t\t'\tattribute vec3 instanceColor;',\n\n\t\t\t'#endif',\n\n\t\t\t'attribute vec3 position;',\n\t\t\t'attribute vec3 normal;',\n\t\t\t'attribute vec2 uv;',\n\n\t\t\t'#ifdef USE_TANGENT',\n\n\t\t\t'\tattribute vec4 tangent;',\n\n\t\t\t'#endif',\n\n\t\t\t'#if defined( USE_COLOR_ALPHA )',\n\n\t\t\t'\tattribute vec4 color;',\n\n\t\t\t'#elif defined( USE_COLOR )',\n\n\t\t\t'\tattribute vec3 color;',\n\n\t\t\t'#endif',\n\n\t\t\t'#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )',\n\n\t\t\t'\tattribute vec3 morphTarget0;',\n\t\t\t'\tattribute vec3 morphTarget1;',\n\t\t\t'\tattribute vec3 morphTarget2;',\n\t\t\t'\tattribute vec3 morphTarget3;',\n\n\t\t\t'\t#ifdef USE_MORPHNORMALS',\n\n\t\t\t'\t\tattribute vec3 morphNormal0;',\n\t\t\t'\t\tattribute vec3 morphNormal1;',\n\t\t\t'\t\tattribute vec3 morphNormal2;',\n\t\t\t'\t\tattribute vec3 morphNormal3;',\n\n\t\t\t'\t#else',\n\n\t\t\t'\t\tattribute vec3 morphTarget4;',\n\t\t\t'\t\tattribute vec3 morphTarget5;',\n\t\t\t'\t\tattribute vec3 morphTarget6;',\n\t\t\t'\t\tattribute vec3 morphTarget7;',\n\n\t\t\t'\t#endif',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_SKINNING',\n\n\t\t\t'\tattribute vec4 skinIndex;',\n\t\t\t'\tattribute vec4 skinWeight;',\n\n\t\t\t'#endif',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t( parameters.useFog && parameters.fogExp2 ) ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.matcap ? '#define USE_MATCAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_TEXEL_WIDTH ' + envMapCubeUVSize.texelWidth : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_TEXEL_HEIGHT ' + envMapCubeUVSize.texelHeight : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_MAX_MIP ' + envMapCubeUVSize.maxMip + '.0' : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.tangentSpaceNormalMap ) ? '#define TANGENTSPACE_NORMALMAP' : '',\n\n\t\t\tparameters.clearcoat ? '#define USE_CLEARCOAT' : '',\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.specularIntensityMap ? '#define USE_SPECULARINTENSITYMAP' : '',\n\t\t\tparameters.specularColorMap ? '#define USE_SPECULARCOLORMAP' : '',\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.alphaTest ? '#define USE_ALPHATEST' : '',\n\n\t\t\tparameters.sheen ? '#define USE_SHEEN' : '',\n\t\t\tparameters.sheenColorMap ? '#define USE_SHEENCOLORMAP' : '',\n\t\t\tparameters.sheenRoughnessMap ? '#define USE_SHEENROUGHNESSMAP' : '',\n\n\t\t\tparameters.transmission ? '#define USE_TRANSMISSION' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\t\t\tparameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\n\n\t\t\tparameters.decodeVideoTexture ? '#define DECODE_VIDEO_TEXTURE' : '',\n\n\t\t\tparameters.vertexTangents ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors || parameters.instancingColor ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\n\t\t\tparameters.vertexUvs ? '#define USE_UV' : '',\n\t\t\tparameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '',\n\n\t\t\tparameters.gradientMap ? '#define USE_GRADIENTMAP' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '',\n\n\t\t\tparameters.physicallyCorrectLights ? '#define PHYSICALLY_CORRECT_LIGHTS' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? '#define TONE_MAPPING' : '',\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '', // this code is required here because it is used by the toneMapping() function defined below\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( 'toneMapping', parameters.toneMapping ) : '',\n\n\t\t\tparameters.dithering ? '#define DITHERING' : '',\n\t\t\tparameters.opaque ? '#define OPAQUE' : '',\n\n\t\t\tShaderChunk[ 'encodings_pars_fragment' ], // this code is required here because it is used by the various encoding/decoding function defined below\n\t\t\tgetTexelEncodingFunction( 'linearToOutputTexel', parameters.outputEncoding ),\n\n\t\t\tparameters.useDepthPacking ? '#define DEPTH_PACKING ' + parameters.depthPacking : '',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t}\n\n\tvertexShader = resolveIncludes( vertexShader );\n\tvertexShader = replaceLightNums( vertexShader, parameters );\n\tvertexShader = replaceClippingPlaneNums( vertexShader, parameters );\n\n\tfragmentShader = resolveIncludes( fragmentShader );\n\tfragmentShader = replaceLightNums( fragmentShader, parameters );\n\tfragmentShader = replaceClippingPlaneNums( fragmentShader, parameters );\n\n\tvertexShader = unrollLoops( vertexShader );\n\tfragmentShader = unrollLoops( fragmentShader );\n\n\tif ( parameters.isWebGL2 && parameters.isRawShaderMaterial !== true ) {\n\n\t\t// GLSL 3.0 conversion for built-in materials and ShaderMaterial\n\n\t\tversionString = '#version 300 es\\n';\n\n\t\tprefixVertex = [\n\t\t\t'precision mediump sampler2DArray;',\n\t\t\t'#define attribute in',\n\t\t\t'#define varying out',\n\t\t\t'#define texture2D texture'\n\t\t].join( '\\n' ) + '\\n' + prefixVertex;\n\n\t\tprefixFragment = [\n\t\t\t'#define varying in',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : 'layout(location = 0) out highp vec4 pc_fragColor;',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : '#define gl_FragColor pc_fragColor',\n\t\t\t'#define gl_FragDepthEXT gl_FragDepth',\n\t\t\t'#define texture2D texture',\n\t\t\t'#define textureCube texture',\n\t\t\t'#define texture2DProj textureProj',\n\t\t\t'#define texture2DLodEXT textureLod',\n\t\t\t'#define texture2DProjLodEXT textureProjLod',\n\t\t\t'#define textureCubeLodEXT textureLod',\n\t\t\t'#define texture2DGradEXT textureGrad',\n\t\t\t'#define texture2DProjGradEXT textureProjGrad',\n\t\t\t'#define textureCubeGradEXT textureGrad'\n\t\t].join( '\\n' ) + '\\n' + prefixFragment;\n\n\t}\n\n\tconst vertexGlsl = versionString + prefixVertex + vertexShader;\n\tconst fragmentGlsl = versionString + prefixFragment + fragmentShader;\n\n\t// console.log( '*VERTEX*', vertexGlsl );\n\t// console.log( '*FRAGMENT*', fragmentGlsl );\n\n\tconst glVertexShader = WebGLShader( gl, 35633, vertexGlsl );\n\tconst glFragmentShader = WebGLShader( gl, 35632, fragmentGlsl );\n\n\tgl.attachShader( program, glVertexShader );\n\tgl.attachShader( program, glFragmentShader );\n\n\t// Force a particular attribute to index 0.\n\n\tif ( parameters.index0AttributeName !== undefined ) {\n\n\t\tgl.bindAttribLocation( program, 0, parameters.index0AttributeName );\n\n\t} else if ( parameters.morphTargets === true ) {\n\n\t\t// programs with morphTargets displace position out of attribute 0\n\t\tgl.bindAttribLocation( program, 0, 'position' );\n\n\t}\n\n\tgl.linkProgram( program );\n\n\t// check for link errors\n\tif ( renderer.debug.checkShaderErrors ) {\n\n\t\tconst programLog = gl.getProgramInfoLog( program ).trim();\n\t\tconst vertexLog = gl.getShaderInfoLog( glVertexShader ).trim();\n\t\tconst fragmentLog = gl.getShaderInfoLog( glFragmentShader ).trim();\n\n\t\tlet runnable = true;\n\t\tlet haveDiagnostics = true;\n\n\t\tif ( gl.getProgramParameter( program, 35714 ) === false ) {\n\n\t\t\trunnable = false;\n\n\t\t\tconst vertexErrors = getShaderErrors( gl, glVertexShader, 'vertex' );\n\t\t\tconst fragmentErrors = getShaderErrors( gl, glFragmentShader, 'fragment' );\n\n\t\t\tconsole.error(\n\t\t\t\t'THREE.WebGLProgram: Shader Error ' + gl.getError() + ' - ' +\n\t\t\t\t'VALIDATE_STATUS ' + gl.getProgramParameter( program, 35715 ) + '\\n\\n' +\n\t\t\t\t'Program Info Log: ' + programLog + '\\n' +\n\t\t\t\tvertexErrors + '\\n' +\n\t\t\t\tfragmentErrors\n\t\t\t);\n\n\t\t} else if ( programLog !== '' ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Program Info Log:', programLog );\n\n\t\t} else if ( vertexLog === '' || fragmentLog === '' ) {\n\n\t\t\thaveDiagnostics = false;\n\n\t\t}\n\n\t\tif ( haveDiagnostics ) {\n\n\t\t\tthis.diagnostics = {\n\n\t\t\t\trunnable: runnable,\n\n\t\t\t\tprogramLog: programLog,\n\n\t\t\t\tvertexShader: {\n\n\t\t\t\t\tlog: vertexLog,\n\t\t\t\t\tprefix: prefixVertex\n\n\t\t\t\t},\n\n\t\t\t\tfragmentShader: {\n\n\t\t\t\t\tlog: fragmentLog,\n\t\t\t\t\tprefix: prefixFragment\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n\n\t}\n\n\t// Clean up\n\n\t// Crashes in iOS9 and iOS10. #18402\n\t// gl.detachShader( program, glVertexShader );\n\t// gl.detachShader( program, glFragmentShader );\n\n\tgl.deleteShader( glVertexShader );\n\tgl.deleteShader( glFragmentShader );\n\n\t// set up caching for uniform locations\n\n\tlet cachedUniforms;\n\n\tthis.getUniforms = function () {\n\n\t\tif ( cachedUniforms === undefined ) {\n\n\t\t\tcachedUniforms = new WebGLUniforms( gl, program );\n\n\t\t}\n\n\t\treturn cachedUniforms;\n\n\t};\n\n\t// set up caching for attribute locations\n\n\tlet cachedAttributes;\n\n\tthis.getAttributes = function () {\n\n\t\tif ( cachedAttributes === undefined ) {\n\n\t\t\tcachedAttributes = fetchAttributeLocations( gl, program );\n\n\t\t}\n\n\t\treturn cachedAttributes;\n\n\t};\n\n\t// free resource\n\n\tthis.destroy = function () {\n\n\t\tbindingStates.releaseStatesOfProgram( this );\n\n\t\tgl.deleteProgram( program );\n\t\tthis.program = undefined;\n\n\t};\n\n\t//\n\n\tthis.name = parameters.shaderName;\n\tthis.id = programIdCount ++;\n\tthis.cacheKey = cacheKey;\n\tthis.usedTimes = 1;\n\tthis.program = program;\n\tthis.vertexShader = glVertexShader;\n\tthis.fragmentShader = glFragmentShader;\n\n\treturn this;\n\n}\n\nlet _id = 0;\n\nclass WebGLShaderCache {\n\n\tconstructor() {\n\n\t\tthis.shaderCache = new Map();\n\t\tthis.materialCache = new Map();\n\n\t}\n\n\tupdate( material ) {\n\n\t\tconst vertexShader = material.vertexShader;\n\t\tconst fragmentShader = material.fragmentShader;\n\n\t\tconst vertexShaderStage = this._getShaderStage( vertexShader );\n\t\tconst fragmentShaderStage = this._getShaderStage( fragmentShader );\n\n\t\tconst materialShaders = this._getShaderCacheForMaterial( material );\n\n\t\tif ( materialShaders.has( vertexShaderStage ) === false ) {\n\n\t\t\tmaterialShaders.add( vertexShaderStage );\n\t\t\tvertexShaderStage.usedTimes ++;\n\n\t\t}\n\n\t\tif ( materialShaders.has( fragmentShaderStage ) === false ) {\n\n\t\t\tmaterialShaders.add( fragmentShaderStage );\n\t\t\tfragmentShaderStage.usedTimes ++;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremove( material ) {\n\n\t\tconst materialShaders = this.materialCache.get( material );\n\n\t\tfor ( const shaderStage of materialShaders ) {\n\n\t\t\tshaderStage.usedTimes --;\n\n\t\t\tif ( shaderStage.usedTimes === 0 ) this.shaderCache.delete( shaderStage.code );\n\n\t\t}\n\n\t\tthis.materialCache.delete( material );\n\n\t\treturn this;\n\n\t}\n\n\tgetVertexShaderID( material ) {\n\n\t\treturn this._getShaderStage( material.vertexShader ).id;\n\n\t}\n\n\tgetFragmentShaderID( material ) {\n\n\t\treturn this._getShaderStage( material.fragmentShader ).id;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shaderCache.clear();\n\t\tthis.materialCache.clear();\n\n\t}\n\n\t_getShaderCacheForMaterial( material ) {\n\n\t\tconst cache = this.materialCache;\n\n\t\tif ( cache.has( material ) === false ) {\n\n\t\t\tcache.set( material, new Set() );\n\n\t\t}\n\n\t\treturn cache.get( material );\n\n\t}\n\n\t_getShaderStage( code ) {\n\n\t\tconst cache = this.shaderCache;\n\n\t\tif ( cache.has( code ) === false ) {\n\n\t\t\tconst stage = new WebGLShaderStage( code );\n\t\t\tcache.set( code, stage );\n\n\t\t}\n\n\t\treturn cache.get( code );\n\n\t}\n\n}\n\nclass WebGLShaderStage {\n\n\tconstructor( code ) {\n\n\t\tthis.id = _id ++;\n\n\t\tthis.code = code;\n\t\tthis.usedTimes = 0;\n\n\t}\n\n}\n\nfunction WebGLPrograms( renderer, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping ) {\n\n\tconst _programLayers = new Layers();\n\tconst _customShaders = new WebGLShaderCache();\n\tconst programs = [];\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\tconst logarithmicDepthBuffer = capabilities.logarithmicDepthBuffer;\n\tconst vertexTextures = capabilities.vertexTextures;\n\tlet precision = capabilities.precision;\n\n\tconst shaderIDs = {\n\t\tMeshDepthMaterial: 'depth',\n\t\tMeshDistanceMaterial: 'distanceRGBA',\n\t\tMeshNormalMaterial: 'normal',\n\t\tMeshBasicMaterial: 'basic',\n\t\tMeshLambertMaterial: 'lambert',\n\t\tMeshPhongMaterial: 'phong',\n\t\tMeshToonMaterial: 'toon',\n\t\tMeshStandardMaterial: 'physical',\n\t\tMeshPhysicalMaterial: 'physical',\n\t\tMeshMatcapMaterial: 'matcap',\n\t\tLineBasicMaterial: 'basic',\n\t\tLineDashedMaterial: 'dashed',\n\t\tPointsMaterial: 'points',\n\t\tShadowMaterial: 'shadow',\n\t\tSpriteMaterial: 'sprite'\n\t};\n\n\tfunction getParameters( material, lights, shadows, scene, object ) {\n\n\t\tconst fog = scene.fog;\n\t\tconst geometry = object.geometry;\n\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\n\t\tconst envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || environment );\n\t\tconst envMapCubeUVHeight = ( !! envMap ) && ( envMap.mapping === CubeUVReflectionMapping ) ? envMap.image.height : null;\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\n\t\t// heuristics to create shader parameters according to lights in the scene\n\t\t// (not to blow over maxLights budget)\n\n\t\tif ( material.precision !== null ) {\n\n\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\n\n\t\t\tif ( precision !== material.precision ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\tlet morphTextureStride = 0;\n\n\t\tif ( geometry.morphAttributes.position !== undefined ) morphTextureStride = 1;\n\t\tif ( geometry.morphAttributes.normal !== undefined ) morphTextureStride = 2;\n\t\tif ( geometry.morphAttributes.color !== undefined ) morphTextureStride = 3;\n\n\t\t//\n\n\t\tlet vertexShader, fragmentShader;\n\t\tlet customVertexShaderID, customFragmentShaderID;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\n\t\t\tvertexShader = shader.vertexShader;\n\t\t\tfragmentShader = shader.fragmentShader;\n\n\t\t} else {\n\n\t\t\tvertexShader = material.vertexShader;\n\t\t\tfragmentShader = material.fragmentShader;\n\n\t\t\t_customShaders.update( material );\n\n\t\t\tcustomVertexShaderID = _customShaders.getVertexShaderID( material );\n\t\t\tcustomFragmentShaderID = _customShaders.getFragmentShaderID( material );\n\n\t\t}\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tconst useAlphaTest = material.alphaTest > 0;\n\t\tconst useClearcoat = material.clearcoat > 0;\n\n\t\tconst parameters = {\n\n\t\t\tisWebGL2: isWebGL2,\n\n\t\t\tshaderID: shaderID,\n\t\t\tshaderName: material.type,\n\n\t\t\tvertexShader: vertexShader,\n\t\t\tfragmentShader: fragmentShader,\n\t\t\tdefines: material.defines,\n\n\t\t\tcustomVertexShaderID: customVertexShaderID,\n\t\t\tcustomFragmentShaderID: customFragmentShaderID,\n\n\t\t\tisRawShaderMaterial: material.isRawShaderMaterial === true,\n\t\t\tglslVersion: material.glslVersion,\n\n\t\t\tprecision: precision,\n\n\t\t\tinstancing: object.isInstancedMesh === true,\n\t\t\tinstancingColor: object.isInstancedMesh === true && object.instanceColor !== null,\n\n\t\t\tsupportsVertexTextures: vertexTextures,\n\t\t\toutputEncoding: ( currentRenderTarget === null ) ? renderer.outputEncoding : ( currentRenderTarget.isXRRenderTarget === true ? currentRenderTarget.texture.encoding : LinearEncoding ),\n\t\t\tmap: !! material.map,\n\t\t\tmatcap: !! material.matcap,\n\t\t\tenvMap: !! envMap,\n\t\t\tenvMapMode: envMap && envMap.mapping,\n\t\t\tenvMapCubeUVHeight: envMapCubeUVHeight,\n\t\t\tlightMap: !! material.lightMap,\n\t\t\taoMap: !! material.aoMap,\n\t\t\temissiveMap: !! material.emissiveMap,\n\t\t\tbumpMap: !! material.bumpMap,\n\t\t\tnormalMap: !! material.normalMap,\n\t\t\tobjectSpaceNormalMap: material.normalMapType === ObjectSpaceNormalMap,\n\t\t\ttangentSpaceNormalMap: material.normalMapType === TangentSpaceNormalMap,\n\n\t\t\tdecodeVideoTexture: !! material.map && ( material.map.isVideoTexture === true ) && ( material.map.encoding === sRGBEncoding ),\n\n\t\t\tclearcoat: useClearcoat,\n\t\t\tclearcoatMap: useClearcoat && !! material.clearcoatMap,\n\t\t\tclearcoatRoughnessMap: useClearcoat && !! material.clearcoatRoughnessMap,\n\t\t\tclearcoatNormalMap: useClearcoat && !! material.clearcoatNormalMap,\n\n\t\t\tdisplacementMap: !! material.displacementMap,\n\t\t\troughnessMap: !! material.roughnessMap,\n\t\t\tmetalnessMap: !! material.metalnessMap,\n\t\t\tspecularMap: !! material.specularMap,\n\t\t\tspecularIntensityMap: !! material.specularIntensityMap,\n\t\t\tspecularColorMap: !! material.specularColorMap,\n\n\t\t\topaque: material.transparent === false && material.blending === NormalBlending,\n\n\t\t\talphaMap: !! material.alphaMap,\n\t\t\talphaTest: useAlphaTest,\n\n\t\t\tgradientMap: !! material.gradientMap,\n\n\t\t\tsheen: material.sheen > 0,\n\t\t\tsheenColorMap: !! material.sheenColorMap,\n\t\t\tsheenRoughnessMap: !! material.sheenRoughnessMap,\n\n\t\t\ttransmission: material.transmission > 0,\n\t\t\ttransmissionMap: !! material.transmissionMap,\n\t\t\tthicknessMap: !! material.thicknessMap,\n\n\t\t\tcombine: material.combine,\n\n\t\t\tvertexTangents: ( !! material.normalMap && !! geometry.attributes.tangent ),\n\t\t\tvertexColors: material.vertexColors,\n\t\t\tvertexAlphas: material.vertexColors === true && !! geometry.attributes.color && geometry.attributes.color.itemSize === 4,\n\t\t\tvertexUvs: !! material.map || !! material.bumpMap || !! material.normalMap || !! material.specularMap || !! material.alphaMap || !! material.emissiveMap || !! material.roughnessMap || !! material.metalnessMap || !! material.clearcoatMap || !! material.clearcoatRoughnessMap || !! material.clearcoatNormalMap || !! material.displacementMap || !! material.transmissionMap || !! material.thicknessMap || !! material.specularIntensityMap || !! material.specularColorMap || !! material.sheenColorMap || !! material.sheenRoughnessMap,\n\t\t\tuvsVertexOnly: ! ( !! material.map || !! material.bumpMap || !! material.normalMap || !! material.specularMap || !! material.alphaMap || !! material.emissiveMap || !! material.roughnessMap || !! material.metalnessMap || !! material.clearcoatNormalMap || material.transmission > 0 || !! material.transmissionMap || !! material.thicknessMap || !! material.specularIntensityMap || !! material.specularColorMap || material.sheen > 0 || !! material.sheenColorMap || !! material.sheenRoughnessMap ) && !! material.displacementMap,\n\n\t\t\tfog: !! fog,\n\t\t\tuseFog: material.fog === true,\n\t\t\tfogExp2: ( fog && fog.isFogExp2 ),\n\n\t\t\tflatShading: !! material.flatShading,\n\n\t\t\tsizeAttenuation: material.sizeAttenuation,\n\t\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\t\tskinning: object.isSkinnedMesh === true,\n\n\t\t\tmorphTargets: geometry.morphAttributes.position !== undefined,\n\t\t\tmorphNormals: geometry.morphAttributes.normal !== undefined,\n\t\t\tmorphColors: geometry.morphAttributes.color !== undefined,\n\t\t\tmorphTargetsCount: morphTargetsCount,\n\t\t\tmorphTextureStride: morphTextureStride,\n\n\t\t\tnumDirLights: lights.directional.length,\n\t\t\tnumPointLights: lights.point.length,\n\t\t\tnumSpotLights: lights.spot.length,\n\t\t\tnumRectAreaLights: lights.rectArea.length,\n\t\t\tnumHemiLights: lights.hemi.length,\n\n\t\t\tnumDirLightShadows: lights.directionalShadowMap.length,\n\t\t\tnumPointLightShadows: lights.pointShadowMap.length,\n\t\t\tnumSpotLightShadows: lights.spotShadowMap.length,\n\n\t\t\tnumClippingPlanes: clipping.numPlanes,\n\t\t\tnumClipIntersection: clipping.numIntersection,\n\n\t\t\tdithering: material.dithering,\n\n\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && shadows.length > 0,\n\t\t\tshadowMapType: renderer.shadowMap.type,\n\n\t\t\ttoneMapping: material.toneMapped ? renderer.toneMapping : NoToneMapping,\n\t\t\tphysicallyCorrectLights: renderer.physicallyCorrectLights,\n\n\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\n\n\t\t\tdoubleSided: material.side === DoubleSide,\n\t\t\tflipSided: material.side === BackSide,\n\n\t\t\tuseDepthPacking: !! material.depthPacking,\n\t\t\tdepthPacking: material.depthPacking || 0,\n\n\t\t\tindex0AttributeName: material.index0AttributeName,\n\n\t\t\textensionDerivatives: material.extensions && material.extensions.derivatives,\n\t\t\textensionFragDepth: material.extensions && material.extensions.fragDepth,\n\t\t\textensionDrawBuffers: material.extensions && material.extensions.drawBuffers,\n\t\t\textensionShaderTextureLOD: material.extensions && material.extensions.shaderTextureLOD,\n\n\t\t\trendererExtensionFragDepth: isWebGL2 || extensions.has( 'EXT_frag_depth' ),\n\t\t\trendererExtensionDrawBuffers: isWebGL2 || extensions.has( 'WEBGL_draw_buffers' ),\n\t\t\trendererExtensionShaderTextureLod: isWebGL2 || extensions.has( 'EXT_shader_texture_lod' ),\n\n\t\t\tcustomProgramCacheKey: material.customProgramCacheKey()\n\n\t\t};\n\n\t\treturn parameters;\n\n\t}\n\n\tfunction getProgramCacheKey( parameters ) {\n\n\t\tconst array = [];\n\n\t\tif ( parameters.shaderID ) {\n\n\t\t\tarray.push( parameters.shaderID );\n\n\t\t} else {\n\n\t\t\tarray.push( parameters.customVertexShaderID );\n\t\t\tarray.push( parameters.customFragmentShaderID );\n\n\t\t}\n\n\t\tif ( parameters.defines !== undefined ) {\n\n\t\t\tfor ( const name in parameters.defines ) {\n\n\t\t\t\tarray.push( name );\n\t\t\t\tarray.push( parameters.defines[ name ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( parameters.isRawShaderMaterial === false ) {\n\n\t\t\tgetProgramCacheKeyParameters( array, parameters );\n\t\t\tgetProgramCacheKeyBooleans( array, parameters );\n\t\t\tarray.push( renderer.outputEncoding );\n\n\t\t}\n\n\t\tarray.push( parameters.customProgramCacheKey );\n\n\t\treturn array.join();\n\n\t}\n\n\tfunction getProgramCacheKeyParameters( array, parameters ) {\n\n\t\tarray.push( parameters.precision );\n\t\tarray.push( parameters.outputEncoding );\n\t\tarray.push( parameters.envMapMode );\n\t\tarray.push( parameters.envMapCubeUVHeight );\n\t\tarray.push( parameters.combine );\n\t\tarray.push( parameters.vertexUvs );\n\t\tarray.push( parameters.fogExp2 );\n\t\tarray.push( parameters.sizeAttenuation );\n\t\tarray.push( parameters.morphTargetsCount );\n\t\tarray.push( parameters.morphAttributeCount );\n\t\tarray.push( parameters.numDirLights );\n\t\tarray.push( parameters.numPointLights );\n\t\tarray.push( parameters.numSpotLights );\n\t\tarray.push( parameters.numHemiLights );\n\t\tarray.push( parameters.numRectAreaLights );\n\t\tarray.push( parameters.numDirLightShadows );\n\t\tarray.push( parameters.numPointLightShadows );\n\t\tarray.push( parameters.numSpotLightShadows );\n\t\tarray.push( parameters.shadowMapType );\n\t\tarray.push( parameters.toneMapping );\n\t\tarray.push( parameters.numClippingPlanes );\n\t\tarray.push( parameters.numClipIntersection );\n\t\tarray.push( parameters.depthPacking );\n\n\t}\n\n\tfunction getProgramCacheKeyBooleans( array, parameters ) {\n\n\t\t_programLayers.disableAll();\n\n\t\tif ( parameters.isWebGL2 )\n\t\t\t_programLayers.enable( 0 );\n\t\tif ( parameters.supportsVertexTextures )\n\t\t\t_programLayers.enable( 1 );\n\t\tif ( parameters.instancing )\n\t\t\t_programLayers.enable( 2 );\n\t\tif ( parameters.instancingColor )\n\t\t\t_programLayers.enable( 3 );\n\t\tif ( parameters.map )\n\t\t\t_programLayers.enable( 4 );\n\t\tif ( parameters.matcap )\n\t\t\t_programLayers.enable( 5 );\n\t\tif ( parameters.envMap )\n\t\t\t_programLayers.enable( 6 );\n\t\tif ( parameters.lightMap )\n\t\t\t_programLayers.enable( 7 );\n\t\tif ( parameters.aoMap )\n\t\t\t_programLayers.enable( 8 );\n\t\tif ( parameters.emissiveMap )\n\t\t\t_programLayers.enable( 9 );\n\t\tif ( parameters.bumpMap )\n\t\t\t_programLayers.enable( 10 );\n\t\tif ( parameters.normalMap )\n\t\t\t_programLayers.enable( 11 );\n\t\tif ( parameters.objectSpaceNormalMap )\n\t\t\t_programLayers.enable( 12 );\n\t\tif ( parameters.tangentSpaceNormalMap )\n\t\t\t_programLayers.enable( 13 );\n\t\tif ( parameters.clearcoat )\n\t\t\t_programLayers.enable( 14 );\n\t\tif ( parameters.clearcoatMap )\n\t\t\t_programLayers.enable( 15 );\n\t\tif ( parameters.clearcoatRoughnessMap )\n\t\t\t_programLayers.enable( 16 );\n\t\tif ( parameters.clearcoatNormalMap )\n\t\t\t_programLayers.enable( 17 );\n\t\tif ( parameters.displacementMap )\n\t\t\t_programLayers.enable( 18 );\n\t\tif ( parameters.specularMap )\n\t\t\t_programLayers.enable( 19 );\n\t\tif ( parameters.roughnessMap )\n\t\t\t_programLayers.enable( 20 );\n\t\tif ( parameters.metalnessMap )\n\t\t\t_programLayers.enable( 21 );\n\t\tif ( parameters.gradientMap )\n\t\t\t_programLayers.enable( 22 );\n\t\tif ( parameters.alphaMap )\n\t\t\t_programLayers.enable( 23 );\n\t\tif ( parameters.alphaTest )\n\t\t\t_programLayers.enable( 24 );\n\t\tif ( parameters.vertexColors )\n\t\t\t_programLayers.enable( 25 );\n\t\tif ( parameters.vertexAlphas )\n\t\t\t_programLayers.enable( 26 );\n\t\tif ( parameters.vertexUvs )\n\t\t\t_programLayers.enable( 27 );\n\t\tif ( parameters.vertexTangents )\n\t\t\t_programLayers.enable( 28 );\n\t\tif ( parameters.uvsVertexOnly )\n\t\t\t_programLayers.enable( 29 );\n\t\tif ( parameters.fog )\n\t\t\t_programLayers.enable( 30 );\n\n\t\tarray.push( _programLayers.mask );\n\t\t_programLayers.disableAll();\n\n\t\tif ( parameters.useFog )\n\t\t\t_programLayers.enable( 0 );\n\t\tif ( parameters.flatShading )\n\t\t\t_programLayers.enable( 1 );\n\t\tif ( parameters.logarithmicDepthBuffer )\n\t\t\t_programLayers.enable( 2 );\n\t\tif ( parameters.skinning )\n\t\t\t_programLayers.enable( 3 );\n\t\tif ( parameters.morphTargets )\n\t\t\t_programLayers.enable( 4 );\n\t\tif ( parameters.morphNormals )\n\t\t\t_programLayers.enable( 5 );\n\t\tif ( parameters.morphColors )\n\t\t\t_programLayers.enable( 6 );\n\t\tif ( parameters.premultipliedAlpha )\n\t\t\t_programLayers.enable( 7 );\n\t\tif ( parameters.shadowMapEnabled )\n\t\t\t_programLayers.enable( 8 );\n\t\tif ( parameters.physicallyCorrectLights )\n\t\t\t_programLayers.enable( 9 );\n\t\tif ( parameters.doubleSided )\n\t\t\t_programLayers.enable( 10 );\n\t\tif ( parameters.flipSided )\n\t\t\t_programLayers.enable( 11 );\n\t\tif ( parameters.useDepthPacking )\n\t\t\t_programLayers.enable( 12 );\n\t\tif ( parameters.dithering )\n\t\t\t_programLayers.enable( 13 );\n\t\tif ( parameters.specularIntensityMap )\n\t\t\t_programLayers.enable( 14 );\n\t\tif ( parameters.specularColorMap )\n\t\t\t_programLayers.enable( 15 );\n\t\tif ( parameters.transmission )\n\t\t\t_programLayers.enable( 16 );\n\t\tif ( parameters.transmissionMap )\n\t\t\t_programLayers.enable( 17 );\n\t\tif ( parameters.thicknessMap )\n\t\t\t_programLayers.enable( 18 );\n\t\tif ( parameters.sheen )\n\t\t\t_programLayers.enable( 19 );\n\t\tif ( parameters.sheenColorMap )\n\t\t\t_programLayers.enable( 20 );\n\t\tif ( parameters.sheenRoughnessMap )\n\t\t\t_programLayers.enable( 21 );\n\t\tif ( parameters.decodeVideoTexture )\n\t\t\t_programLayers.enable( 22 );\n\t\tif ( parameters.opaque )\n\t\t\t_programLayers.enable( 23 );\n\n\t\tarray.push( _programLayers.mask );\n\n\t}\n\n\tfunction getUniforms( material ) {\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\t\tlet uniforms;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\t\t\tuniforms = UniformsUtils.clone( shader.uniforms );\n\n\t\t} else {\n\n\t\t\tuniforms = material.uniforms;\n\n\t\t}\n\n\t\treturn uniforms;\n\n\t}\n\n\tfunction acquireProgram( parameters, cacheKey ) {\n\n\t\tlet program;\n\n\t\t// Check if code has been already compiled\n\t\tfor ( let p = 0, pl = programs.length; p < pl; p ++ ) {\n\n\t\t\tconst preexistingProgram = programs[ p ];\n\n\t\t\tif ( preexistingProgram.cacheKey === cacheKey ) {\n\n\t\t\t\tprogram = preexistingProgram;\n\t\t\t\t++ program.usedTimes;\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( program === undefined ) {\n\n\t\t\tprogram = new WebGLProgram( renderer, cacheKey, parameters, bindingStates );\n\t\t\tprograms.push( program );\n\n\t\t}\n\n\t\treturn program;\n\n\t}\n\n\tfunction releaseProgram( program ) {\n\n\t\tif ( -- program.usedTimes === 0 ) {\n\n\t\t\t// Remove from unordered set\n\t\t\tconst i = programs.indexOf( program );\n\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\n\t\t\tprograms.pop();\n\n\t\t\t// Free WebGL resources\n\t\t\tprogram.destroy();\n\n\t\t}\n\n\t}\n\n\tfunction releaseShaderCache( material ) {\n\n\t\t_customShaders.remove( material );\n\n\t}\n\n\tfunction dispose() {\n\n\t\t_customShaders.dispose();\n\n\t}\n\n\treturn {\n\t\tgetParameters: getParameters,\n\t\tgetProgramCacheKey: getProgramCacheKey,\n\t\tgetUniforms: getUniforms,\n\t\tacquireProgram: acquireProgram,\n\t\treleaseProgram: releaseProgram,\n\t\treleaseShaderCache: releaseShaderCache,\n\t\t// Exposed for resource monitoring & error feedback via renderer.info:\n\t\tprograms: programs,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction WebGLProperties() {\n\n\tlet properties = new WeakMap();\n\n\tfunction get( object ) {\n\n\t\tlet map = properties.get( object );\n\n\t\tif ( map === undefined ) {\n\n\t\t\tmap = {};\n\t\t\tproperties.set( object, map );\n\n\t\t}\n\n\t\treturn map;\n\n\t}\n\n\tfunction remove( object ) {\n\n\t\tproperties.delete( object );\n\n\t}\n\n\tfunction update( object, key, value ) {\n\n\t\tproperties.get( object )[ key ] = value;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tproperties = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction painterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.material.id !== b.material.id ) {\n\n\t\treturn a.material.id - b.material.id;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn a.z - b.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\nfunction reversePainterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn b.z - a.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\n\nfunction WebGLRenderList() {\n\n\tconst renderItems = [];\n\tlet renderItemsIndex = 0;\n\n\tconst opaque = [];\n\tconst transmissive = [];\n\tconst transparent = [];\n\n\tfunction init() {\n\n\t\trenderItemsIndex = 0;\n\n\t\topaque.length = 0;\n\t\ttransmissive.length = 0;\n\t\ttransparent.length = 0;\n\n\t}\n\n\tfunction getNextRenderItem( object, geometry, material, groupOrder, z, group ) {\n\n\t\tlet renderItem = renderItems[ renderItemsIndex ];\n\n\t\tif ( renderItem === undefined ) {\n\n\t\t\trenderItem = {\n\t\t\t\tid: object.id,\n\t\t\t\tobject: object,\n\t\t\t\tgeometry: geometry,\n\t\t\t\tmaterial: material,\n\t\t\t\tgroupOrder: groupOrder,\n\t\t\t\trenderOrder: object.renderOrder,\n\t\t\t\tz: z,\n\t\t\t\tgroup: group\n\t\t\t};\n\n\t\t\trenderItems[ renderItemsIndex ] = renderItem;\n\n\t\t} else {\n\n\t\t\trenderItem.id = object.id;\n\t\t\trenderItem.object = object;\n\t\t\trenderItem.geometry = geometry;\n\t\t\trenderItem.material = material;\n\t\t\trenderItem.groupOrder = groupOrder;\n\t\t\trenderItem.renderOrder = object.renderOrder;\n\t\t\trenderItem.z = z;\n\t\t\trenderItem.group = group;\n\n\t\t}\n\n\t\trenderItemsIndex ++;\n\n\t\treturn renderItem;\n\n\t}\n\n\tfunction push( object, geometry, material, groupOrder, z, group ) {\n\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\tif ( material.transmission > 0.0 ) {\n\n\t\t\ttransmissive.push( renderItem );\n\n\t\t} else if ( material.transparent === true ) {\n\n\t\t\ttransparent.push( renderItem );\n\n\t\t} else {\n\n\t\t\topaque.push( renderItem );\n\n\t\t}\n\n\t}\n\n\tfunction unshift( object, geometry, material, groupOrder, z, group ) {\n\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\tif ( material.transmission > 0.0 ) {\n\n\t\t\ttransmissive.unshift( renderItem );\n\n\t\t} else if ( material.transparent === true ) {\n\n\t\t\ttransparent.unshift( renderItem );\n\n\t\t} else {\n\n\t\t\topaque.unshift( renderItem );\n\n\t\t}\n\n\t}\n\n\tfunction sort( customOpaqueSort, customTransparentSort ) {\n\n\t\tif ( opaque.length > 1 ) opaque.sort( customOpaqueSort || painterSortStable );\n\t\tif ( transmissive.length > 1 ) transmissive.sort( customTransparentSort || reversePainterSortStable );\n\t\tif ( transparent.length > 1 ) transparent.sort( customTransparentSort || reversePainterSortStable );\n\n\t}\n\n\tfunction finish() {\n\n\t\t// Clear references from inactive renderItems in the list\n\n\t\tfor ( let i = renderItemsIndex, il = renderItems.length; i < il; i ++ ) {\n\n\t\t\tconst renderItem = renderItems[ i ];\n\n\t\t\tif ( renderItem.id === null ) break;\n\n\t\t\trenderItem.id = null;\n\t\t\trenderItem.object = null;\n\t\t\trenderItem.geometry = null;\n\t\t\trenderItem.material = null;\n\t\t\trenderItem.group = null;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\topaque: opaque,\n\t\ttransmissive: transmissive,\n\t\ttransparent: transparent,\n\n\t\tinit: init,\n\t\tpush: push,\n\t\tunshift: unshift,\n\t\tfinish: finish,\n\n\t\tsort: sort\n\t};\n\n}\n\nfunction WebGLRenderLists() {\n\n\tlet lists = new WeakMap();\n\n\tfunction get( scene, renderCallDepth ) {\n\n\t\tlet list;\n\n\t\tif ( lists.has( scene ) === false ) {\n\n\t\t\tlist = new WebGLRenderList();\n\t\t\tlists.set( scene, [ list ] );\n\n\t\t} else {\n\n\t\t\tif ( renderCallDepth >= lists.get( scene ).length ) {\n\n\t\t\t\tlist = new WebGLRenderList();\n\t\t\t\tlists.get( scene ).push( list );\n\n\t\t\t} else {\n\n\t\t\t\tlist = lists.get( scene )[ renderCallDepth ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn list;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tlists = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction UniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tconeCos: 0,\n\t\t\t\t\t\tpenumbraCos: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'HemisphereLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tskyColor: new Color(),\n\t\t\t\t\t\tgroundColor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'RectAreaLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\thalfWidth: new Vector3(),\n\t\t\t\t\t\thalfHeight: new Vector3()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\nfunction ShadowUniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2(),\n\t\t\t\t\t\tshadowCameraNear: 1,\n\t\t\t\t\t\tshadowCameraFar: 1000\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\t// TODO (abelnation): set RectAreaLight shadow uniforms\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\n\n\nlet nextVersion = 0;\n\nfunction shadowCastingLightsFirst( lightA, lightB ) {\n\n\treturn ( lightB.castShadow ? 1 : 0 ) - ( lightA.castShadow ? 1 : 0 );\n\n}\n\nfunction WebGLLights( extensions, capabilities ) {\n\n\tconst cache = new UniformsCache();\n\n\tconst shadowCache = ShadowUniformsCache();\n\n\tconst state = {\n\n\t\tversion: 0,\n\n\t\thash: {\n\t\t\tdirectionalLength: - 1,\n\t\t\tpointLength: - 1,\n\t\t\tspotLength: - 1,\n\t\t\trectAreaLength: - 1,\n\t\t\themiLength: - 1,\n\n\t\t\tnumDirectionalShadows: - 1,\n\t\t\tnumPointShadows: - 1,\n\t\t\tnumSpotShadows: - 1\n\t\t},\n\n\t\tambient: [ 0, 0, 0 ],\n\t\tprobe: [],\n\t\tdirectional: [],\n\t\tdirectionalShadow: [],\n\t\tdirectionalShadowMap: [],\n\t\tdirectionalShadowMatrix: [],\n\t\tspot: [],\n\t\tspotShadow: [],\n\t\tspotShadowMap: [],\n\t\tspotShadowMatrix: [],\n\t\trectArea: [],\n\t\trectAreaLTC1: null,\n\t\trectAreaLTC2: null,\n\t\tpoint: [],\n\t\tpointShadow: [],\n\t\tpointShadowMap: [],\n\t\tpointShadowMatrix: [],\n\t\themi: []\n\n\t};\n\n\tfor ( let i = 0; i < 9; i ++ ) state.probe.push( new Vector3() );\n\n\tconst vector3 = new Vector3();\n\tconst matrix4 = new Matrix4();\n\tconst matrix42 = new Matrix4();\n\n\tfunction setup( lights, physicallyCorrectLights ) {\n\n\t\tlet r = 0, g = 0, b = 0;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) state.probe[ i ].set( 0, 0, 0 );\n\n\t\tlet directionalLength = 0;\n\t\tlet pointLength = 0;\n\t\tlet spotLength = 0;\n\t\tlet rectAreaLength = 0;\n\t\tlet hemiLength = 0;\n\n\t\tlet numDirectionalShadows = 0;\n\t\tlet numPointShadows = 0;\n\t\tlet numSpotShadows = 0;\n\n\t\tlights.sort( shadowCastingLightsFirst );\n\n\t\t// artist-friendly light intensity scaling factor\n\t\tconst scaleFactor = ( physicallyCorrectLights !== true ) ? Math.PI : 1;\n\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\n\t\t\tconst color = light.color;\n\t\t\tconst intensity = light.intensity;\n\t\t\tconst distance = light.distance;\n\n\t\t\tconst shadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\n\n\t\t\tif ( light.isAmbientLight ) {\n\n\t\t\t\tr += color.r * intensity * scaleFactor;\n\t\t\t\tg += color.g * intensity * scaleFactor;\n\t\t\t\tb += color.b * intensity * scaleFactor;\n\n\t\t\t} else if ( light.isLightProbe ) {\n\n\t\t\t\tfor ( let j = 0; j < 9; j ++ ) {\n\n\t\t\t\t\tstate.probe[ j ].addScaledVector( light.sh.coefficients[ j ], intensity );\n\n\t\t\t\t}\n\n\t\t\t} else if ( light.isDirectionalLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity * scaleFactor );\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.directionalShadow[ directionalLength ] = shadowUniforms;\n\t\t\t\t\tstate.directionalShadowMap[ directionalLength ] = shadowMap;\n\t\t\t\t\tstate.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumDirectionalShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.directional[ directionalLength ] = uniforms;\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity * scaleFactor );\n\t\t\t\tuniforms.distance = distance;\n\n\t\t\t\tuniforms.coneCos = Math.cos( light.angle );\n\t\t\t\tuniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.spotShadow[ spotLength ] = shadowUniforms;\n\t\t\t\t\tstate.spotShadowMap[ spotLength ] = shadowMap;\n\t\t\t\t\tstate.spotShadowMatrix[ spotLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumSpotShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.spot[ spotLength ] = uniforms;\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\t// (a) intensity is the total visible light emitted\n\t\t\t\t//uniforms.color.copy( color ).multiplyScalar( intensity / ( light.width * light.height * Math.PI ) );\n\n\t\t\t\t// (b) intensity is the brightness of the light\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tstate.rectArea[ rectAreaLength ] = uniforms;\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity * scaleFactor );\n\t\t\t\tuniforms.distance = light.distance;\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\t\t\t\t\tshadowUniforms.shadowCameraNear = shadow.camera.near;\n\t\t\t\t\tshadowUniforms.shadowCameraFar = shadow.camera.far;\n\n\t\t\t\t\tstate.pointShadow[ pointLength ] = shadowUniforms;\n\t\t\t\t\tstate.pointShadowMap[ pointLength ] = shadowMap;\n\t\t\t\t\tstate.pointShadowMatrix[ pointLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumPointShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.point[ pointLength ] = uniforms;\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.skyColor.copy( light.color ).multiplyScalar( intensity * scaleFactor );\n\t\t\t\tuniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity * scaleFactor );\n\n\t\t\t\tstate.hemi[ hemiLength ] = uniforms;\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( rectAreaLength > 0 ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\t// WebGL 2\n\n\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n\n\t\t\t} else {\n\n\t\t\t\t// WebGL 1\n\n\t\t\t\tif ( extensions.has( 'OES_texture_float_linear' ) === true ) {\n\n\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n\n\t\t\t\t} else if ( extensions.has( 'OES_texture_half_float_linear' ) === true ) {\n\n\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_HALF_1;\n\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_HALF_2;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.ambient[ 0 ] = r;\n\t\tstate.ambient[ 1 ] = g;\n\t\tstate.ambient[ 2 ] = b;\n\n\t\tconst hash = state.hash;\n\n\t\tif ( hash.directionalLength !== directionalLength ||\n\t\t\thash.pointLength !== pointLength ||\n\t\t\thash.spotLength !== spotLength ||\n\t\t\thash.rectAreaLength !== rectAreaLength ||\n\t\t\thash.hemiLength !== hemiLength ||\n\t\t\thash.numDirectionalShadows !== numDirectionalShadows ||\n\t\t\thash.numPointShadows !== numPointShadows ||\n\t\t\thash.numSpotShadows !== numSpotShadows ) {\n\n\t\t\tstate.directional.length = directionalLength;\n\t\t\tstate.spot.length = spotLength;\n\t\t\tstate.rectArea.length = rectAreaLength;\n\t\t\tstate.point.length = pointLength;\n\t\t\tstate.hemi.length = hemiLength;\n\n\t\t\tstate.directionalShadow.length = numDirectionalShadows;\n\t\t\tstate.directionalShadowMap.length = numDirectionalShadows;\n\t\t\tstate.pointShadow.length = numPointShadows;\n\t\t\tstate.pointShadowMap.length = numPointShadows;\n\t\t\tstate.spotShadow.length = numSpotShadows;\n\t\t\tstate.spotShadowMap.length = numSpotShadows;\n\t\t\tstate.directionalShadowMatrix.length = numDirectionalShadows;\n\t\t\tstate.pointShadowMatrix.length = numPointShadows;\n\t\t\tstate.spotShadowMatrix.length = numSpotShadows;\n\n\t\t\thash.directionalLength = directionalLength;\n\t\t\thash.pointLength = pointLength;\n\t\t\thash.spotLength = spotLength;\n\t\t\thash.rectAreaLength = rectAreaLength;\n\t\t\thash.hemiLength = hemiLength;\n\n\t\t\thash.numDirectionalShadows = numDirectionalShadows;\n\t\t\thash.numPointShadows = numPointShadows;\n\t\t\thash.numSpotShadows = numSpotShadows;\n\n\t\t\tstate.version = nextVersion ++;\n\n\t\t}\n\n\t}\n\n\tfunction setupView( lights, camera ) {\n\n\t\tlet directionalLength = 0;\n\t\tlet pointLength = 0;\n\t\tlet spotLength = 0;\n\t\tlet rectAreaLength = 0;\n\t\tlet hemiLength = 0;\n\n\t\tconst viewMatrix = camera.matrixWorldInverse;\n\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\n\t\t\tif ( light.isDirectionalLight ) {\n\n\t\t\t\tconst uniforms = state.directional[ directionalLength ];\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tconst uniforms = state.spot[ spotLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tconst uniforms = state.rectArea[ rectAreaLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t// extract local rotation of light to derive width/height half vectors\n\t\t\t\tmatrix42.identity();\n\t\t\t\tmatrix4.copy( light.matrixWorld );\n\t\t\t\tmatrix4.premultiply( viewMatrix );\n\t\t\t\tmatrix42.extractRotation( matrix4 );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tuniforms.halfWidth.applyMatrix4( matrix42 );\n\t\t\t\tuniforms.halfHeight.applyMatrix4( matrix42 );\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tconst uniforms = state.point[ pointLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tconst uniforms = state.hemi[ hemiLength ];\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tsetup: setup,\n\t\tsetupView: setupView,\n\t\tstate: state\n\t};\n\n}\n\nfunction WebGLRenderState( extensions, capabilities ) {\n\n\tconst lights = new WebGLLights( extensions, capabilities );\n\n\tconst lightsArray = [];\n\tconst shadowsArray = [];\n\n\tfunction init() {\n\n\t\tlightsArray.length = 0;\n\t\tshadowsArray.length = 0;\n\n\t}\n\n\tfunction pushLight( light ) {\n\n\t\tlightsArray.push( light );\n\n\t}\n\n\tfunction pushShadow( shadowLight ) {\n\n\t\tshadowsArray.push( shadowLight );\n\n\t}\n\n\tfunction setupLights( physicallyCorrectLights ) {\n\n\t\tlights.setup( lightsArray, physicallyCorrectLights );\n\n\t}\n\n\tfunction setupLightsView( camera ) {\n\n\t\tlights.setupView( lightsArray, camera );\n\n\t}\n\n\tconst state = {\n\t\tlightsArray: lightsArray,\n\t\tshadowsArray: shadowsArray,\n\n\t\tlights: lights\n\t};\n\n\treturn {\n\t\tinit: init,\n\t\tstate: state,\n\t\tsetupLights: setupLights,\n\t\tsetupLightsView: setupLightsView,\n\n\t\tpushLight: pushLight,\n\t\tpushShadow: pushShadow\n\t};\n\n}\n\nfunction WebGLRenderStates( extensions, capabilities ) {\n\n\tlet renderStates = new WeakMap();\n\n\tfunction get( scene, renderCallDepth = 0 ) {\n\n\t\tlet renderState;\n\n\t\tif ( renderStates.has( scene ) === false ) {\n\n\t\t\trenderState = new WebGLRenderState( extensions, capabilities );\n\t\t\trenderStates.set( scene, [ renderState ] );\n\n\t\t} else {\n\n\t\t\tif ( renderCallDepth >= renderStates.get( scene ).length ) {\n\n\t\t\t\trenderState = new WebGLRenderState( extensions, capabilities );\n\t\t\t\trenderStates.get( scene ).push( renderState );\n\n\t\t\t} else {\n\n\t\t\t\trenderState = renderStates.get( scene )[ renderCallDepth ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn renderState;\n\n\t}\n\n\tfunction dispose() {\n\n\t\trenderStates = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nclass MeshDepthMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'MeshDepthMaterial';\n\n\t\tthis.depthPacking = BasicDepthPacking;\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.depthPacking = source.depthPacking;\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\treturn this;\n\n\t}\n\n}\n\nMeshDepthMaterial.prototype.isMeshDepthMaterial = true;\n\nclass MeshDistanceMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'MeshDistanceMaterial';\n\n\t\tthis.referencePosition = new Vector3();\n\t\tthis.nearDistance = 1;\n\t\tthis.farDistance = 1000;\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.referencePosition.copy( source.referencePosition );\n\t\tthis.nearDistance = source.nearDistance;\n\t\tthis.farDistance = source.farDistance;\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\treturn this;\n\n\t}\n\n}\n\nMeshDistanceMaterial.prototype.isMeshDistanceMaterial = true;\n\nconst vertex = \"void main() {\\n\\tgl_Position = vec4( position, 1.0 );\\n}\";\n\nconst fragment = \"uniform sampler2D shadow_pass;\\nuniform vec2 resolution;\\nuniform float radius;\\n#include <packing>\\nvoid main() {\\n\\tconst float samples = float( VSM_SAMPLES );\\n\\tfloat mean = 0.0;\\n\\tfloat squared_mean = 0.0;\\n\\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\\n\\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\\n\\tfor ( float i = 0.0; i < samples; i ++ ) {\\n\\t\\tfloat uvOffset = uvStart + i * uvStride;\\n\\t\\t#ifdef HORIZONTAL_PASS\\n\\t\\t\\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\\n\\t\\t\\tmean += distribution.x;\\n\\t\\t\\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\\n\\t\\t#else\\n\\t\\t\\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\\n\\t\\t\\tmean += depth;\\n\\t\\t\\tsquared_mean += depth * depth;\\n\\t\\t#endif\\n\\t}\\n\\tmean = mean / samples;\\n\\tsquared_mean = squared_mean / samples;\\n\\tfloat std_dev = sqrt( squared_mean - mean * mean );\\n\\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\\n}\";\n\nfunction WebGLShadowMap( _renderer, _objects, _capabilities ) {\n\n\tlet _frustum = new Frustum();\n\n\tconst _shadowMapSize = new Vector2(),\n\t\t_viewportSize = new Vector2(),\n\n\t\t_viewport = new Vector4(),\n\n\t\t_depthMaterial = new MeshDepthMaterial( { depthPacking: RGBADepthPacking } ),\n\t\t_distanceMaterial = new MeshDistanceMaterial(),\n\n\t\t_materialCache = {},\n\n\t\t_maxTextureSize = _capabilities.maxTextureSize;\n\n\tconst shadowSide = { 0: BackSide, 1: FrontSide, 2: DoubleSide };\n\n\tconst shadowMaterialVertical = new ShaderMaterial( {\n\t\tdefines: {\n\t\t\tVSM_SAMPLES: 8\n\t\t},\n\t\tuniforms: {\n\t\t\tshadow_pass: { value: null },\n\t\t\tresolution: { value: new Vector2() },\n\t\t\tradius: { value: 4.0 }\n\t\t},\n\n\t\tvertexShader: vertex,\n\t\tfragmentShader: fragment\n\n\t} );\n\n\tconst shadowMaterialHorizontal = shadowMaterialVertical.clone();\n\tshadowMaterialHorizontal.defines.HORIZONTAL_PASS = 1;\n\n\tconst fullScreenTri = new BufferGeometry();\n\tfullScreenTri.setAttribute(\n\t\t'position',\n\t\tnew BufferAttribute(\n\t\t\tnew Float32Array( [ - 1, - 1, 0.5, 3, - 1, 0.5, - 1, 3, 0.5 ] ),\n\t\t\t3\n\t\t)\n\t);\n\n\tconst fullScreenMesh = new Mesh( fullScreenTri, shadowMaterialVertical );\n\n\tconst scope = this;\n\n\tthis.enabled = false;\n\n\tthis.autoUpdate = true;\n\tthis.needsUpdate = false;\n\n\tthis.type = PCFShadowMap;\n\n\tthis.render = function ( lights, scene, camera ) {\n\n\t\tif ( scope.enabled === false ) return;\n\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\n\n\t\tif ( lights.length === 0 ) return;\n\n\t\tconst currentRenderTarget = _renderer.getRenderTarget();\n\t\tconst activeCubeFace = _renderer.getActiveCubeFace();\n\t\tconst activeMipmapLevel = _renderer.getActiveMipmapLevel();\n\n\t\tconst _state = _renderer.state;\n\n\t\t// Set GL state for depth map.\n\t\t_state.setBlending( NoBlending );\n\t\t_state.buffers.color.setClear( 1, 1, 1, 1 );\n\t\t_state.buffers.depth.setTest( true );\n\t\t_state.setScissorTest( false );\n\n\t\t// render depth map\n\n\t\tfor ( let i = 0, il = lights.length; i < il; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\t\t\tconst shadow = light.shadow;\n\n\t\t\tif ( shadow === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( shadow.autoUpdate === false && shadow.needsUpdate === false ) continue;\n\n\t\t\t_shadowMapSize.copy( shadow.mapSize );\n\n\t\t\tconst shadowFrameExtents = shadow.getFrameExtents();\n\n\t\t\t_shadowMapSize.multiply( shadowFrameExtents );\n\n\t\t\t_viewportSize.copy( shadow.mapSize );\n\n\t\t\tif ( _shadowMapSize.x > _maxTextureSize || _shadowMapSize.y > _maxTextureSize ) {\n\n\t\t\t\tif ( _shadowMapSize.x > _maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.x = Math.floor( _maxTextureSize / shadowFrameExtents.x );\n\t\t\t\t\t_shadowMapSize.x = _viewportSize.x * shadowFrameExtents.x;\n\t\t\t\t\tshadow.mapSize.x = _viewportSize.x;\n\n\t\t\t\t}\n\n\t\t\t\tif ( _shadowMapSize.y > _maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.y = Math.floor( _maxTextureSize / shadowFrameExtents.y );\n\t\t\t\t\t_shadowMapSize.y = _viewportSize.y * shadowFrameExtents.y;\n\t\t\t\t\tshadow.mapSize.y = _viewportSize.y;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( shadow.map === null && ! shadow.isPointLightShadow && this.type === VSMShadowMap ) {\n\n\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y );\n\t\t\t\tshadow.map.texture.name = light.name + '.shadowMap';\n\n\t\t\t\tshadow.mapPass = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y );\n\n\t\t\t\tshadow.camera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\tif ( shadow.map === null ) {\n\n\t\t\t\tconst pars = { minFilter: NearestFilter, magFilter: NearestFilter, format: RGBAFormat };\n\n\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\t\t\t\tshadow.map.texture.name = light.name + '.shadowMap';\n\n\t\t\t\tshadow.camera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\t_renderer.setRenderTarget( shadow.map );\n\t\t\t_renderer.clear();\n\n\t\t\tconst viewportCount = shadow.getViewportCount();\n\n\t\t\tfor ( let vp = 0; vp < viewportCount; vp ++ ) {\n\n\t\t\t\tconst viewport = shadow.getViewport( vp );\n\n\t\t\t\t_viewport.set(\n\t\t\t\t\t_viewportSize.x * viewport.x,\n\t\t\t\t\t_viewportSize.y * viewport.y,\n\t\t\t\t\t_viewportSize.x * viewport.z,\n\t\t\t\t\t_viewportSize.y * viewport.w\n\t\t\t\t);\n\n\t\t\t\t_state.viewport( _viewport );\n\n\t\t\t\tshadow.updateMatrices( light, vp );\n\n\t\t\t\t_frustum = shadow.getFrustum();\n\n\t\t\t\trenderObject( scene, camera, shadow.camera, light, this.type );\n\n\t\t\t}\n\n\t\t\t// do blur pass for VSM\n\n\t\t\tif ( ! shadow.isPointLightShadow && this.type === VSMShadowMap ) {\n\n\t\t\t\tVSMPass( shadow, camera );\n\n\t\t\t}\n\n\t\t\tshadow.needsUpdate = false;\n\n\t\t}\n\n\t\tscope.needsUpdate = false;\n\n\t\t_renderer.setRenderTarget( currentRenderTarget, activeCubeFace, activeMipmapLevel );\n\n\t};\n\n\tfunction VSMPass( shadow, camera ) {\n\n\t\tconst geometry = _objects.update( fullScreenMesh );\n\n\t\tif ( shadowMaterialVertical.defines.VSM_SAMPLES !== shadow.blurSamples ) {\n\n\t\t\tshadowMaterialVertical.defines.VSM_SAMPLES = shadow.blurSamples;\n\t\t\tshadowMaterialHorizontal.defines.VSM_SAMPLES = shadow.blurSamples;\n\n\t\t\tshadowMaterialVertical.needsUpdate = true;\n\t\t\tshadowMaterialHorizontal.needsUpdate = true;\n\n\t\t}\n\n\t\t// vertical pass\n\n\t\tshadowMaterialVertical.uniforms.shadow_pass.value = shadow.map.texture;\n\t\tshadowMaterialVertical.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialVertical.uniforms.radius.value = shadow.radius;\n\t\t_renderer.setRenderTarget( shadow.mapPass );\n\t\t_renderer.clear();\n\t\t_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialVertical, fullScreenMesh, null );\n\n\t\t// horizontal pass\n\n\t\tshadowMaterialHorizontal.uniforms.shadow_pass.value = shadow.mapPass.texture;\n\t\tshadowMaterialHorizontal.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialHorizontal.uniforms.radius.value = shadow.radius;\n\t\t_renderer.setRenderTarget( shadow.map );\n\t\t_renderer.clear();\n\t\t_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialHorizontal, fullScreenMesh, null );\n\n\t}\n\n\tfunction getDepthMaterial( object, material, light, shadowCameraNear, shadowCameraFar, type ) {\n\n\t\tlet result = null;\n\n\t\tconst customMaterial = ( light.isPointLight === true ) ? object.customDistanceMaterial : object.customDepthMaterial;\n\n\t\tif ( customMaterial !== undefined ) {\n\n\t\t\tresult = customMaterial;\n\n\t\t} else {\n\n\t\t\tresult = ( light.isPointLight === true ) ? _distanceMaterial : _depthMaterial;\n\n\t\t}\n\n\t\tif ( ( _renderer.localClippingEnabled && material.clipShadows === true && material.clippingPlanes.length !== 0 ) ||\n\t\t\t( material.displacementMap && material.displacementScale !== 0 ) ||\n\t\t\t( material.alphaMap && material.alphaTest > 0 ) ) {\n\n\t\t\t// in this case we need a unique material instance reflecting the\n\t\t\t// appropriate state\n\n\t\t\tconst keyA = result.uuid, keyB = material.uuid;\n\n\t\t\tlet materialsForVariant = _materialCache[ keyA ];\n\n\t\t\tif ( materialsForVariant === undefined ) {\n\n\t\t\t\tmaterialsForVariant = {};\n\t\t\t\t_materialCache[ keyA ] = materialsForVariant;\n\n\t\t\t}\n\n\t\t\tlet cachedMaterial = materialsForVariant[ keyB ];\n\n\t\t\tif ( cachedMaterial === undefined ) {\n\n\t\t\t\tcachedMaterial = result.clone();\n\t\t\t\tmaterialsForVariant[ keyB ] = cachedMaterial;\n\n\t\t\t}\n\n\t\t\tresult = cachedMaterial;\n\n\t\t}\n\n\t\tresult.visible = material.visible;\n\t\tresult.wireframe = material.wireframe;\n\n\t\tif ( type === VSMShadowMap ) {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : material.side;\n\n\t\t} else {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : shadowSide[ material.side ];\n\n\t\t}\n\n\t\tresult.alphaMap = material.alphaMap;\n\t\tresult.alphaTest = material.alphaTest;\n\n\t\tresult.clipShadows = material.clipShadows;\n\t\tresult.clippingPlanes = material.clippingPlanes;\n\t\tresult.clipIntersection = material.clipIntersection;\n\n\t\tresult.displacementMap = material.displacementMap;\n\t\tresult.displacementScale = material.displacementScale;\n\t\tresult.displacementBias = material.displacementBias;\n\n\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\n\t\tresult.linewidth = material.linewidth;\n\n\t\tif ( light.isPointLight === true && result.isMeshDistanceMaterial === true ) {\n\n\t\t\tresult.referencePosition.setFromMatrixPosition( light.matrixWorld );\n\t\t\tresult.nearDistance = shadowCameraNear;\n\t\t\tresult.farDistance = shadowCameraFar;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tfunction renderObject( object, camera, shadowCamera, light, type ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tconst visible = object.layers.test( camera.layers );\n\n\t\tif ( visible && ( object.isMesh || object.isLine || object.isPoints ) ) {\n\n\t\t\tif ( ( object.castShadow || ( object.receiveShadow && type === VSMShadowMap ) ) && ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) ) {\n\n\t\t\t\tobject.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\n\n\t\t\t\tconst geometry = _objects.update( object );\n\t\t\t\tconst material = object.material;\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\tfor ( let k = 0, kl = groups.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\tconst group = groups[ k ];\n\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, groupMaterial, light, shadowCamera.near, shadowCamera.far, type );\n\n\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, material, light, shadowCamera.near, shadowCamera.far, type );\n\n\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\trenderObject( children[ i ], camera, shadowCamera, light, type );\n\n\t\t}\n\n\t}\n\n}\n\nfunction WebGLState( gl, extensions, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tfunction ColorBuffer() {\n\n\t\tlet locked = false;\n\n\t\tconst color = new Vector4();\n\t\tlet currentColorMask = null;\n\t\tconst currentColorClear = new Vector4( 0, 0, 0, 0 );\n\n\t\treturn {\n\n\t\t\tsetMask: function ( colorMask ) {\n\n\t\t\t\tif ( currentColorMask !== colorMask && ! locked ) {\n\n\t\t\t\t\tgl.colorMask( colorMask, colorMask, colorMask, colorMask );\n\t\t\t\t\tcurrentColorMask = colorMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( r, g, b, a, premultipliedAlpha ) {\n\n\t\t\t\tif ( premultipliedAlpha === true ) {\n\n\t\t\t\t\tr *= a; g *= a; b *= a;\n\n\t\t\t\t}\n\n\t\t\t\tcolor.set( r, g, b, a );\n\n\t\t\t\tif ( currentColorClear.equals( color ) === false ) {\n\n\t\t\t\t\tgl.clearColor( r, g, b, a );\n\t\t\t\t\tcurrentColorClear.copy( color );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentColorMask = null;\n\t\t\t\tcurrentColorClear.set( - 1, 0, 0, 0 ); // set to invalid state\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction DepthBuffer() {\n\n\t\tlet locked = false;\n\n\t\tlet currentDepthMask = null;\n\t\tlet currentDepthFunc = null;\n\t\tlet currentDepthClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( depthTest ) {\n\n\t\t\t\tif ( depthTest ) {\n\n\t\t\t\t\tenable( 2929 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdisable( 2929 );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( depthMask ) {\n\n\t\t\t\tif ( currentDepthMask !== depthMask && ! locked ) {\n\n\t\t\t\t\tgl.depthMask( depthMask );\n\t\t\t\t\tcurrentDepthMask = depthMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( depthFunc ) {\n\n\t\t\t\tif ( currentDepthFunc !== depthFunc ) {\n\n\t\t\t\t\tif ( depthFunc ) {\n\n\t\t\t\t\t\tswitch ( depthFunc ) {\n\n\t\t\t\t\t\t\tcase NeverDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 512 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase AlwaysDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 519 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase LessDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 513 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase LessEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 515 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase EqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 514 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase GreaterEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 518 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase GreaterDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 516 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase NotEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 517 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 515 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tgl.depthFunc( 515 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentDepthFunc = depthFunc;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( depth ) {\n\n\t\t\t\tif ( currentDepthClear !== depth ) {\n\n\t\t\t\t\tgl.clearDepth( depth );\n\t\t\t\t\tcurrentDepthClear = depth;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentDepthMask = null;\n\t\t\t\tcurrentDepthFunc = null;\n\t\t\t\tcurrentDepthClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction StencilBuffer() {\n\n\t\tlet locked = false;\n\n\t\tlet currentStencilMask = null;\n\t\tlet currentStencilFunc = null;\n\t\tlet currentStencilRef = null;\n\t\tlet currentStencilFuncMask = null;\n\t\tlet currentStencilFail = null;\n\t\tlet currentStencilZFail = null;\n\t\tlet currentStencilZPass = null;\n\t\tlet currentStencilClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( stencilTest ) {\n\n\t\t\t\tif ( ! locked ) {\n\n\t\t\t\t\tif ( stencilTest ) {\n\n\t\t\t\t\t\tenable( 2960 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tdisable( 2960 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( stencilMask ) {\n\n\t\t\t\tif ( currentStencilMask !== stencilMask && ! locked ) {\n\n\t\t\t\t\tgl.stencilMask( stencilMask );\n\t\t\t\t\tcurrentStencilMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( stencilFunc, stencilRef, stencilMask ) {\n\n\t\t\t\tif ( currentStencilFunc !== stencilFunc ||\n\t\t\t\t     currentStencilRef !== stencilRef ||\n\t\t\t\t     currentStencilFuncMask !== stencilMask ) {\n\n\t\t\t\t\tgl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n\n\t\t\t\t\tcurrentStencilFunc = stencilFunc;\n\t\t\t\t\tcurrentStencilRef = stencilRef;\n\t\t\t\t\tcurrentStencilFuncMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetOp: function ( stencilFail, stencilZFail, stencilZPass ) {\n\n\t\t\t\tif ( currentStencilFail !== stencilFail ||\n\t\t\t\t     currentStencilZFail !== stencilZFail ||\n\t\t\t\t     currentStencilZPass !== stencilZPass ) {\n\n\t\t\t\t\tgl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n\n\t\t\t\t\tcurrentStencilFail = stencilFail;\n\t\t\t\t\tcurrentStencilZFail = stencilZFail;\n\t\t\t\t\tcurrentStencilZPass = stencilZPass;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( stencil ) {\n\n\t\t\t\tif ( currentStencilClear !== stencil ) {\n\n\t\t\t\t\tgl.clearStencil( stencil );\n\t\t\t\t\tcurrentStencilClear = stencil;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentStencilMask = null;\n\t\t\t\tcurrentStencilFunc = null;\n\t\t\t\tcurrentStencilRef = null;\n\t\t\t\tcurrentStencilFuncMask = null;\n\t\t\t\tcurrentStencilFail = null;\n\t\t\t\tcurrentStencilZFail = null;\n\t\t\t\tcurrentStencilZPass = null;\n\t\t\t\tcurrentStencilClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t//\n\n\tconst colorBuffer = new ColorBuffer();\n\tconst depthBuffer = new DepthBuffer();\n\tconst stencilBuffer = new StencilBuffer();\n\n\tlet enabledCapabilities = {};\n\n\tlet currentBoundFramebuffers = {};\n\tlet currentDrawbuffers = new WeakMap();\n\tlet defaultDrawbuffers = [];\n\n\tlet currentProgram = null;\n\n\tlet currentBlendingEnabled = false;\n\tlet currentBlending = null;\n\tlet currentBlendEquation = null;\n\tlet currentBlendSrc = null;\n\tlet currentBlendDst = null;\n\tlet currentBlendEquationAlpha = null;\n\tlet currentBlendSrcAlpha = null;\n\tlet currentBlendDstAlpha = null;\n\tlet currentPremultipledAlpha = false;\n\n\tlet currentFlipSided = null;\n\tlet currentCullFace = null;\n\n\tlet currentLineWidth = null;\n\n\tlet currentPolygonOffsetFactor = null;\n\tlet currentPolygonOffsetUnits = null;\n\n\tconst maxTextures = gl.getParameter( 35661 );\n\n\tlet lineWidthAvailable = false;\n\tlet version = 0;\n\tconst glVersion = gl.getParameter( 7938 );\n\n\tif ( glVersion.indexOf( 'WebGL' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^WebGL (\\d)/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 1.0 );\n\n\t} else if ( glVersion.indexOf( 'OpenGL ES' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^OpenGL ES (\\d)/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 2.0 );\n\n\t}\n\n\tlet currentTextureSlot = null;\n\tlet currentBoundTextures = {};\n\n\tconst scissorParam = gl.getParameter( 3088 );\n\tconst viewportParam = gl.getParameter( 2978 );\n\n\tconst currentScissor = new Vector4().fromArray( scissorParam );\n\tconst currentViewport = new Vector4().fromArray( viewportParam );\n\n\tfunction createTexture( type, target, count ) {\n\n\t\tconst data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.\n\t\tconst texture = gl.createTexture();\n\n\t\tgl.bindTexture( type, texture );\n\t\tgl.texParameteri( type, 10241, 9728 );\n\t\tgl.texParameteri( type, 10240, 9728 );\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tgl.texImage2D( target + i, 0, 6408, 1, 1, 0, 6408, 5121, data );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tconst emptyTextures = {};\n\temptyTextures[ 3553 ] = createTexture( 3553, 3553, 1 );\n\temptyTextures[ 34067 ] = createTexture( 34067, 34069, 6 );\n\n\t// init\n\n\tcolorBuffer.setClear( 0, 0, 0, 1 );\n\tdepthBuffer.setClear( 1 );\n\tstencilBuffer.setClear( 0 );\n\n\tenable( 2929 );\n\tdepthBuffer.setFunc( LessEqualDepth );\n\n\tsetFlipSided( false );\n\tsetCullFace( CullFaceBack );\n\tenable( 2884 );\n\n\tsetBlending( NoBlending );\n\n\t//\n\n\tfunction enable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== true ) {\n\n\t\t\tgl.enable( id );\n\t\t\tenabledCapabilities[ id ] = true;\n\n\t\t}\n\n\t}\n\n\tfunction disable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== false ) {\n\n\t\t\tgl.disable( id );\n\t\t\tenabledCapabilities[ id ] = false;\n\n\t\t}\n\n\t}\n\n\tfunction bindFramebuffer( target, framebuffer ) {\n\n\t\tif ( currentBoundFramebuffers[ target ] !== framebuffer ) {\n\n\t\t\tgl.bindFramebuffer( target, framebuffer );\n\n\t\t\tcurrentBoundFramebuffers[ target ] = framebuffer;\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t// 36009 is equivalent to 36160\n\n\t\t\t\tif ( target === 36009 ) {\n\n\t\t\t\t\tcurrentBoundFramebuffers[ 36160 ] = framebuffer;\n\n\t\t\t\t}\n\n\t\t\t\tif ( target === 36160 ) {\n\n\t\t\t\t\tcurrentBoundFramebuffers[ 36009 ] = framebuffer;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction drawBuffers( renderTarget, framebuffer ) {\n\n\t\tlet drawBuffers = defaultDrawbuffers;\n\n\t\tlet needsUpdate = false;\n\n\t\tif ( renderTarget ) {\n\n\t\t\tdrawBuffers = currentDrawbuffers.get( framebuffer );\n\n\t\t\tif ( drawBuffers === undefined ) {\n\n\t\t\t\tdrawBuffers = [];\n\t\t\t\tcurrentDrawbuffers.set( framebuffer, drawBuffers );\n\n\t\t\t}\n\n\t\t\tif ( renderTarget.isWebGLMultipleRenderTargets ) {\n\n\t\t\t\tconst textures = renderTarget.texture;\n\n\t\t\t\tif ( drawBuffers.length !== textures.length || drawBuffers[ 0 ] !== 36064 ) {\n\n\t\t\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tdrawBuffers[ i ] = 36064 + i;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tdrawBuffers.length = textures.length;\n\n\t\t\t\t\tneedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( drawBuffers[ 0 ] !== 36064 ) {\n\n\t\t\t\t\tdrawBuffers[ 0 ] = 36064;\n\n\t\t\t\t\tneedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( drawBuffers[ 0 ] !== 1029 ) {\n\n\t\t\t\tdrawBuffers[ 0 ] = 1029;\n\n\t\t\t\tneedsUpdate = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( needsUpdate ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\tgl.drawBuffers( drawBuffers );\n\n\t\t\t} else {\n\n\t\t\t\textensions.get( 'WEBGL_draw_buffers' ).drawBuffersWEBGL( drawBuffers );\n\n\t\t\t}\n\n\t\t}\n\n\n\t}\n\n\tfunction useProgram( program ) {\n\n\t\tif ( currentProgram !== program ) {\n\n\t\t\tgl.useProgram( program );\n\n\t\t\tcurrentProgram = program;\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tconst equationToGL = {\n\t\t[ AddEquation ]: 32774,\n\t\t[ SubtractEquation ]: 32778,\n\t\t[ ReverseSubtractEquation ]: 32779\n\t};\n\n\tif ( isWebGL2 ) {\n\n\t\tequationToGL[ MinEquation ] = 32775;\n\t\tequationToGL[ MaxEquation ] = 32776;\n\n\t} else {\n\n\t\tconst extension = extensions.get( 'EXT_blend_minmax' );\n\n\t\tif ( extension !== null ) {\n\n\t\t\tequationToGL[ MinEquation ] = extension.MIN_EXT;\n\t\t\tequationToGL[ MaxEquation ] = extension.MAX_EXT;\n\n\t\t}\n\n\t}\n\n\tconst factorToGL = {\n\t\t[ ZeroFactor ]: 0,\n\t\t[ OneFactor ]: 1,\n\t\t[ SrcColorFactor ]: 768,\n\t\t[ SrcAlphaFactor ]: 770,\n\t\t[ SrcAlphaSaturateFactor ]: 776,\n\t\t[ DstColorFactor ]: 774,\n\t\t[ DstAlphaFactor ]: 772,\n\t\t[ OneMinusSrcColorFactor ]: 769,\n\t\t[ OneMinusSrcAlphaFactor ]: 771,\n\t\t[ OneMinusDstColorFactor ]: 775,\n\t\t[ OneMinusDstAlphaFactor ]: 773\n\t};\n\n\tfunction setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha ) {\n\n\t\tif ( blending === NoBlending ) {\n\n\t\t\tif ( currentBlendingEnabled === true ) {\n\n\t\t\t\tdisable( 3042 );\n\t\t\t\tcurrentBlendingEnabled = false;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( currentBlendingEnabled === false ) {\n\n\t\t\tenable( 3042 );\n\t\t\tcurrentBlendingEnabled = true;\n\n\t\t}\n\n\t\tif ( blending !== CustomBlending ) {\n\n\t\t\tif ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\n\n\t\t\t\tif ( currentBlendEquation !== AddEquation || currentBlendEquationAlpha !== AddEquation ) {\n\n\t\t\t\t\tgl.blendEquation( 32774 );\n\n\t\t\t\t\tcurrentBlendEquation = AddEquation;\n\t\t\t\t\tcurrentBlendEquationAlpha = AddEquation;\n\n\t\t\t\t}\n\n\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 1, 771, 1, 771 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( 1, 1 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 0, 769, 0, 1 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 0, 768, 0, 770 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 770, 771, 1, 771 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( 770, 1 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 0, 769, 0, 1 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFunc( 0, 768 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tcurrentBlendSrc = null;\n\t\t\t\tcurrentBlendDst = null;\n\t\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\t\tcurrentBlendDstAlpha = null;\n\n\t\t\t\tcurrentBlending = blending;\n\t\t\t\tcurrentPremultipledAlpha = premultipliedAlpha;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// custom blending\n\n\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\n\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\n\t\tblendDstAlpha = blendDstAlpha || blendDst;\n\n\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\n\n\t\t\tgl.blendEquationSeparate( equationToGL[ blendEquation ], equationToGL[ blendEquationAlpha ] );\n\n\t\t\tcurrentBlendEquation = blendEquation;\n\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\n\n\t\t}\n\n\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\n\n\t\t\tgl.blendFuncSeparate( factorToGL[ blendSrc ], factorToGL[ blendDst ], factorToGL[ blendSrcAlpha ], factorToGL[ blendDstAlpha ] );\n\n\t\t\tcurrentBlendSrc = blendSrc;\n\t\t\tcurrentBlendDst = blendDst;\n\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\n\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\n\n\t\t}\n\n\t\tcurrentBlending = blending;\n\t\tcurrentPremultipledAlpha = null;\n\n\t}\n\n\tfunction setMaterial( material, frontFaceCW ) {\n\n\t\tmaterial.side === DoubleSide\n\t\t\t? disable( 2884 )\n\t\t\t: enable( 2884 );\n\n\t\tlet flipSided = ( material.side === BackSide );\n\t\tif ( frontFaceCW ) flipSided = ! flipSided;\n\n\t\tsetFlipSided( flipSided );\n\n\t\t( material.blending === NormalBlending && material.transparent === false )\n\t\t\t? setBlending( NoBlending )\n\t\t\t: setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha );\n\n\t\tdepthBuffer.setFunc( material.depthFunc );\n\t\tdepthBuffer.setTest( material.depthTest );\n\t\tdepthBuffer.setMask( material.depthWrite );\n\t\tcolorBuffer.setMask( material.colorWrite );\n\n\t\tconst stencilWrite = material.stencilWrite;\n\t\tstencilBuffer.setTest( stencilWrite );\n\t\tif ( stencilWrite ) {\n\n\t\t\tstencilBuffer.setMask( material.stencilWriteMask );\n\t\t\tstencilBuffer.setFunc( material.stencilFunc, material.stencilRef, material.stencilFuncMask );\n\t\t\tstencilBuffer.setOp( material.stencilFail, material.stencilZFail, material.stencilZPass );\n\n\t\t}\n\n\t\tsetPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\n\n\t\tmaterial.alphaToCoverage === true\n\t\t\t? enable( 32926 )\n\t\t\t: disable( 32926 );\n\n\t}\n\n\t//\n\n\tfunction setFlipSided( flipSided ) {\n\n\t\tif ( currentFlipSided !== flipSided ) {\n\n\t\t\tif ( flipSided ) {\n\n\t\t\t\tgl.frontFace( 2304 );\n\n\t\t\t} else {\n\n\t\t\t\tgl.frontFace( 2305 );\n\n\t\t\t}\n\n\t\t\tcurrentFlipSided = flipSided;\n\n\t\t}\n\n\t}\n\n\tfunction setCullFace( cullFace ) {\n\n\t\tif ( cullFace !== CullFaceNone ) {\n\n\t\t\tenable( 2884 );\n\n\t\t\tif ( cullFace !== currentCullFace ) {\n\n\t\t\t\tif ( cullFace === CullFaceBack ) {\n\n\t\t\t\t\tgl.cullFace( 1029 );\n\n\t\t\t\t} else if ( cullFace === CullFaceFront ) {\n\n\t\t\t\t\tgl.cullFace( 1028 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.cullFace( 1032 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( 2884 );\n\n\t\t}\n\n\t\tcurrentCullFace = cullFace;\n\n\t}\n\n\tfunction setLineWidth( width ) {\n\n\t\tif ( width !== currentLineWidth ) {\n\n\t\t\tif ( lineWidthAvailable ) gl.lineWidth( width );\n\n\t\t\tcurrentLineWidth = width;\n\n\t\t}\n\n\t}\n\n\tfunction setPolygonOffset( polygonOffset, factor, units ) {\n\n\t\tif ( polygonOffset ) {\n\n\t\t\tenable( 32823 );\n\n\t\t\tif ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\n\n\t\t\t\tgl.polygonOffset( factor, units );\n\n\t\t\t\tcurrentPolygonOffsetFactor = factor;\n\t\t\t\tcurrentPolygonOffsetUnits = units;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( 32823 );\n\n\t\t}\n\n\t}\n\n\tfunction setScissorTest( scissorTest ) {\n\n\t\tif ( scissorTest ) {\n\n\t\t\tenable( 3089 );\n\n\t\t} else {\n\n\t\t\tdisable( 3089 );\n\n\t\t}\n\n\t}\n\n\t// texture\n\n\tfunction activeTexture( webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) webglSlot = 33984 + maxTextures - 1;\n\n\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\tgl.activeTexture( webglSlot );\n\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t}\n\n\t}\n\n\tfunction bindTexture( webglType, webglTexture ) {\n\n\t\tif ( currentTextureSlot === null ) {\n\n\t\t\tactiveTexture();\n\n\t\t}\n\n\t\tlet boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\tif ( boundTexture === undefined ) {\n\n\t\t\tboundTexture = { type: undefined, texture: undefined };\n\t\t\tcurrentBoundTextures[ currentTextureSlot ] = boundTexture;\n\n\t\t}\n\n\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\n\n\t\t\tgl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\n\n\t\t\tboundTexture.type = webglType;\n\t\t\tboundTexture.texture = webglTexture;\n\n\t\t}\n\n\t}\n\n\tfunction unbindTexture() {\n\n\t\tconst boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\tif ( boundTexture !== undefined && boundTexture.type !== undefined ) {\n\n\t\t\tgl.bindTexture( boundTexture.type, null );\n\n\t\t\tboundTexture.type = undefined;\n\t\t\tboundTexture.texture = undefined;\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texSubImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texSubImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texSubImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texSubImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexSubImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexSubImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texStorage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texStorage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texStorage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texStorage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction scissor( scissor ) {\n\n\t\tif ( currentScissor.equals( scissor ) === false ) {\n\n\t\t\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\n\t\t\tcurrentScissor.copy( scissor );\n\n\t\t}\n\n\t}\n\n\tfunction viewport( viewport ) {\n\n\t\tif ( currentViewport.equals( viewport ) === false ) {\n\n\t\t\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\n\t\t\tcurrentViewport.copy( viewport );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction reset() {\n\n\t\t// reset state\n\n\t\tgl.disable( 3042 );\n\t\tgl.disable( 2884 );\n\t\tgl.disable( 2929 );\n\t\tgl.disable( 32823 );\n\t\tgl.disable( 3089 );\n\t\tgl.disable( 2960 );\n\t\tgl.disable( 32926 );\n\n\t\tgl.blendEquation( 32774 );\n\t\tgl.blendFunc( 1, 0 );\n\t\tgl.blendFuncSeparate( 1, 0, 1, 0 );\n\n\t\tgl.colorMask( true, true, true, true );\n\t\tgl.clearColor( 0, 0, 0, 0 );\n\n\t\tgl.depthMask( true );\n\t\tgl.depthFunc( 513 );\n\t\tgl.clearDepth( 1 );\n\n\t\tgl.stencilMask( 0xffffffff );\n\t\tgl.stencilFunc( 519, 0, 0xffffffff );\n\t\tgl.stencilOp( 7680, 7680, 7680 );\n\t\tgl.clearStencil( 0 );\n\n\t\tgl.cullFace( 1029 );\n\t\tgl.frontFace( 2305 );\n\n\t\tgl.polygonOffset( 0, 0 );\n\n\t\tgl.activeTexture( 33984 );\n\n\t\tgl.bindFramebuffer( 36160, null );\n\n\t\tif ( isWebGL2 === true ) {\n\n\t\t\tgl.bindFramebuffer( 36009, null );\n\t\t\tgl.bindFramebuffer( 36008, null );\n\n\t\t}\n\n\t\tgl.useProgram( null );\n\n\t\tgl.lineWidth( 1 );\n\n\t\tgl.scissor( 0, 0, gl.canvas.width, gl.canvas.height );\n\t\tgl.viewport( 0, 0, gl.canvas.width, gl.canvas.height );\n\n\t\t// reset internals\n\n\t\tenabledCapabilities = {};\n\n\t\tcurrentTextureSlot = null;\n\t\tcurrentBoundTextures = {};\n\n\t\tcurrentBoundFramebuffers = {};\n\t\tcurrentDrawbuffers = new WeakMap();\n\t\tdefaultDrawbuffers = [];\n\n\t\tcurrentProgram = null;\n\n\t\tcurrentBlendingEnabled = false;\n\t\tcurrentBlending = null;\n\t\tcurrentBlendEquation = null;\n\t\tcurrentBlendSrc = null;\n\t\tcurrentBlendDst = null;\n\t\tcurrentBlendEquationAlpha = null;\n\t\tcurrentBlendSrcAlpha = null;\n\t\tcurrentBlendDstAlpha = null;\n\t\tcurrentPremultipledAlpha = false;\n\n\t\tcurrentFlipSided = null;\n\t\tcurrentCullFace = null;\n\n\t\tcurrentLineWidth = null;\n\n\t\tcurrentPolygonOffsetFactor = null;\n\t\tcurrentPolygonOffsetUnits = null;\n\n\t\tcurrentScissor.set( 0, 0, gl.canvas.width, gl.canvas.height );\n\t\tcurrentViewport.set( 0, 0, gl.canvas.width, gl.canvas.height );\n\n\t\tcolorBuffer.reset();\n\t\tdepthBuffer.reset();\n\t\tstencilBuffer.reset();\n\n\t}\n\n\treturn {\n\n\t\tbuffers: {\n\t\t\tcolor: colorBuffer,\n\t\t\tdepth: depthBuffer,\n\t\t\tstencil: stencilBuffer\n\t\t},\n\n\t\tenable: enable,\n\t\tdisable: disable,\n\n\t\tbindFramebuffer: bindFramebuffer,\n\t\tdrawBuffers: drawBuffers,\n\n\t\tuseProgram: useProgram,\n\n\t\tsetBlending: setBlending,\n\t\tsetMaterial: setMaterial,\n\n\t\tsetFlipSided: setFlipSided,\n\t\tsetCullFace: setCullFace,\n\n\t\tsetLineWidth: setLineWidth,\n\t\tsetPolygonOffset: setPolygonOffset,\n\n\t\tsetScissorTest: setScissorTest,\n\n\t\tactiveTexture: activeTexture,\n\t\tbindTexture: bindTexture,\n\t\tunbindTexture: unbindTexture,\n\t\tcompressedTexImage2D: compressedTexImage2D,\n\t\ttexImage2D: texImage2D,\n\t\ttexImage3D: texImage3D,\n\n\t\ttexStorage2D: texStorage2D,\n\t\ttexStorage3D: texStorage3D,\n\t\ttexSubImage2D: texSubImage2D,\n\t\ttexSubImage3D: texSubImage3D,\n\t\tcompressedTexSubImage2D: compressedTexSubImage2D,\n\n\t\tscissor: scissor,\n\t\tviewport: viewport,\n\n\t\treset: reset\n\n\t};\n\n}\n\nfunction WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\tconst maxTextures = capabilities.maxTextures;\n\tconst maxCubemapSize = capabilities.maxCubemapSize;\n\tconst maxTextureSize = capabilities.maxTextureSize;\n\tconst maxSamples = capabilities.maxSamples;\n\tconst multisampledRTTExt = extensions.has( 'WEBGL_multisampled_render_to_texture' ) ? extensions.get( 'WEBGL_multisampled_render_to_texture' ) : null;\n\tconst supportsInvalidateFramebuffer = /OculusBrowser/g.test( navigator.userAgent );\n\n\tconst _videoTextures = new WeakMap();\n\tlet _canvas;\n\n\tconst _sources = new WeakMap(); // maps WebglTexture objects to instances of Source\n\n\t// cordova iOS (as of 5.0) still uses UIWebView, which provides OffscreenCanvas,\n\t// also OffscreenCanvas.getContext(\"webgl\"), but not OffscreenCanvas.getContext(\"2d\")!\n\t// Some implementations may only implement OffscreenCanvas partially (e.g. lacking 2d).\n\n\tlet useOffscreenCanvas = false;\n\n\ttry {\n\n\t\tuseOffscreenCanvas = typeof OffscreenCanvas !== 'undefined'\n\t\t\t// eslint-disable-next-line compat/compat\n\t\t\t&& ( new OffscreenCanvas( 1, 1 ).getContext( '2d' ) ) !== null;\n\n\t} catch ( err ) {\n\n\t\t// Ignore any errors\n\n\t}\n\n\tfunction createCanvas( width, height ) {\n\n\t\t// Use OffscreenCanvas when available. Specially needed in web workers\n\n\t\treturn useOffscreenCanvas ?\n\t\t\t// eslint-disable-next-line compat/compat\n\t\t\tnew OffscreenCanvas( width, height ) : createElementNS( 'canvas' );\n\n\t}\n\n\tfunction resizeImage( image, needsPowerOfTwo, needsNewCanvas, maxSize ) {\n\n\t\tlet scale = 1;\n\n\t\t// handle case if texture exceeds max size\n\n\t\tif ( image.width > maxSize || image.height > maxSize ) {\n\n\t\t\tscale = maxSize / Math.max( image.width, image.height );\n\n\t\t}\n\n\t\t// only perform resize if necessary\n\n\t\tif ( scale < 1 || needsPowerOfTwo === true ) {\n\n\t\t\t// only perform resize for certain image types\n\n\t\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t\t\tconst floor = needsPowerOfTwo ? floorPowerOfTwo : Math.floor;\n\n\t\t\t\tconst width = floor( scale * image.width );\n\t\t\t\tconst height = floor( scale * image.height );\n\n\t\t\t\tif ( _canvas === undefined ) _canvas = createCanvas( width, height );\n\n\t\t\t\t// cube textures can't reuse the same canvas\n\n\t\t\t\tconst canvas = needsNewCanvas ? createCanvas( width, height ) : _canvas;\n\n\t\t\t\tcanvas.width = width;\n\t\t\t\tcanvas.height = height;\n\n\t\t\t\tconst context = canvas.getContext( '2d' );\n\t\t\t\tcontext.drawImage( image, 0, 0, width, height );\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture has been resized from (' + image.width + 'x' + image.height + ') to (' + width + 'x' + height + ').' );\n\n\t\t\t\treturn canvas;\n\n\t\t\t} else {\n\n\t\t\t\tif ( 'data' in image ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Image in DataTexture is too big (' + image.width + 'x' + image.height + ').' );\n\n\t\t\t\t}\n\n\t\t\t\treturn image;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\tfunction isPowerOfTwo$1( image ) {\n\n\t\treturn isPowerOfTwo( image.width ) && isPowerOfTwo( image.height );\n\n\t}\n\n\tfunction textureNeedsPowerOfTwo( texture ) {\n\n\t\tif ( isWebGL2 ) return false;\n\n\t\treturn ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) ||\n\t\t\t( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter );\n\n\t}\n\n\tfunction textureNeedsGenerateMipmaps( texture, supportsMips ) {\n\n\t\treturn texture.generateMipmaps && supportsMips &&\n\t\t\ttexture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n\n\t}\n\n\tfunction generateMipmap( target ) {\n\n\t\t_gl.generateMipmap( target );\n\n\t}\n\n\tfunction getInternalFormat( internalFormatName, glFormat, glType, encoding, isVideoTexture = false ) {\n\n\t\tif ( isWebGL2 === false ) return glFormat;\n\n\t\tif ( internalFormatName !== null ) {\n\n\t\t\tif ( _gl[ internalFormatName ] !== undefined ) return _gl[ internalFormatName ];\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format \\'' + internalFormatName + '\\'' );\n\n\t\t}\n\n\t\tlet internalFormat = glFormat;\n\n\t\tif ( glFormat === 6403 ) {\n\n\t\t\tif ( glType === 5126 ) internalFormat = 33326;\n\t\t\tif ( glType === 5131 ) internalFormat = 33325;\n\t\t\tif ( glType === 5121 ) internalFormat = 33321;\n\n\t\t}\n\n\t\tif ( glFormat === 33319 ) {\n\n\t\t\tif ( glType === 5126 ) internalFormat = 33328;\n\t\t\tif ( glType === 5131 ) internalFormat = 33327;\n\t\t\tif ( glType === 5121 ) internalFormat = 33323;\n\n\t\t}\n\n\t\tif ( glFormat === 6408 ) {\n\n\t\t\tif ( glType === 5126 ) internalFormat = 34836;\n\t\t\tif ( glType === 5131 ) internalFormat = 34842;\n\t\t\tif ( glType === 5121 ) internalFormat = ( encoding === sRGBEncoding && isVideoTexture === false ) ? 35907 : 32856;\n\t\t\tif ( glType === 32819 ) internalFormat = 32854;\n\t\t\tif ( glType === 32820 ) internalFormat = 32855;\n\n\t\t}\n\n\t\tif ( internalFormat === 33325 || internalFormat === 33326 ||\n\t\t\tinternalFormat === 33327 || internalFormat === 33328 ||\n\t\t\tinternalFormat === 34842 || internalFormat === 34836 ) {\n\n\t\t\textensions.get( 'EXT_color_buffer_float' );\n\n\t\t}\n\n\t\treturn internalFormat;\n\n\t}\n\n\tfunction getMipLevels( texture, image, supportsMips ) {\n\n\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) === true || ( texture.isFramebufferTexture && texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) ) {\n\n\t\t\treturn Math.log2( Math.max( image.width, image.height ) ) + 1;\n\n\t\t} else if ( texture.mipmaps !== undefined && texture.mipmaps.length > 0 ) {\n\n\t\t\t// user-defined mipmaps\n\n\t\t\treturn texture.mipmaps.length;\n\n\t\t} else if ( texture.isCompressedTexture && Array.isArray( texture.image ) ) {\n\n\t\t\treturn image.mipmaps.length;\n\n\t\t} else {\n\n\t\t\t// texture without mipmaps (only base level)\n\n\t\t\treturn 1;\n\n\t\t}\n\n\t}\n\n\t// Fallback filters for non-power-of-2 textures\n\n\tfunction filterFallback( f ) {\n\n\t\tif ( f === NearestFilter || f === NearestMipmapNearestFilter || f === NearestMipmapLinearFilter ) {\n\n\t\t\treturn 9728;\n\n\t\t}\n\n\t\treturn 9729;\n\n\t}\n\n\t//\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tdeallocateTexture( texture );\n\n\t\tif ( texture.isVideoTexture ) {\n\n\t\t\t_videoTextures.delete( texture );\n\n\t\t}\n\n\t}\n\n\tfunction onRenderTargetDispose( event ) {\n\n\t\tconst renderTarget = event.target;\n\n\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tdeallocateRenderTarget( renderTarget );\n\n\t}\n\n\t//\n\n\tfunction deallocateTexture( texture ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( textureProperties.__webglInit === undefined ) return;\n\n\t\t// check if it's necessary to remove the WebGLTexture object\n\n\t\tconst source = texture.source;\n\t\tconst webglTextures = _sources.get( source );\n\n\t\tif ( webglTextures ) {\n\n\t\t\tconst webglTexture = webglTextures[ textureProperties.__cacheKey ];\n\t\t\twebglTexture.usedTimes --;\n\n\t\t\t// the WebGLTexture object is not used anymore, remove it\n\n\t\t\tif ( webglTexture.usedTimes === 0 ) {\n\n\t\t\t\tdeleteTexture( texture );\n\n\t\t\t}\n\n\t\t\t// remove the weak map entry if no WebGLTexture uses the source anymore\n\n\t\t\tif ( Object.keys( webglTextures ).length === 0 ) {\n\n\t\t\t\t_sources.delete( source );\n\n\t\t\t}\n\n\t\t}\n\n\t\tproperties.remove( texture );\n\n\t}\n\n\tfunction deleteTexture( texture ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\tconst source = texture.source;\n\t\tconst webglTextures = _sources.get( source );\n\t\tdelete webglTextures[ textureProperties.__cacheKey ];\n\n\t\tinfo.memory.textures --;\n\n\t}\n\n\tfunction deallocateRenderTarget( renderTarget ) {\n\n\t\tconst texture = renderTarget.texture;\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( textureProperties.__webglTexture !== undefined ) {\n\n\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t\tinfo.memory.textures --;\n\n\t\t}\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\trenderTarget.depthTexture.dispose();\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\n\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );\n\t\t\tif ( renderTargetProperties.__webglMultisampledFramebuffer ) _gl.deleteFramebuffer( renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\tif ( renderTargetProperties.__webglColorRenderbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglColorRenderbuffer );\n\t\t\tif ( renderTargetProperties.__webglDepthRenderbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthRenderbuffer );\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLMultipleRenderTargets ) {\n\n\t\t\tfor ( let i = 0, il = texture.length; i < il; i ++ ) {\n\n\t\t\t\tconst attachmentProperties = properties.get( texture[ i ] );\n\n\t\t\t\tif ( attachmentProperties.__webglTexture ) {\n\n\t\t\t\t\t_gl.deleteTexture( attachmentProperties.__webglTexture );\n\n\t\t\t\t\tinfo.memory.textures --;\n\n\t\t\t\t}\n\n\t\t\t\tproperties.remove( texture[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tproperties.remove( texture );\n\t\tproperties.remove( renderTarget );\n\n\t}\n\n\t//\n\n\tlet textureUnits = 0;\n\n\tfunction resetTextureUnits() {\n\n\t\ttextureUnits = 0;\n\n\t}\n\n\tfunction allocateTextureUnit() {\n\n\t\tconst textureUnit = textureUnits;\n\n\t\tif ( textureUnit >= maxTextures ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLTextures: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + maxTextures );\n\n\t\t}\n\n\t\ttextureUnits += 1;\n\n\t\treturn textureUnit;\n\n\t}\n\n\tfunction getTextureCacheKey( texture ) {\n\n\t\tconst array = [];\n\n\t\tarray.push( texture.wrapS );\n\t\tarray.push( texture.wrapT );\n\t\tarray.push( texture.magFilter );\n\t\tarray.push( texture.minFilter );\n\t\tarray.push( texture.anisotropy );\n\t\tarray.push( texture.internalFormat );\n\t\tarray.push( texture.format );\n\t\tarray.push( texture.type );\n\t\tarray.push( texture.generateMipmaps );\n\t\tarray.push( texture.premultiplyAlpha );\n\t\tarray.push( texture.flipY );\n\t\tarray.push( texture.unpackAlignment );\n\t\tarray.push( texture.encoding );\n\n\t\treturn array.join();\n\n\t}\n\n\t//\n\n\tfunction setTexture2D( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.isVideoTexture ) updateVideoTexture( texture );\n\n\t\tif ( texture.isRenderTargetTexture === false && texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tconst image = texture.image;\n\n\t\t\tif ( image === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but no image data found.' );\n\n\t\t\t} else if ( image.complete === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete' );\n\n\t\t\t} else {\n\n\t\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( 3553, textureProperties.__webglTexture );\n\n\t}\n\n\tfunction setTexture2DArray( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( 35866, textureProperties.__webglTexture );\n\n\t}\n\n\tfunction setTexture3D( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( 32879, textureProperties.__webglTexture );\n\n\t}\n\n\tfunction setTextureCube( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadCubeTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( 34067, textureProperties.__webglTexture );\n\n\t}\n\n\tconst wrappingToGL = {\n\t\t[ RepeatWrapping ]: 10497,\n\t\t[ ClampToEdgeWrapping ]: 33071,\n\t\t[ MirroredRepeatWrapping ]: 33648\n\t};\n\n\tconst filterToGL = {\n\t\t[ NearestFilter ]: 9728,\n\t\t[ NearestMipmapNearestFilter ]: 9984,\n\t\t[ NearestMipmapLinearFilter ]: 9986,\n\n\t\t[ LinearFilter ]: 9729,\n\t\t[ LinearMipmapNearestFilter ]: 9985,\n\t\t[ LinearMipmapLinearFilter ]: 9987\n\t};\n\n\tfunction setTextureParameters( textureType, texture, supportsMips ) {\n\n\t\tif ( supportsMips ) {\n\n\t\t\t_gl.texParameteri( textureType, 10242, wrappingToGL[ texture.wrapS ] );\n\t\t\t_gl.texParameteri( textureType, 10243, wrappingToGL[ texture.wrapT ] );\n\n\t\t\tif ( textureType === 32879 || textureType === 35866 ) {\n\n\t\t\t\t_gl.texParameteri( textureType, 32882, wrappingToGL[ texture.wrapR ] );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, 10240, filterToGL[ texture.magFilter ] );\n\t\t\t_gl.texParameteri( textureType, 10241, filterToGL[ texture.minFilter ] );\n\n\t\t} else {\n\n\t\t\t_gl.texParameteri( textureType, 10242, 33071 );\n\t\t\t_gl.texParameteri( textureType, 10243, 33071 );\n\n\t\t\tif ( textureType === 32879 || textureType === 35866 ) {\n\n\t\t\t\t_gl.texParameteri( textureType, 32882, 33071 );\n\n\t\t\t}\n\n\t\t\tif ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.' );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, 10240, filterFallback( texture.magFilter ) );\n\t\t\t_gl.texParameteri( textureType, 10241, filterFallback( texture.minFilter ) );\n\n\t\t\tif ( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\n\n\t\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tif ( texture.type === FloatType && extensions.has( 'OES_texture_float_linear' ) === false ) return; // verify extension for WebGL 1 and WebGL 2\n\t\t\tif ( isWebGL2 === false && ( texture.type === HalfFloatType && extensions.has( 'OES_texture_half_float_linear' ) === false ) ) return; // verify extension for WebGL 1 only\n\n\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\n\n\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );\n\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction initTexture( textureProperties, texture ) {\n\n\t\tlet forceUpload = false;\n\n\t\tif ( textureProperties.__webglInit === undefined ) {\n\n\t\t\ttextureProperties.__webglInit = true;\n\n\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t}\n\n\t\t// create Source <-> WebGLTextures mapping if necessary\n\n\t\tconst source = texture.source;\n\t\tlet webglTextures = _sources.get( source );\n\n\t\tif ( webglTextures === undefined ) {\n\n\t\t\twebglTextures = {};\n\t\t\t_sources.set( source, webglTextures );\n\n\t\t}\n\n\t\t// check if there is already a WebGLTexture object for the given texture parameters\n\n\t\tconst textureCacheKey = getTextureCacheKey( texture );\n\n\t\tif ( textureCacheKey !== textureProperties.__cacheKey ) {\n\n\t\t\t// if not, create a new instance of WebGLTexture\n\n\t\t\tif ( webglTextures[ textureCacheKey ] === undefined ) {\n\n\t\t\t\t// create new entry\n\n\t\t\t\twebglTextures[ textureCacheKey ] = {\n\t\t\t\t\ttexture: _gl.createTexture(),\n\t\t\t\t\tusedTimes: 0\n\t\t\t\t};\n\n\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t\t// when a new instance of WebGLTexture was created, a texture upload is required\n\t\t\t\t// even if the image contents are identical\n\n\t\t\t\tforceUpload = true;\n\n\t\t\t}\n\n\t\t\twebglTextures[ textureCacheKey ].usedTimes ++;\n\n\t\t\t// every time the texture cache key changes, it's necessary to check if an instance of\n\t\t\t// WebGLTexture can be deleted in order to avoid a memory leak.\n\n\t\t\tconst webglTexture = webglTextures[ textureProperties.__cacheKey ];\n\n\t\t\tif ( webglTexture !== undefined ) {\n\n\t\t\t\twebglTextures[ textureProperties.__cacheKey ].usedTimes --;\n\n\t\t\t\tif ( webglTexture.usedTimes === 0 ) {\n\n\t\t\t\t\tdeleteTexture( texture );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// store references to cache key and WebGLTexture object\n\n\t\t\ttextureProperties.__cacheKey = textureCacheKey;\n\t\t\ttextureProperties.__webglTexture = webglTextures[ textureCacheKey ].texture;\n\n\t\t}\n\n\t\treturn forceUpload;\n\n\t}\n\n\tfunction uploadTexture( textureProperties, texture, slot ) {\n\n\t\tlet textureType = 3553;\n\n\t\tif ( texture.isDataArrayTexture ) textureType = 35866;\n\t\tif ( texture.isData3DTexture ) textureType = 32879;\n\n\t\tconst forceUpload = initTexture( textureProperties, texture );\n\t\tconst source = texture.source;\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( textureType, textureProperties.__webglTexture );\n\n\t\tif ( source.version !== source.__currentVersion || forceUpload === true ) {\n\n\t\t\t_gl.pixelStorei( 37440, texture.flipY );\n\t\t\t_gl.pixelStorei( 37441, texture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( 3317, texture.unpackAlignment );\n\t\t\t_gl.pixelStorei( 37443, 0 );\n\n\t\t\tconst needsPowerOfTwo = textureNeedsPowerOfTwo( texture ) && isPowerOfTwo$1( texture.image ) === false;\n\t\t\tlet image = resizeImage( texture.image, needsPowerOfTwo, false, maxTextureSize );\n\t\t\timage = verifyColorSpace( texture, image );\n\n\t\t\tconst supportsMips = isPowerOfTwo$1( image ) || isWebGL2,\n\t\t\t\tglFormat = utils.convert( texture.format, texture.encoding );\n\n\t\t\tlet glType = utils.convert( texture.type ),\n\t\t\t\tglInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.encoding, texture.isVideoTexture );\n\n\t\t\tsetTextureParameters( textureType, texture, supportsMips );\n\n\t\t\tlet mipmap;\n\t\t\tconst mipmaps = texture.mipmaps;\n\n\t\t\tconst useTexStorage = ( isWebGL2 && texture.isVideoTexture !== true );\n\t\t\tconst allocateMemory = ( textureProperties.__version === undefined ) || ( forceUpload === true );\n\t\t\tconst levels = getMipLevels( texture, image, supportsMips );\n\n\t\t\tif ( texture.isDepthTexture ) {\n\n\t\t\t\t// populate depth texture with dummy data\n\n\t\t\t\tglInternalFormat = 6402;\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\t\t\tglInternalFormat = 36012;\n\n\t\t\t\t\t} else if ( texture.type === UnsignedIntType ) {\n\n\t\t\t\t\t\tglInternalFormat = 33190;\n\n\t\t\t\t\t} else if ( texture.type === UnsignedInt248Type ) {\n\n\t\t\t\t\t\tglInternalFormat = 35056;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tglInternalFormat = 33189; // WebGL2 requires sized internalformat for glTexImage2D\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\t\t\tconsole.error( 'WebGLRenderer: Floating point depth texture requires WebGL2.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// validation checks for WebGL 1\n\n\t\t\t\tif ( texture.format === DepthFormat && glInternalFormat === 6402 ) {\n\n\t\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t\t// DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tif ( texture.type !== UnsignedShortType && texture.type !== UnsignedIntType ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.' );\n\n\t\t\t\t\t\ttexture.type = UnsignedShortType;\n\t\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( texture.format === DepthStencilFormat && glInternalFormat === 6402 ) {\n\n\t\t\t\t\t// Depth stencil textures need the DEPTH_STENCIL internal format\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tglInternalFormat = 34041;\n\n\t\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t\t// DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tif ( texture.type !== UnsignedInt248Type ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.' );\n\n\t\t\t\t\t\ttexture.type = UnsignedInt248Type;\n\t\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t//\n\n\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tstate.texStorage2D( 3553, 1, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( 3553, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isDataTexture ) {\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( 3553, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( 3553, i, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\t\tstate.texStorage2D( 3553, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstate.texSubImage2D( 3553, 0, 0, 0, image.width, image.height, glFormat, glType, image.data );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( 3553, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, image.data );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isCompressedTexture ) {\n\n\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\tstate.texStorage2D( 3553, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.compressedTexSubImage2D( 3553, i, 0, 0, mipmap.width, mipmap.height, glFormat, mipmap.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.compressedTexImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( 3553, i, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isDataArrayTexture ) {\n\n\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( 35866, levels, glInternalFormat, image.width, image.height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.texSubImage3D( 35866, 0, 0, 0, 0, image.width, image.height, image.depth, glFormat, glType, image.data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage3D( 35866, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isData3DTexture ) {\n\n\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( 32879, levels, glInternalFormat, image.width, image.height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.texSubImage3D( 32879, 0, 0, 0, 0, image.width, image.height, image.depth, glFormat, glType, image.data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage3D( 32879, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isFramebufferTexture ) {\n\n\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tstate.texStorage2D( 3553, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tlet width = image.width, height = image.height;\n\n\t\t\t\t\t\tfor ( let i = 0; i < levels; i ++ ) {\n\n\t\t\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, width, height, 0, glFormat, glType, null );\n\n\t\t\t\t\t\t\twidth >>= 1;\n\t\t\t\t\t\t\theight >>= 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// regular Texture (image, video, canvas)\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( 3553, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( 3553, i, 0, 0, glFormat, glType, mipmap );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, glFormat, glType, mipmap );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\t\tstate.texStorage2D( 3553, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstate.texSubImage2D( 3553, 0, 0, 0, glFormat, glType, image );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( 3553, 0, glInternalFormat, glFormat, glType, image );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( textureType );\n\n\t\t\t}\n\n\t\t\tsource.__currentVersion = source.version;\n\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t}\n\n\tfunction uploadCubeTexture( textureProperties, texture, slot ) {\n\n\t\tif ( texture.image.length !== 6 ) return;\n\n\t\tconst forceUpload = initTexture( textureProperties, texture );\n\t\tconst source = texture.source;\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( 34067, textureProperties.__webglTexture );\n\n\t\tif ( source.version !== source.__currentVersion || forceUpload === true ) {\n\n\t\t\t_gl.pixelStorei( 37440, texture.flipY );\n\t\t\t_gl.pixelStorei( 37441, texture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( 3317, texture.unpackAlignment );\n\t\t\t_gl.pixelStorei( 37443, 0 );\n\n\t\t\tconst isCompressed = ( texture.isCompressedTexture || texture.image[ 0 ].isCompressedTexture );\n\t\t\tconst isDataTexture = ( texture.image[ 0 ] && texture.image[ 0 ].isDataTexture );\n\n\t\t\tconst cubeImage = [];\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( ! isCompressed && ! isDataTexture ) {\n\n\t\t\t\t\tcubeImage[ i ] = resizeImage( texture.image[ i ], false, true, maxCubemapSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\n\n\t\t\t\t}\n\n\t\t\t\tcubeImage[ i ] = verifyColorSpace( texture, cubeImage[ i ] );\n\n\t\t\t}\n\n\t\t\tconst image = cubeImage[ 0 ],\n\t\t\t\tsupportsMips = isPowerOfTwo$1( image ) || isWebGL2,\n\t\t\t\tglFormat = utils.convert( texture.format, texture.encoding ),\n\t\t\t\tglType = utils.convert( texture.type ),\n\t\t\t\tglInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.encoding );\n\n\t\t\tconst useTexStorage = ( isWebGL2 && texture.isVideoTexture !== true );\n\t\t\tconst allocateMemory = ( textureProperties.__version === undefined );\n\t\t\tlet levels = getMipLevels( texture, image, supportsMips );\n\n\t\t\tsetTextureParameters( 34067, texture, supportsMips );\n\n\t\t\tlet mipmaps;\n\n\t\t\tif ( isCompressed ) {\n\n\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\tstate.texStorage2D( 34067, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tmipmaps = cubeImage[ i ].mipmaps;\n\n\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage2D( 34069 + i, j, 0, 0, mipmap.width, mipmap.height, glFormat, mipmap.data );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( 34069 + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( 34069 + i, j, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tmipmaps = texture.mipmaps;\n\n\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t// TODO: Uniformly handle mipmap definitions\n\t\t\t\t\t// Normal textures and compressed cube textures define base level + mips with their mipmap array\n\t\t\t\t\t// Uncompressed cube textures use their mipmap array only for mips (no base level)\n\n\t\t\t\t\tif ( mipmaps.length > 0 ) levels ++;\n\n\t\t\t\t\tstate.texStorage2D( 34067, levels, glInternalFormat, cubeImage[ 0 ].width, cubeImage[ 0 ].height );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tif ( isDataTexture ) {\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( 34069 + i, 0, 0, 0, cubeImage[ i ].width, cubeImage[ i ].height, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, 0, glInternalFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\t\t\t\t\t\t\tconst mipmapImage = mipmap.image[ i ].image;\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( 34069 + i, j + 1, 0, 0, mipmapImage.width, mipmapImage.height, glFormat, glType, mipmapImage.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, j + 1, glInternalFormat, mipmapImage.width, mipmapImage.height, 0, glFormat, glType, mipmapImage.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( 34069 + i, 0, 0, 0, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, 0, glInternalFormat, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( 34069 + i, j + 1, 0, 0, glFormat, glType, mipmap.image[ i ] );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, j + 1, glInternalFormat, glFormat, glType, mipmap.image[ i ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\t// We assume images for cube map have the same size.\n\t\t\t\tgenerateMipmap( 34067 );\n\n\t\t\t}\n\n\t\t\tsource.__currentVersion = source.version;\n\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t}\n\n\t// Render targets\n\n\t// Setup storage for target texture and bind it to correct framebuffer\n\tfunction setupFrameBufferTexture( framebuffer, renderTarget, texture, attachment, textureTarget ) {\n\n\t\tconst glFormat = utils.convert( texture.format, texture.encoding );\n\t\tconst glType = utils.convert( texture.type );\n\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.encoding );\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\tif ( ! renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\tif ( textureTarget === 32879 || textureTarget === 35866 ) {\n\n\t\t\t\tstate.texImage3D( textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, renderTarget.depth, 0, glFormat, glType, null );\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindFramebuffer( 36160, framebuffer );\n\n\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( 36160, attachment, textureTarget, properties.get( texture ).__webglTexture, 0, getRenderTargetSamples( renderTarget ) );\n\n\t\t} else {\n\n\t\t\t_gl.framebufferTexture2D( 36160, attachment, textureTarget, properties.get( texture ).__webglTexture, 0 );\n\n\t\t}\n\n\t\tstate.bindFramebuffer( 36160, null );\n\n\t}\n\n\n\t// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\tfunction setupRenderBufferStorage( renderbuffer, renderTarget, isMultisample ) {\n\n\t\t_gl.bindRenderbuffer( 36161, renderbuffer );\n\n\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\n\n\t\t\tlet glInternalFormat = 33189;\n\n\t\t\tif ( isMultisample || useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tconst depthTexture = renderTarget.depthTexture;\n\n\t\t\t\tif ( depthTexture && depthTexture.isDepthTexture ) {\n\n\t\t\t\t\tif ( depthTexture.type === FloatType ) {\n\n\t\t\t\t\t\tglInternalFormat = 36012;\n\n\t\t\t\t\t} else if ( depthTexture.type === UnsignedIntType ) {\n\n\t\t\t\t\t\tglInternalFormat = 33190;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( 36161, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\t_gl.framebufferRenderbuffer( 36160, 36096, 36161, renderbuffer );\n\n\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\n\n\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\tif ( isMultisample && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, 35056, renderTarget.width, renderTarget.height );\n\n\t\t\t} else if ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( 36161, samples, 35056, renderTarget.width, renderTarget.height );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( 36161, 34041, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\n\t\t\t_gl.framebufferRenderbuffer( 36160, 33306, 36161, renderbuffer );\n\n\t\t} else {\n\n\t\t\t// Use the first texture for MRT so far\n\t\t\tconst texture = renderTarget.isWebGLMultipleRenderTargets === true ? renderTarget.texture[ 0 ] : renderTarget.texture;\n\n\t\t\tconst glFormat = utils.convert( texture.format, texture.encoding );\n\t\t\tconst glType = utils.convert( texture.type );\n\t\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.encoding );\n\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\tif ( isMultisample && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t} else if ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( 36161, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t}\n\n\t\t_gl.bindRenderbuffer( 36161, null );\n\n\t}\n\n\t// Setup resources for a Depth Texture for a FBO (needs an extension)\n\tfunction setupDepthTexture( framebuffer, renderTarget ) {\n\n\t\tconst isCube = ( renderTarget && renderTarget.isWebGLCubeRenderTarget );\n\t\tif ( isCube ) throw new Error( 'Depth Texture with cube render targets is not supported' );\n\n\t\tstate.bindFramebuffer( 36160, framebuffer );\n\n\t\tif ( ! ( renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture ) ) {\n\n\t\t\tthrow new Error( 'renderTarget.depthTexture must be an instance of THREE.DepthTexture' );\n\n\t\t}\n\n\t\t// upload an empty depth texture with framebuffer size\n\t\tif ( ! properties.get( renderTarget.depthTexture ).__webglTexture ||\n\t\t\t\trenderTarget.depthTexture.image.width !== renderTarget.width ||\n\t\t\t\trenderTarget.depthTexture.image.height !== renderTarget.height ) {\n\n\t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\n\t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\n\t\t\trenderTarget.depthTexture.needsUpdate = true;\n\n\t\t}\n\n\t\tsetTexture2D( renderTarget.depthTexture, 0 );\n\n\t\tconst webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;\n\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\tif ( renderTarget.depthTexture.format === DepthFormat ) {\n\n\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( 36160, 36096, 3553, webglDepthTexture, 0, samples );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.framebufferTexture2D( 36160, 36096, 3553, webglDepthTexture, 0 );\n\n\t\t\t}\n\n\t\t} else if ( renderTarget.depthTexture.format === DepthStencilFormat ) {\n\n\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( 36160, 33306, 3553, webglDepthTexture, 0, samples );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.framebufferTexture2D( 36160, 33306, 3553, webglDepthTexture, 0 );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'Unknown depthTexture format' );\n\n\t\t}\n\n\t}\n\n\t// Setup GL resources for a non-texture depth buffer\n\tfunction setupDepthRenderbuffer( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\n\t\tif ( renderTarget.depthTexture && ! renderTargetProperties.__autoAllocateDepthBuffer ) {\n\n\t\t\tif ( isCube ) throw new Error( 'target.depthTexture not supported in Cube render targets' );\n\n\t\t\tsetupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\n\n\t\t} else {\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tstate.bindFramebuffer( 36160, renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget, false );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tstate.bindFramebuffer( 36160, renderTargetProperties.__webglFramebuffer );\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget, false );\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindFramebuffer( 36160, null );\n\n\t}\n\n\t// rebind framebuffer with external textures\n\tfunction rebindTextures( renderTarget, colorTexture, depthTexture ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\tif ( colorTexture !== undefined ) {\n\n\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, renderTarget.texture, 36064, 3553 );\n\n\t\t}\n\n\t\tif ( depthTexture !== undefined ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\t// Set up GL resources for the render target\n\tfunction setupRenderTarget( renderTarget ) {\n\n\t\tconst texture = renderTarget.texture;\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst textureProperties = properties.get( texture );\n\n\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tif ( renderTarget.isWebGLMultipleRenderTargets !== true ) {\n\n\t\t\tif ( textureProperties.__webglTexture === undefined ) {\n\n\t\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t}\n\n\t\t\ttextureProperties.__version = texture.version;\n\t\t\tinfo.memory.textures ++;\n\n\t\t}\n\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\t\tconst isMultipleRenderTargets = ( renderTarget.isWebGLMultipleRenderTargets === true );\n\t\tconst supportsMips = isPowerOfTwo$1( renderTarget ) || isWebGL2;\n\n\t\t// Setup framebuffer\n\n\t\tif ( isCube ) {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n\n\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\tif ( capabilities.drawBuffers ) {\n\n\t\t\t\t\tconst textures = renderTarget.texture;\n\n\t\t\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst attachmentProperties = properties.get( textures[ i ] );\n\n\t\t\t\t\t\tif ( attachmentProperties.__webglTexture === undefined ) {\n\n\t\t\t\t\t\t\tattachmentProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.' );\n\n\t\t\t\t}\n\n\t\t\t} else if ( ( isWebGL2 && renderTarget.samples > 0 ) && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\trenderTargetProperties.__webglMultisampledFramebuffer = _gl.createFramebuffer();\n\t\t\t\trenderTargetProperties.__webglColorRenderbuffer = _gl.createRenderbuffer();\n\n\t\t\t\t_gl.bindRenderbuffer( 36161, renderTargetProperties.__webglColorRenderbuffer );\n\n\t\t\t\tconst glFormat = utils.convert( texture.format, texture.encoding );\n\t\t\t\tconst glType = utils.convert( texture.type );\n\t\t\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.encoding );\n\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\tstate.bindFramebuffer( 36160, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t_gl.framebufferRenderbuffer( 36160, 36064, 36161, renderTargetProperties.__webglColorRenderbuffer );\n\t\t\t\t_gl.bindRenderbuffer( 36161, null );\n\n\t\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\t\trenderTargetProperties.__webglDepthRenderbuffer = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthRenderbuffer, renderTarget, true );\n\n\t\t\t\t}\n\n\t\t\t\tstate.bindFramebuffer( 36160, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Setup color buffer\n\n\t\tif ( isCube ) {\n\n\t\t\tstate.bindTexture( 34067, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( 34067, texture, supportsMips );\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, texture, 36064, 34069 + i );\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( 34067 );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t} else if ( isMultipleRenderTargets ) {\n\n\t\t\tconst textures = renderTarget.texture;\n\n\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\tconst attachment = textures[ i ];\n\t\t\t\tconst attachmentProperties = properties.get( attachment );\n\n\t\t\t\tstate.bindTexture( 3553, attachmentProperties.__webglTexture );\n\t\t\t\tsetTextureParameters( 3553, attachment, supportsMips );\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, attachment, 36064 + i, 3553 );\n\n\t\t\t\tif ( textureNeedsGenerateMipmaps( attachment, supportsMips ) ) {\n\n\t\t\t\t\tgenerateMipmap( 3553 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t} else {\n\n\t\t\tlet glTextureType = 3553;\n\n\t\t\tif ( renderTarget.isWebGL3DRenderTarget || renderTarget.isWebGLArrayRenderTarget ) {\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\tglTextureType = renderTarget.isWebGL3DRenderTarget ? 32879 : 35866;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( glTextureType, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( glTextureType, texture, supportsMips );\n\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, texture, 36064, glTextureType );\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( glTextureType );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t}\n\n\t\t// Setup depth and stencil buffers\n\n\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\tfunction updateRenderTargetMipmap( renderTarget ) {\n\n\t\tconst supportsMips = isPowerOfTwo$1( renderTarget ) || isWebGL2;\n\n\t\tconst textures = renderTarget.isWebGLMultipleRenderTargets === true ? renderTarget.texture : [ renderTarget.texture ];\n\n\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\tconst texture = textures[ i ];\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tconst target = renderTarget.isWebGLCubeRenderTarget ? 34067 : 3553;\n\t\t\t\tconst webglTexture = properties.get( texture ).__webglTexture;\n\n\t\t\t\tstate.bindTexture( target, webglTexture );\n\t\t\t\tgenerateMipmap( target );\n\t\t\t\tstate.unbindTexture();\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction updateMultisampleRenderTarget( renderTarget ) {\n\n\t\tif ( ( isWebGL2 && renderTarget.samples > 0 ) && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\tconst width = renderTarget.width;\n\t\t\tconst height = renderTarget.height;\n\t\t\tlet mask = 16384;\n\t\t\tconst invalidationArray = [ 36064 ];\n\t\t\tconst depthStyle = renderTarget.stencilBuffer ? 33306 : 36096;\n\n\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\tinvalidationArray.push( depthStyle );\n\n\t\t\t}\n\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\tconst ignoreDepthValues = ( renderTargetProperties.__ignoreDepthValues !== undefined ) ? renderTargetProperties.__ignoreDepthValues : false;\n\n\t\t\tif ( ignoreDepthValues === false ) {\n\n\t\t\t\tif ( renderTarget.depthBuffer ) mask |= 256;\n\t\t\t\tif ( renderTarget.stencilBuffer ) mask |= 1024;\n\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer( 36008, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\tstate.bindFramebuffer( 36009, renderTargetProperties.__webglFramebuffer );\n\n\t\t\tif ( ignoreDepthValues === true ) {\n\n\t\t\t\t_gl.invalidateFramebuffer( 36008, [ depthStyle ] );\n\t\t\t\t_gl.invalidateFramebuffer( 36009, [ depthStyle ] );\n\n\t\t\t}\n\n\t\t\t_gl.blitFramebuffer( 0, 0, width, height, 0, 0, width, height, mask, 9728 );\n\n\t\t\tif ( supportsInvalidateFramebuffer ) {\n\n\t\t\t\t_gl.invalidateFramebuffer( 36008, invalidationArray );\n\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer( 36008, null );\n\t\t\tstate.bindFramebuffer( 36009, renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t}\n\n\t}\n\n\tfunction getRenderTargetSamples( renderTarget ) {\n\n\t\treturn Math.min( maxSamples, renderTarget.samples );\n\n\t}\n\n\tfunction useMultisampledRTT( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\treturn isWebGL2 && renderTarget.samples > 0 && extensions.has( 'WEBGL_multisampled_render_to_texture' ) === true && renderTargetProperties.__useRenderToTexture !== false;\n\n\t}\n\n\tfunction updateVideoTexture( texture ) {\n\n\t\tconst frame = info.render.frame;\n\n\t\t// Check the last frame we updated the VideoTexture\n\n\t\tif ( _videoTextures.get( texture ) !== frame ) {\n\n\t\t\t_videoTextures.set( texture, frame );\n\t\t\ttexture.update();\n\n\t\t}\n\n\t}\n\n\tfunction verifyColorSpace( texture, image ) {\n\n\t\tconst encoding = texture.encoding;\n\t\tconst format = texture.format;\n\t\tconst type = texture.type;\n\n\t\tif ( texture.isCompressedTexture === true || texture.isVideoTexture === true || texture.format === _SRGBAFormat ) return image;\n\n\t\tif ( encoding !== LinearEncoding ) {\n\n\t\t\t// sRGB\n\n\t\t\tif ( encoding === sRGBEncoding ) {\n\n\t\t\t\tif ( isWebGL2 === false ) {\n\n\t\t\t\t\t// in WebGL 1, try to use EXT_sRGB extension and unsized formats\n\n\t\t\t\t\tif ( extensions.has( 'EXT_sRGB' ) === true && format === RGBAFormat ) {\n\n\t\t\t\t\t\ttexture.format = _SRGBAFormat;\n\n\t\t\t\t\t\t// it's not possible to generate mips in WebGL 1 with this extension\n\n\t\t\t\t\t\ttexture.minFilter = LinearFilter;\n\t\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// slow fallback (CPU decode)\n\n\t\t\t\t\t\timage = ImageUtils.sRGBToLinear( image );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// in WebGL 2 uncompressed textures can only be sRGB encoded if they have the RGBA8 format\n\n\t\t\t\t\tif ( format !== RGBAFormat || type !== UnsignedByteType ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( 'THREE.WebGLTextures: Unsupported texture encoding:', encoding );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\t//\n\n\tthis.allocateTextureUnit = allocateTextureUnit;\n\tthis.resetTextureUnits = resetTextureUnits;\n\n\tthis.setTexture2D = setTexture2D;\n\tthis.setTexture2DArray = setTexture2DArray;\n\tthis.setTexture3D = setTexture3D;\n\tthis.setTextureCube = setTextureCube;\n\tthis.rebindTextures = rebindTextures;\n\tthis.setupRenderTarget = setupRenderTarget;\n\tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\n\tthis.updateMultisampleRenderTarget = updateMultisampleRenderTarget;\n\tthis.setupDepthRenderbuffer = setupDepthRenderbuffer;\n\tthis.setupFrameBufferTexture = setupFrameBufferTexture;\n\tthis.useMultisampledRTT = useMultisampledRTT;\n\n}\n\nfunction WebGLUtils( gl, extensions, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tfunction convert( p, encoding = null ) {\n\n\t\tlet extension;\n\n\t\tif ( p === UnsignedByteType ) return 5121;\n\t\tif ( p === UnsignedShort4444Type ) return 32819;\n\t\tif ( p === UnsignedShort5551Type ) return 32820;\n\n\t\tif ( p === ByteType ) return 5120;\n\t\tif ( p === ShortType ) return 5122;\n\t\tif ( p === UnsignedShortType ) return 5123;\n\t\tif ( p === IntType ) return 5124;\n\t\tif ( p === UnsignedIntType ) return 5125;\n\t\tif ( p === FloatType ) return 5126;\n\n\t\tif ( p === HalfFloatType ) {\n\n\t\t\tif ( isWebGL2 ) return 5131;\n\n\t\t\textension = extensions.get( 'OES_texture_half_float' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.HALF_FLOAT_OES;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === AlphaFormat ) return 6406;\n\t\tif ( p === RGBAFormat ) return 6408;\n\t\tif ( p === LuminanceFormat ) return 6409;\n\t\tif ( p === LuminanceAlphaFormat ) return 6410;\n\t\tif ( p === DepthFormat ) return 6402;\n\t\tif ( p === DepthStencilFormat ) return 34041;\n\t\tif ( p === RedFormat ) return 6403;\n\n\t\tif ( p === RGBFormat ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: THREE.RGBFormat has been removed. Use THREE.RGBAFormat instead. https://github.com/mrdoob/three.js/pull/23228' );\n\t\t\treturn 6408;\n\n\t\t}\n\n\t\t// WebGL 1 sRGB fallback\n\n\t\tif ( p === _SRGBAFormat ) {\n\n\t\t\textension = extensions.get( 'EXT_sRGB' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.SRGB_ALPHA_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// WebGL2 formats.\n\n\t\tif ( p === RedIntegerFormat ) return 36244;\n\t\tif ( p === RGFormat ) return 33319;\n\t\tif ( p === RGIntegerFormat ) return 33320;\n\t\tif ( p === RGBAIntegerFormat ) return 36249;\n\n\t\t// S3TC\n\n\t\tif ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format || p === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {\n\n\t\t\tif ( encoding === sRGBEncoding ) {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc_srgb' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_SRGB_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// PVRTC\n\n\t\tif ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format || p === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ETC1\n\n\t\tif ( p === RGB_ETC1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc1' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.COMPRESSED_RGB_ETC1_WEBGL;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ETC2\n\n\t\tif ( p === RGB_ETC2_Format || p === RGBA_ETC2_EAC_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_ETC2_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ETC2 : extension.COMPRESSED_RGB8_ETC2;\n\t\t\t\tif ( p === RGBA_ETC2_EAC_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC : extension.COMPRESSED_RGBA8_ETC2_EAC;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ASTC\n\n\t\tif ( p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format ||\n\t\t\tp === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format ||\n\t\t\tp === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format ||\n\t\t\tp === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format ||\n\t\t\tp === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_astc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_ASTC_4x4_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR : extension.COMPRESSED_RGBA_ASTC_4x4_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_5x4_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR : extension.COMPRESSED_RGBA_ASTC_5x4_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_5x5_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR : extension.COMPRESSED_RGBA_ASTC_5x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_6x5_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR : extension.COMPRESSED_RGBA_ASTC_6x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_6x6_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR : extension.COMPRESSED_RGBA_ASTC_6x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x5_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR : extension.COMPRESSED_RGBA_ASTC_8x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x6_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR : extension.COMPRESSED_RGBA_ASTC_8x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x8_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR : extension.COMPRESSED_RGBA_ASTC_8x8_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x5_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR : extension.COMPRESSED_RGBA_ASTC_10x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x6_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR : extension.COMPRESSED_RGBA_ASTC_10x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x8_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR : extension.COMPRESSED_RGBA_ASTC_10x8_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x10_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR : extension.COMPRESSED_RGBA_ASTC_10x10_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_12x10_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR : extension.COMPRESSED_RGBA_ASTC_12x10_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_12x12_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR : extension.COMPRESSED_RGBA_ASTC_12x12_KHR;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// BPTC\n\n\t\tif ( p === RGBA_BPTC_Format ) {\n\n\t\t\textension = extensions.get( 'EXT_texture_compression_bptc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_BPTC_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT : extension.COMPRESSED_RGBA_BPTC_UNORM_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( p === UnsignedInt248Type ) {\n\n\t\t\tif ( isWebGL2 ) return 34042;\n\n\t\t\textension = extensions.get( 'WEBGL_depth_texture' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.UNSIGNED_INT_24_8_WEBGL;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// if \"p\" can't be resolved, assume the user defines a WebGL constant as a string (fallback/workaround for packed RGB formats)\n\n\t\treturn ( gl[ p ] !== undefined ) ? gl[ p ] : null;\n\n\t}\n\n\treturn { convert: convert };\n\n}\n\nclass ArrayCamera extends PerspectiveCamera {\n\n\tconstructor( array = [] ) {\n\n\t\tsuper();\n\n\t\tthis.cameras = array;\n\n\t}\n\n}\n\nArrayCamera.prototype.isArrayCamera = true;\n\nclass Group extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'Group';\n\n\t}\n\n}\n\nGroup.prototype.isGroup = true;\n\nconst _moveEvent = { type: 'move' };\n\nclass WebXRController {\n\n\tconstructor() {\n\n\t\tthis._targetRay = null;\n\t\tthis._grip = null;\n\t\tthis._hand = null;\n\n\t}\n\n\tgetHandSpace() {\n\n\t\tif ( this._hand === null ) {\n\n\t\t\tthis._hand = new Group();\n\t\t\tthis._hand.matrixAutoUpdate = false;\n\t\t\tthis._hand.visible = false;\n\n\t\t\tthis._hand.joints = {};\n\t\t\tthis._hand.inputState = { pinching: false };\n\n\t\t}\n\n\t\treturn this._hand;\n\n\t}\n\n\tgetTargetRaySpace() {\n\n\t\tif ( this._targetRay === null ) {\n\n\t\t\tthis._targetRay = new Group();\n\t\t\tthis._targetRay.matrixAutoUpdate = false;\n\t\t\tthis._targetRay.visible = false;\n\t\t\tthis._targetRay.hasLinearVelocity = false;\n\t\t\tthis._targetRay.linearVelocity = new Vector3();\n\t\t\tthis._targetRay.hasAngularVelocity = false;\n\t\t\tthis._targetRay.angularVelocity = new Vector3();\n\n\t\t}\n\n\t\treturn this._targetRay;\n\n\t}\n\n\tgetGripSpace() {\n\n\t\tif ( this._grip === null ) {\n\n\t\t\tthis._grip = new Group();\n\t\t\tthis._grip.matrixAutoUpdate = false;\n\t\t\tthis._grip.visible = false;\n\t\t\tthis._grip.hasLinearVelocity = false;\n\t\t\tthis._grip.linearVelocity = new Vector3();\n\t\t\tthis._grip.hasAngularVelocity = false;\n\t\t\tthis._grip.angularVelocity = new Vector3();\n\n\t\t}\n\n\t\treturn this._grip;\n\n\t}\n\n\tdispatchEvent( event ) {\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.dispatchEvent( event );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tdisconnect( inputSource ) {\n\n\t\tthis.dispatchEvent( { type: 'disconnected', data: inputSource } );\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.visible = false;\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.visible = false;\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.visible = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tupdate( inputSource, frame, referenceSpace ) {\n\n\t\tlet inputPose = null;\n\t\tlet gripPose = null;\n\t\tlet handPose = null;\n\n\t\tconst targetRay = this._targetRay;\n\t\tconst grip = this._grip;\n\t\tconst hand = this._hand;\n\n\t\tif ( inputSource && frame.session.visibilityState !== 'visible-blurred' ) {\n\n\t\t\tif ( targetRay !== null ) {\n\n\t\t\t\tinputPose = frame.getPose( inputSource.targetRaySpace, referenceSpace );\n\n\t\t\t\tif ( inputPose !== null ) {\n\n\t\t\t\t\ttargetRay.matrix.fromArray( inputPose.transform.matrix );\n\t\t\t\t\ttargetRay.matrix.decompose( targetRay.position, targetRay.rotation, targetRay.scale );\n\n\t\t\t\t\tif ( inputPose.linearVelocity ) {\n\n\t\t\t\t\t\ttargetRay.hasLinearVelocity = true;\n\t\t\t\t\t\ttargetRay.linearVelocity.copy( inputPose.linearVelocity );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttargetRay.hasLinearVelocity = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( inputPose.angularVelocity ) {\n\n\t\t\t\t\t\ttargetRay.hasAngularVelocity = true;\n\t\t\t\t\t\ttargetRay.angularVelocity.copy( inputPose.angularVelocity );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttargetRay.hasAngularVelocity = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.dispatchEvent( _moveEvent );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( hand && inputSource.hand ) {\n\n\t\t\t\thandPose = true;\n\n\t\t\t\tfor ( const inputjoint of inputSource.hand.values() ) {\n\n\t\t\t\t\t// Update the joints groups with the XRJoint poses\n\t\t\t\t\tconst jointPose = frame.getJointPose( inputjoint, referenceSpace );\n\n\t\t\t\t\tif ( hand.joints[ inputjoint.jointName ] === undefined ) {\n\n\t\t\t\t\t\t// The transform of this joint will be updated with the joint pose on each frame\n\t\t\t\t\t\tconst joint = new Group();\n\t\t\t\t\t\tjoint.matrixAutoUpdate = false;\n\t\t\t\t\t\tjoint.visible = false;\n\t\t\t\t\t\thand.joints[ inputjoint.jointName ] = joint;\n\t\t\t\t\t\t// ??\n\t\t\t\t\t\thand.add( joint );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst joint = hand.joints[ inputjoint.jointName ];\n\n\t\t\t\t\tif ( jointPose !== null ) {\n\n\t\t\t\t\t\tjoint.matrix.fromArray( jointPose.transform.matrix );\n\t\t\t\t\t\tjoint.matrix.decompose( joint.position, joint.rotation, joint.scale );\n\t\t\t\t\t\tjoint.jointRadius = jointPose.radius;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tjoint.visible = jointPose !== null;\n\n\t\t\t\t}\n\n\t\t\t\t// Custom events\n\n\t\t\t\t// Check pinchz\n\t\t\t\tconst indexTip = hand.joints[ 'index-finger-tip' ];\n\t\t\t\tconst thumbTip = hand.joints[ 'thumb-tip' ];\n\t\t\t\tconst distance = indexTip.position.distanceTo( thumbTip.position );\n\n\t\t\t\tconst distanceToPinch = 0.02;\n\t\t\t\tconst threshold = 0.005;\n\n\t\t\t\tif ( hand.inputState.pinching && distance > distanceToPinch + threshold ) {\n\n\t\t\t\t\thand.inputState.pinching = false;\n\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\ttype: 'pinchend',\n\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\ttarget: this\n\t\t\t\t\t} );\n\n\t\t\t\t} else if ( ! hand.inputState.pinching && distance <= distanceToPinch - threshold ) {\n\n\t\t\t\t\thand.inputState.pinching = true;\n\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\ttype: 'pinchstart',\n\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\ttarget: this\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( grip !== null && inputSource.gripSpace ) {\n\n\t\t\t\t\tgripPose = frame.getPose( inputSource.gripSpace, referenceSpace );\n\n\t\t\t\t\tif ( gripPose !== null ) {\n\n\t\t\t\t\t\tgrip.matrix.fromArray( gripPose.transform.matrix );\n\t\t\t\t\t\tgrip.matrix.decompose( grip.position, grip.rotation, grip.scale );\n\n\t\t\t\t\t\tif ( gripPose.linearVelocity ) {\n\n\t\t\t\t\t\t\tgrip.hasLinearVelocity = true;\n\t\t\t\t\t\t\tgrip.linearVelocity.copy( gripPose.linearVelocity );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgrip.hasLinearVelocity = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( gripPose.angularVelocity ) {\n\n\t\t\t\t\t\t\tgrip.hasAngularVelocity = true;\n\t\t\t\t\t\t\tgrip.angularVelocity.copy( gripPose.angularVelocity );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgrip.hasAngularVelocity = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( targetRay !== null ) {\n\n\t\t\ttargetRay.visible = ( inputPose !== null );\n\n\t\t}\n\n\t\tif ( grip !== null ) {\n\n\t\t\tgrip.visible = ( gripPose !== null );\n\n\t\t}\n\n\t\tif ( hand !== null ) {\n\n\t\t\thand.visible = ( handPose !== null );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass DepthTexture extends Texture {\n\n\tconstructor( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format ) {\n\n\t\tformat = format !== undefined ? format : DepthFormat;\n\n\t\tif ( format !== DepthFormat && format !== DepthStencilFormat ) {\n\n\t\t\tthrow new Error( 'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat' );\n\n\t\t}\n\n\t\tif ( type === undefined && format === DepthFormat ) type = UnsignedShortType;\n\t\tif ( type === undefined && format === DepthStencilFormat ) type = UnsignedInt248Type;\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.image = { width: width, height: height };\n\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\t\tthis.flipY = false;\n\t\tthis.generateMipmaps\t= false;\n\n\t}\n\n\n}\n\nDepthTexture.prototype.isDepthTexture = true;\n\nclass WebXRManager extends EventDispatcher {\n\n\tconstructor( renderer, gl ) {\n\n\t\tsuper();\n\n\t\tconst scope = this;\n\n\t\tlet session = null;\n\t\tlet framebufferScaleFactor = 1.0;\n\n\t\tlet referenceSpace = null;\n\t\tlet referenceSpaceType = 'local-floor';\n\t\tlet customReferenceSpace = null;\n\n\t\tlet pose = null;\n\t\tlet glBinding = null;\n\t\tlet glProjLayer = null;\n\t\tlet glBaseLayer = null;\n\t\tlet xrFrame = null;\n\t\tconst attributes = gl.getContextAttributes();\n\t\tlet initialRenderTarget = null;\n\t\tlet newRenderTarget = null;\n\n\t\tconst controllers = [];\n\t\tconst inputSourcesMap = new Map();\n\n\t\t//\n\n\t\tconst cameraL = new PerspectiveCamera();\n\t\tcameraL.layers.enable( 1 );\n\t\tcameraL.viewport = new Vector4();\n\n\t\tconst cameraR = new PerspectiveCamera();\n\t\tcameraR.layers.enable( 2 );\n\t\tcameraR.viewport = new Vector4();\n\n\t\tconst cameras = [ cameraL, cameraR ];\n\n\t\tconst cameraVR = new ArrayCamera();\n\t\tcameraVR.layers.enable( 1 );\n\t\tcameraVR.layers.enable( 2 );\n\n\t\tlet _currentDepthNear = null;\n\t\tlet _currentDepthFar = null;\n\n\t\t//\n\n\t\tthis.cameraAutoUpdate = true;\n\t\tthis.enabled = false;\n\n\t\tthis.isPresenting = false;\n\n\t\tthis.getController = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getTargetRaySpace();\n\n\t\t};\n\n\t\tthis.getControllerGrip = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getGripSpace();\n\n\t\t};\n\n\t\tthis.getHand = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getHandSpace();\n\n\t\t};\n\n\t\t//\n\n\t\tfunction onSessionEvent( event ) {\n\n\t\t\tconst controller = inputSourcesMap.get( event.inputSource );\n\n\t\t\tif ( controller ) {\n\n\t\t\t\tcontroller.dispatchEvent( { type: event.type, data: event.inputSource } );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onSessionEnd() {\n\n\t\t\tinputSourcesMap.forEach( function ( controller, inputSource ) {\n\n\t\t\t\tcontroller.disconnect( inputSource );\n\n\t\t\t} );\n\n\t\t\tinputSourcesMap.clear();\n\n\t\t\t_currentDepthNear = null;\n\t\t\t_currentDepthFar = null;\n\n\t\t\t// restore framebuffer/rendering state\n\n\t\t\trenderer.setRenderTarget( initialRenderTarget );\n\n\t\t\tglBaseLayer = null;\n\t\t\tglProjLayer = null;\n\t\t\tglBinding = null;\n\t\t\tsession = null;\n\t\t\tnewRenderTarget = null;\n\n\t\t\t//\n\n\t\t\tanimation.stop();\n\n\t\t\tscope.isPresenting = false;\n\n\t\t\tscope.dispatchEvent( { type: 'sessionend' } );\n\n\t\t}\n\n\t\tthis.setFramebufferScaleFactor = function ( value ) {\n\n\t\t\tframebufferScaleFactor = value;\n\n\t\t\tif ( scope.isPresenting === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change framebuffer scale while presenting.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setReferenceSpaceType = function ( value ) {\n\n\t\t\treferenceSpaceType = value;\n\n\t\t\tif ( scope.isPresenting === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change reference space type while presenting.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getReferenceSpace = function () {\n\n\t\t\treturn customReferenceSpace || referenceSpace;\n\n\t\t};\n\n\t\tthis.setReferenceSpace = function ( space ) {\n\n\t\t\tcustomReferenceSpace = space;\n\n\t\t};\n\n\t\tthis.getBaseLayer = function () {\n\n\t\t\treturn glProjLayer !== null ? glProjLayer : glBaseLayer;\n\n\t\t};\n\n\t\tthis.getBinding = function () {\n\n\t\t\treturn glBinding;\n\n\t\t};\n\n\t\tthis.getFrame = function () {\n\n\t\t\treturn xrFrame;\n\n\t\t};\n\n\t\tthis.getSession = function () {\n\n\t\t\treturn session;\n\n\t\t};\n\n\t\tthis.setSession = async function ( value ) {\n\n\t\t\tsession = value;\n\n\t\t\tif ( session !== null ) {\n\n\t\t\t\tinitialRenderTarget = renderer.getRenderTarget();\n\n\t\t\t\tsession.addEventListener( 'select', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectstart', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectend', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeeze', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeezestart', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeezeend', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'end', onSessionEnd );\n\t\t\t\tsession.addEventListener( 'inputsourceschange', onInputSourcesChange );\n\n\t\t\t\tif ( attributes.xrCompatible !== true ) {\n\n\t\t\t\t\tawait gl.makeXRCompatible();\n\n\t\t\t\t}\n\n\t\t\t\tif ( ( session.renderState.layers === undefined ) || ( renderer.capabilities.isWebGL2 === false ) ) {\n\n\t\t\t\t\tconst layerInit = {\n\t\t\t\t\t\tantialias: ( session.renderState.layers === undefined ) ? attributes.antialias : true,\n\t\t\t\t\t\talpha: attributes.alpha,\n\t\t\t\t\t\tdepth: attributes.depth,\n\t\t\t\t\t\tstencil: attributes.stencil,\n\t\t\t\t\t\tframebufferScaleFactor: framebufferScaleFactor\n\t\t\t\t\t};\n\n\t\t\t\t\tglBaseLayer = new XRWebGLLayer( session, gl, layerInit );\n\n\t\t\t\t\tsession.updateRenderState( { baseLayer: glBaseLayer } );\n\n\t\t\t\t\tnewRenderTarget = new WebGLRenderTarget(\n\t\t\t\t\t\tglBaseLayer.framebufferWidth,\n\t\t\t\t\t\tglBaseLayer.framebufferHeight,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tformat: RGBAFormat,\n\t\t\t\t\t\t\ttype: UnsignedByteType,\n\t\t\t\t\t\t\tencoding: renderer.outputEncoding\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\n\t\t\t\t} else {\n\n\t\t\t\t\tlet depthFormat = null;\n\t\t\t\t\tlet depthType = null;\n\t\t\t\t\tlet glDepthFormat = null;\n\n\t\t\t\t\tif ( attributes.depth ) {\n\n\t\t\t\t\t\tglDepthFormat = attributes.stencil ? 35056 : 33190;\n\t\t\t\t\t\tdepthFormat = attributes.stencil ? DepthStencilFormat : DepthFormat;\n\t\t\t\t\t\tdepthType = attributes.stencil ? UnsignedInt248Type : UnsignedShortType;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst projectionlayerInit = {\n\t\t\t\t\t\tcolorFormat: ( renderer.outputEncoding === sRGBEncoding ) ? 35907 : 32856,\n\t\t\t\t\t\tdepthFormat: glDepthFormat,\n\t\t\t\t\t\tscaleFactor: framebufferScaleFactor\n\t\t\t\t\t};\n\n\t\t\t\t\tglBinding = new XRWebGLBinding( session, gl );\n\n\t\t\t\t\tglProjLayer = glBinding.createProjectionLayer( projectionlayerInit );\n\n\t\t\t\t\tsession.updateRenderState( { layers: [ glProjLayer ] } );\n\n\t\t\t\t\tnewRenderTarget = new WebGLRenderTarget(\n\t\t\t\t\t\tglProjLayer.textureWidth,\n\t\t\t\t\t\tglProjLayer.textureHeight,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tformat: RGBAFormat,\n\t\t\t\t\t\t\ttype: UnsignedByteType,\n\t\t\t\t\t\t\tdepthTexture: new DepthTexture( glProjLayer.textureWidth, glProjLayer.textureHeight, depthType, undefined, undefined, undefined, undefined, undefined, undefined, depthFormat ),\n\t\t\t\t\t\t\tstencilBuffer: attributes.stencil,\n\t\t\t\t\t\t\tencoding: renderer.outputEncoding,\n\t\t\t\t\t\t\tsamples: attributes.antialias ? 4 : 0\n\t\t\t\t\t\t} );\n\n\t\t\t\t\tconst renderTargetProperties = renderer.properties.get( newRenderTarget );\n\t\t\t\t\trenderTargetProperties.__ignoreDepthValues = glProjLayer.ignoreDepthValues;\n\n\t\t\t\t}\n\n\t\t\t\tnewRenderTarget.isXRRenderTarget = true; // TODO Remove this when possible, see #23278\n\n\t\t\t\t// Set foveation to maximum.\n\t\t\t\tthis.setFoveation( 1.0 );\n\n\t\t\t\treferenceSpace = await session.requestReferenceSpace( referenceSpaceType );\n\n\t\t\t\tanimation.setContext( session );\n\t\t\t\tanimation.start();\n\n\t\t\t\tscope.isPresenting = true;\n\n\t\t\t\tscope.dispatchEvent( { type: 'sessionstart' } );\n\n\t\t\t}\n\n\t\t};\n\n\t\tfunction onInputSourcesChange( event ) {\n\n\t\t\tconst inputSources = session.inputSources;\n\n\t\t\t// Assign controllers to available inputSources\n\n\t\t\tfor ( let i = 0; i < inputSources.length; i ++ ) {\n\n\t\t\t\tconst index = inputSources[ i ].handedness === 'right' ? 1 : 0;\n\t\t\t\tinputSourcesMap.set( inputSources[ i ], controllers[ index ] );\n\n\t\t\t}\n\n\t\t\t// Notify disconnected\n\n\t\t\tfor ( let i = 0; i < event.removed.length; i ++ ) {\n\n\t\t\t\tconst inputSource = event.removed[ i ];\n\t\t\t\tconst controller = inputSourcesMap.get( inputSource );\n\n\t\t\t\tif ( controller ) {\n\n\t\t\t\t\tcontroller.dispatchEvent( { type: 'disconnected', data: inputSource } );\n\t\t\t\t\tinputSourcesMap.delete( inputSource );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Notify connected\n\n\t\t\tfor ( let i = 0; i < event.added.length; i ++ ) {\n\n\t\t\t\tconst inputSource = event.added[ i ];\n\t\t\t\tconst controller = inputSourcesMap.get( inputSource );\n\n\t\t\t\tif ( controller ) {\n\n\t\t\t\t\tcontroller.dispatchEvent( { type: 'connected', data: inputSource } );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst cameraLPos = new Vector3();\n\t\tconst cameraRPos = new Vector3();\n\n\t\t/**\n\t\t * Assumes 2 cameras that are parallel and share an X-axis, and that\n\t\t * the cameras' projection and world matrices have already been set.\n\t\t * And that near and far planes are identical for both cameras.\n\t\t * Visualization of this technique: https://computergraphics.stackexchange.com/a/4765\n\t\t */\n\t\tfunction setProjectionFromUnion( camera, cameraL, cameraR ) {\n\n\t\t\tcameraLPos.setFromMatrixPosition( cameraL.matrixWorld );\n\t\t\tcameraRPos.setFromMatrixPosition( cameraR.matrixWorld );\n\n\t\t\tconst ipd = cameraLPos.distanceTo( cameraRPos );\n\n\t\t\tconst projL = cameraL.projectionMatrix.elements;\n\t\t\tconst projR = cameraR.projectionMatrix.elements;\n\n\t\t\t// VR systems will have identical far and near planes, and\n\t\t\t// most likely identical top and bottom frustum extents.\n\t\t\t// Use the left camera for these values.\n\t\t\tconst near = projL[ 14 ] / ( projL[ 10 ] - 1 );\n\t\t\tconst far = projL[ 14 ] / ( projL[ 10 ] + 1 );\n\t\t\tconst topFov = ( projL[ 9 ] + 1 ) / projL[ 5 ];\n\t\t\tconst bottomFov = ( projL[ 9 ] - 1 ) / projL[ 5 ];\n\n\t\t\tconst leftFov = ( projL[ 8 ] - 1 ) / projL[ 0 ];\n\t\t\tconst rightFov = ( projR[ 8 ] + 1 ) / projR[ 0 ];\n\t\t\tconst left = near * leftFov;\n\t\t\tconst right = near * rightFov;\n\n\t\t\t// Calculate the new camera's position offset from the\n\t\t\t// left camera. xOffset should be roughly half `ipd`.\n\t\t\tconst zOffset = ipd / ( - leftFov + rightFov );\n\t\t\tconst xOffset = zOffset * - leftFov;\n\n\t\t\t// TODO: Better way to apply this offset?\n\t\t\tcameraL.matrixWorld.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.translateX( xOffset );\n\t\t\tcamera.translateZ( zOffset );\n\t\t\tcamera.matrixWorld.compose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n\n\t\t\t// Find the union of the frustum values of the cameras and scale\n\t\t\t// the values so that the near plane's position does not change in world space,\n\t\t\t// although must now be relative to the new union camera.\n\t\t\tconst near2 = near + zOffset;\n\t\t\tconst far2 = far + zOffset;\n\t\t\tconst left2 = left - xOffset;\n\t\t\tconst right2 = right + ( ipd - xOffset );\n\t\t\tconst top2 = topFov * far / far2 * near2;\n\t\t\tconst bottom2 = bottomFov * far / far2 * near2;\n\n\t\t\tcamera.projectionMatrix.makePerspective( left2, right2, top2, bottom2, near2, far2 );\n\n\t\t}\n\n\t\tfunction updateCamera( camera, parent ) {\n\n\t\t\tif ( parent === null ) {\n\n\t\t\t\tcamera.matrixWorld.copy( camera.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tcamera.matrixWorld.multiplyMatrices( parent.matrixWorld, camera.matrix );\n\n\t\t\t}\n\n\t\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n\n\t\t}\n\n\t\tthis.updateCamera = function ( camera ) {\n\n\t\t\tif ( session === null ) return;\n\n\t\t\tcameraVR.near = cameraR.near = cameraL.near = camera.near;\n\t\t\tcameraVR.far = cameraR.far = cameraL.far = camera.far;\n\n\t\t\tif ( _currentDepthNear !== cameraVR.near || _currentDepthFar !== cameraVR.far ) {\n\n\t\t\t\t// Note that the new renderState won't apply until the next frame. See #18320\n\n\t\t\t\tsession.updateRenderState( {\n\t\t\t\t\tdepthNear: cameraVR.near,\n\t\t\t\t\tdepthFar: cameraVR.far\n\t\t\t\t} );\n\n\t\t\t\t_currentDepthNear = cameraVR.near;\n\t\t\t\t_currentDepthFar = cameraVR.far;\n\n\t\t\t}\n\n\t\t\tconst parent = camera.parent;\n\t\t\tconst cameras = cameraVR.cameras;\n\n\t\t\tupdateCamera( cameraVR, parent );\n\n\t\t\tfor ( let i = 0; i < cameras.length; i ++ ) {\n\n\t\t\t\tupdateCamera( cameras[ i ], parent );\n\n\t\t\t}\n\n\t\t\tcameraVR.matrixWorld.decompose( cameraVR.position, cameraVR.quaternion, cameraVR.scale );\n\n\t\t\t// update user camera and its children\n\n\t\t\tcamera.position.copy( cameraVR.position );\n\t\t\tcamera.quaternion.copy( cameraVR.quaternion );\n\t\t\tcamera.scale.copy( cameraVR.scale );\n\t\t\tcamera.matrix.copy( cameraVR.matrix );\n\t\t\tcamera.matrixWorld.copy( cameraVR.matrixWorld );\n\n\t\t\tconst children = camera.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tchildren[ i ].updateMatrixWorld( true );\n\n\t\t\t}\n\n\t\t\t// update projection matrix for proper view frustum culling\n\n\t\t\tif ( cameras.length === 2 ) {\n\n\t\t\t\tsetProjectionFromUnion( cameraVR, cameraL, cameraR );\n\n\t\t\t} else {\n\n\t\t\t\t// assume single camera setup (AR)\n\n\t\t\t\tcameraVR.projectionMatrix.copy( cameraL.projectionMatrix );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getCamera = function () {\n\n\t\t\treturn cameraVR;\n\n\t\t};\n\n\t\tthis.getFoveation = function () {\n\n\t\t\tif ( glProjLayer !== null ) {\n\n\t\t\t\treturn glProjLayer.fixedFoveation;\n\n\t\t\t}\n\n\t\t\tif ( glBaseLayer !== null ) {\n\n\t\t\t\treturn glBaseLayer.fixedFoveation;\n\n\t\t\t}\n\n\t\t\treturn undefined;\n\n\t\t};\n\n\t\tthis.setFoveation = function ( foveation ) {\n\n\t\t\t// 0 = no foveation = full resolution\n\t\t\t// 1 = maximum foveation = the edges render at lower resolution\n\n\t\t\tif ( glProjLayer !== null ) {\n\n\t\t\t\tglProjLayer.fixedFoveation = foveation;\n\n\t\t\t}\n\n\t\t\tif ( glBaseLayer !== null && glBaseLayer.fixedFoveation !== undefined ) {\n\n\t\t\t\tglBaseLayer.fixedFoveation = foveation;\n\n\t\t\t}\n\n\t\t};\n\n\t\t// Animation Loop\n\n\t\tlet onAnimationFrameCallback = null;\n\n\t\tfunction onAnimationFrame( time, frame ) {\n\n\t\t\tpose = frame.getViewerPose( customReferenceSpace || referenceSpace );\n\t\t\txrFrame = frame;\n\n\t\t\tif ( pose !== null ) {\n\n\t\t\t\tconst views = pose.views;\n\n\t\t\t\tif ( glBaseLayer !== null ) {\n\n\t\t\t\t\trenderer.setRenderTargetFramebuffer( newRenderTarget, glBaseLayer.framebuffer );\n\t\t\t\t\trenderer.setRenderTarget( newRenderTarget );\n\n\t\t\t\t}\n\n\t\t\t\tlet cameraVRNeedsUpdate = false;\n\n\t\t\t\t// check if it's necessary to rebuild cameraVR's camera list\n\n\t\t\t\tif ( views.length !== cameraVR.cameras.length ) {\n\n\t\t\t\t\tcameraVR.cameras.length = 0;\n\t\t\t\t\tcameraVRNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < views.length; i ++ ) {\n\n\t\t\t\t\tconst view = views[ i ];\n\n\t\t\t\t\tlet viewport = null;\n\n\t\t\t\t\tif ( glBaseLayer !== null ) {\n\n\t\t\t\t\t\tviewport = glBaseLayer.getViewport( view );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst glSubImage = glBinding.getViewSubImage( glProjLayer, view );\n\t\t\t\t\t\tviewport = glSubImage.viewport;\n\n\t\t\t\t\t\t// For side-by-side projection, we only produce a single texture for both eyes.\n\t\t\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\t\t\trenderer.setRenderTargetTextures(\n\t\t\t\t\t\t\t\tnewRenderTarget,\n\t\t\t\t\t\t\t\tglSubImage.colorTexture,\n\t\t\t\t\t\t\t\tglProjLayer.ignoreDepthValues ? undefined : glSubImage.depthStencilTexture );\n\n\t\t\t\t\t\t\trenderer.setRenderTarget( newRenderTarget );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst camera = cameras[ i ];\n\n\t\t\t\t\tcamera.matrix.fromArray( view.transform.matrix );\n\t\t\t\t\tcamera.projectionMatrix.fromArray( view.projectionMatrix );\n\t\t\t\t\tcamera.viewport.set( viewport.x, viewport.y, viewport.width, viewport.height );\n\n\t\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\t\tcameraVR.matrix.copy( camera.matrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( cameraVRNeedsUpdate === true ) {\n\n\t\t\t\t\t\tcameraVR.cameras.push( camera );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tconst inputSources = session.inputSources;\n\n\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\tconst inputSource = inputSources[ i ];\n\t\t\t\tconst controller = inputSourcesMap.get( inputSource );\n\n\t\t\t\tif ( controller !== undefined ) {\n\n\t\t\t\t\tcontroller.update( inputSource, frame, customReferenceSpace || referenceSpace );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time, frame );\n\n\t\t\txrFrame = null;\n\n\t\t}\n\n\t\tconst animation = new WebGLAnimation();\n\n\t\tanimation.setAnimationLoop( onAnimationFrame );\n\n\t\tthis.setAnimationLoop = function ( callback ) {\n\n\t\t\tonAnimationFrameCallback = callback;\n\n\t\t};\n\n\t\tthis.dispose = function () {};\n\n\t}\n\n}\n\nfunction WebGLMaterials( renderer, properties ) {\n\n\tfunction refreshFogUniforms( uniforms, fog ) {\n\n\t\tuniforms.fogColor.value.copy( fog.color );\n\n\t\tif ( fog.isFog ) {\n\n\t\t\tuniforms.fogNear.value = fog.near;\n\t\t\tuniforms.fogFar.value = fog.far;\n\n\t\t} else if ( fog.isFogExp2 ) {\n\n\t\t\tuniforms.fogDensity.value = fog.density;\n\n\t\t}\n\n\t}\n\n\tfunction refreshMaterialUniforms( uniforms, material, pixelRatio, height, transmissionRenderTarget ) {\n\n\t\tif ( material.isMeshBasicMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshLambertMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshToonMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsToon( uniforms, material );\n\n\t\t} else if ( material.isMeshPhongMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsPhong( uniforms, material );\n\n\t\t} else if ( material.isMeshStandardMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsStandard( uniforms, material );\n\n\t\t\tif ( material.isMeshPhysicalMaterial ) {\n\n\t\t\t\trefreshUniformsPhysical( uniforms, material, transmissionRenderTarget );\n\n\t\t\t}\n\n\t\t} else if ( material.isMeshMatcapMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsMatcap( uniforms, material );\n\n\t\t} else if ( material.isMeshDepthMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshDistanceMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsDistance( uniforms, material );\n\n\t\t} else if ( material.isMeshNormalMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isLineBasicMaterial ) {\n\n\t\t\trefreshUniformsLine( uniforms, material );\n\n\t\t\tif ( material.isLineDashedMaterial ) {\n\n\t\t\t\trefreshUniformsDash( uniforms, material );\n\n\t\t\t}\n\n\t\t} else if ( material.isPointsMaterial ) {\n\n\t\t\trefreshUniformsPoints( uniforms, material, pixelRatio, height );\n\n\t\t} else if ( material.isSpriteMaterial ) {\n\n\t\t\trefreshUniformsSprites( uniforms, material );\n\n\t\t} else if ( material.isShadowMaterial ) {\n\n\t\t\tuniforms.color.value.copy( material.color );\n\t\t\tuniforms.opacity.value = material.opacity;\n\n\t\t} else if ( material.isShaderMaterial ) {\n\n\t\t\tmaterial.uniformsNeedUpdate = false; // #15581\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsCommon( uniforms, material ) {\n\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tif ( material.color ) {\n\n\t\t\tuniforms.diffuse.value.copy( material.color );\n\n\t\t}\n\n\t\tif ( material.emissive ) {\n\n\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\n\n\t\t}\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.specularMap ) {\n\n\t\t\tuniforms.specularMap.value = material.specularMap;\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t\tconst envMap = properties.get( material ).envMap;\n\n\t\tif ( envMap ) {\n\n\t\t\tuniforms.envMap.value = envMap;\n\n\t\t\tuniforms.flipEnvMap.value = ( envMap.isCubeTexture && envMap.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\t\tuniforms.ior.value = material.ior;\n\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t\t}\n\n\t\tif ( material.lightMap ) {\n\n\t\t\tuniforms.lightMap.value = material.lightMap;\n\n\t\t\t// artist-friendly light intensity scaling factor\n\t\t\tconst scaleFactor = ( renderer.physicallyCorrectLights !== true ) ? Math.PI : 1;\n\n\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity * scaleFactor;\n\n\t\t}\n\n\t\tif ( material.aoMap ) {\n\n\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities\n\t\t// 1. color map\n\t\t// 2. specular map\n\t\t// 3. displacementMap map\n\t\t// 4. normal map\n\t\t// 5. bump map\n\t\t// 6. roughnessMap map\n\t\t// 7. metalnessMap map\n\t\t// 8. alphaMap map\n\t\t// 9. emissiveMap map\n\t\t// 10. clearcoat map\n\t\t// 11. clearcoat normal map\n\t\t// 12. clearcoat roughnessMap map\n\t\t// 13. specular intensity map\n\t\t// 14. specular tint map\n\t\t// 15. transmission map\n\t\t// 16. thickness map\n\n\t\tlet uvScaleMap;\n\n\t\tif ( material.map ) {\n\n\t\t\tuvScaleMap = material.map;\n\n\t\t} else if ( material.specularMap ) {\n\n\t\t\tuvScaleMap = material.specularMap;\n\n\t\t} else if ( material.displacementMap ) {\n\n\t\t\tuvScaleMap = material.displacementMap;\n\n\t\t} else if ( material.normalMap ) {\n\n\t\t\tuvScaleMap = material.normalMap;\n\n\t\t} else if ( material.bumpMap ) {\n\n\t\t\tuvScaleMap = material.bumpMap;\n\n\t\t} else if ( material.roughnessMap ) {\n\n\t\t\tuvScaleMap = material.roughnessMap;\n\n\t\t} else if ( material.metalnessMap ) {\n\n\t\t\tuvScaleMap = material.metalnessMap;\n\n\t\t} else if ( material.alphaMap ) {\n\n\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t} else if ( material.emissiveMap ) {\n\n\t\t\tuvScaleMap = material.emissiveMap;\n\n\t\t} else if ( material.clearcoatMap ) {\n\n\t\t\tuvScaleMap = material.clearcoatMap;\n\n\t\t} else if ( material.clearcoatNormalMap ) {\n\n\t\t\tuvScaleMap = material.clearcoatNormalMap;\n\n\t\t} else if ( material.clearcoatRoughnessMap ) {\n\n\t\t\tuvScaleMap = material.clearcoatRoughnessMap;\n\n\t\t} else if ( material.specularIntensityMap ) {\n\n\t\t\tuvScaleMap = material.specularIntensityMap;\n\n\t\t} else if ( material.specularColorMap ) {\n\n\t\t\tuvScaleMap = material.specularColorMap;\n\n\t\t} else if ( material.transmissionMap ) {\n\n\t\t\tuvScaleMap = material.transmissionMap;\n\n\t\t} else if ( material.thicknessMap ) {\n\n\t\t\tuvScaleMap = material.thicknessMap;\n\n\t\t} else if ( material.sheenColorMap ) {\n\n\t\t\tuvScaleMap = material.sheenColorMap;\n\n\t\t} else if ( material.sheenRoughnessMap ) {\n\n\t\t\tuvScaleMap = material.sheenRoughnessMap;\n\n\t\t}\n\n\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\t// backwards compatibility\n\t\t\tif ( uvScaleMap.isWebGLRenderTarget ) {\n\n\t\t\t\tuvScaleMap = uvScaleMap.texture;\n\n\t\t\t}\n\n\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities for uv2\n\t\t// 1. ao map\n\t\t// 2. light map\n\n\t\tlet uv2ScaleMap;\n\n\t\tif ( material.aoMap ) {\n\n\t\t\tuv2ScaleMap = material.aoMap;\n\n\t\t} else if ( material.lightMap ) {\n\n\t\t\tuv2ScaleMap = material.lightMap;\n\n\t\t}\n\n\t\tif ( uv2ScaleMap !== undefined ) {\n\n\t\t\t// backwards compatibility\n\t\t\tif ( uv2ScaleMap.isWebGLRenderTarget ) {\n\n\t\t\t\tuv2ScaleMap = uv2ScaleMap.texture;\n\n\t\t\t}\n\n\t\t\tif ( uv2ScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuv2ScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uv2Transform.value.copy( uv2ScaleMap.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLine( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\n\t}\n\n\tfunction refreshUniformsDash( uniforms, material ) {\n\n\t\tuniforms.dashSize.value = material.dashSize;\n\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\n\t\tuniforms.scale.value = material.scale;\n\n\t}\n\n\tfunction refreshUniformsPoints( uniforms, material, pixelRatio, height ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.size.value = material.size * pixelRatio;\n\t\tuniforms.scale.value = height * 0.5;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities\n\t\t// 1. color map\n\t\t// 2. alpha map\n\n\t\tlet uvScaleMap;\n\n\t\tif ( material.map ) {\n\n\t\t\tuvScaleMap = material.map;\n\n\t\t} else if ( material.alphaMap ) {\n\n\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t}\n\n\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsSprites( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.rotation.value = material.rotation;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities\n\t\t// 1. color map\n\t\t// 2. alpha map\n\n\t\tlet uvScaleMap;\n\n\t\tif ( material.map ) {\n\n\t\t\tuvScaleMap = material.map;\n\n\t\t} else if ( material.alphaMap ) {\n\n\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t}\n\n\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhong( uniforms, material ) {\n\n\t\tuniforms.specular.value.copy( material.specular );\n\t\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\n\n\t}\n\n\tfunction refreshUniformsToon( uniforms, material ) {\n\n\t\tif ( material.gradientMap ) {\n\n\t\t\tuniforms.gradientMap.value = material.gradientMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsStandard( uniforms, material ) {\n\n\t\tuniforms.roughness.value = material.roughness;\n\t\tuniforms.metalness.value = material.metalness;\n\n\t\tif ( material.roughnessMap ) {\n\n\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\n\n\t\t}\n\n\t\tif ( material.metalnessMap ) {\n\n\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\n\n\t\t}\n\n\t\tconst envMap = properties.get( material ).envMap;\n\n\t\tif ( envMap ) {\n\n\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\n\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhysical( uniforms, material, transmissionRenderTarget ) {\n\n\t\tuniforms.ior.value = material.ior; // also part of uniforms common\n\n\t\tif ( material.sheen > 0 ) {\n\n\t\t\tuniforms.sheenColor.value.copy( material.sheenColor ).multiplyScalar( material.sheen );\n\n\t\t\tuniforms.sheenRoughness.value = material.sheenRoughness;\n\n\t\t\tif ( material.sheenColorMap ) {\n\n\t\t\t\tuniforms.sheenColorMap.value = material.sheenColorMap;\n\n\t\t\t}\n\n\t\t\tif ( material.sheenRoughnessMap ) {\n\n\t\t\t\tuniforms.sheenRoughnessMap.value = material.sheenRoughnessMap;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.clearcoat > 0 ) {\n\n\t\t\tuniforms.clearcoat.value = material.clearcoat;\n\t\t\tuniforms.clearcoatRoughness.value = material.clearcoatRoughness;\n\n\t\t\tif ( material.clearcoatMap ) {\n\n\t\t\t\tuniforms.clearcoatMap.value = material.clearcoatMap;\n\n\t\t\t}\n\n\t\t\tif ( material.clearcoatRoughnessMap ) {\n\n\t\t\t\tuniforms.clearcoatRoughnessMap.value = material.clearcoatRoughnessMap;\n\n\t\t\t}\n\n\t\t\tif ( material.clearcoatNormalMap ) {\n\n\t\t\t\tuniforms.clearcoatNormalScale.value.copy( material.clearcoatNormalScale );\n\t\t\t\tuniforms.clearcoatNormalMap.value = material.clearcoatNormalMap;\n\n\t\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\t\tuniforms.clearcoatNormalScale.value.negate();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.transmission > 0 ) {\n\n\t\t\tuniforms.transmission.value = material.transmission;\n\t\t\tuniforms.transmissionSamplerMap.value = transmissionRenderTarget.texture;\n\t\t\tuniforms.transmissionSamplerSize.value.set( transmissionRenderTarget.width, transmissionRenderTarget.height );\n\n\t\t\tif ( material.transmissionMap ) {\n\n\t\t\t\tuniforms.transmissionMap.value = material.transmissionMap;\n\n\t\t\t}\n\n\t\t\tuniforms.thickness.value = material.thickness;\n\n\t\t\tif ( material.thicknessMap ) {\n\n\t\t\t\tuniforms.thicknessMap.value = material.thicknessMap;\n\n\t\t\t}\n\n\t\t\tuniforms.attenuationDistance.value = material.attenuationDistance;\n\t\t\tuniforms.attenuationColor.value.copy( material.attenuationColor );\n\n\t\t}\n\n\t\tuniforms.specularIntensity.value = material.specularIntensity;\n\t\tuniforms.specularColor.value.copy( material.specularColor );\n\n\t\tif ( material.specularIntensityMap ) {\n\n\t\t\tuniforms.specularIntensityMap.value = material.specularIntensityMap;\n\n\t\t}\n\n\t\tif ( material.specularColorMap ) {\n\n\t\t\tuniforms.specularColorMap.value = material.specularColorMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsMatcap( uniforms, material ) {\n\n\t\tif ( material.matcap ) {\n\n\t\t\tuniforms.matcap.value = material.matcap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDistance( uniforms, material ) {\n\n\t\tuniforms.referencePosition.value.copy( material.referencePosition );\n\t\tuniforms.nearDistance.value = material.nearDistance;\n\t\tuniforms.farDistance.value = material.farDistance;\n\n\t}\n\n\treturn {\n\t\trefreshFogUniforms: refreshFogUniforms,\n\t\trefreshMaterialUniforms: refreshMaterialUniforms\n\t};\n\n}\n\nfunction createCanvasElement() {\n\n\tconst canvas = createElementNS( 'canvas' );\n\tcanvas.style.display = 'block';\n\treturn canvas;\n\n}\n\nfunction WebGLRenderer( parameters = {} ) {\n\n\tconst _canvas = parameters.canvas !== undefined ? parameters.canvas : createCanvasElement(),\n\t\t_context = parameters.context !== undefined ? parameters.context : null,\n\n\t\t_depth = parameters.depth !== undefined ? parameters.depth : true,\n\t\t_stencil = parameters.stencil !== undefined ? parameters.stencil : true,\n\t\t_antialias = parameters.antialias !== undefined ? parameters.antialias : false,\n\t\t_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\n\t\t_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false,\n\t\t_powerPreference = parameters.powerPreference !== undefined ? parameters.powerPreference : 'default',\n\t\t_failIfMajorPerformanceCaveat = parameters.failIfMajorPerformanceCaveat !== undefined ? parameters.failIfMajorPerformanceCaveat : false;\n\n\tlet _alpha;\n\n\tif ( _context !== null ) {\n\n\t\t_alpha = _context.getContextAttributes().alpha;\n\n\t} else {\n\n\t\t_alpha = parameters.alpha !== undefined ? parameters.alpha : false;\n\n\t}\n\n\tlet currentRenderList = null;\n\tlet currentRenderState = null;\n\n\t// render() can be called from within a callback triggered by another render.\n\t// We track this so that the nested render call gets its list and state isolated from the parent render call.\n\n\tconst renderListStack = [];\n\tconst renderStateStack = [];\n\n\t// public properties\n\n\tthis.domElement = _canvas;\n\n\t// Debug configuration container\n\tthis.debug = {\n\n\t\t/**\n\t\t * Enables error checking and reporting when shader programs are being compiled\n\t\t * @type {boolean}\n\t\t */\n\t\tcheckShaderErrors: true\n\t};\n\n\t// clearing\n\n\tthis.autoClear = true;\n\tthis.autoClearColor = true;\n\tthis.autoClearDepth = true;\n\tthis.autoClearStencil = true;\n\n\t// scene graph\n\n\tthis.sortObjects = true;\n\n\t// user-defined clipping\n\n\tthis.clippingPlanes = [];\n\tthis.localClippingEnabled = false;\n\n\t// physically based shading\n\n\tthis.outputEncoding = LinearEncoding;\n\n\t// physical lights\n\n\tthis.physicallyCorrectLights = false;\n\n\t// tone mapping\n\n\tthis.toneMapping = NoToneMapping;\n\tthis.toneMappingExposure = 1.0;\n\n\t// internal properties\n\n\tconst _this = this;\n\n\tlet _isContextLost = false;\n\n\t// internal state cache\n\n\tlet _currentActiveCubeFace = 0;\n\tlet _currentActiveMipmapLevel = 0;\n\tlet _currentRenderTarget = null;\n\tlet _currentMaterialId = - 1;\n\n\tlet _currentCamera = null;\n\n\tconst _currentViewport = new Vector4();\n\tconst _currentScissor = new Vector4();\n\tlet _currentScissorTest = null;\n\n\t//\n\n\tlet _width = _canvas.width;\n\tlet _height = _canvas.height;\n\n\tlet _pixelRatio = 1;\n\tlet _opaqueSort = null;\n\tlet _transparentSort = null;\n\n\tconst _viewport = new Vector4( 0, 0, _width, _height );\n\tconst _scissor = new Vector4( 0, 0, _width, _height );\n\tlet _scissorTest = false;\n\n\t// frustum\n\n\tconst _frustum = new Frustum();\n\n\t// clipping\n\n\tlet _clippingEnabled = false;\n\tlet _localClippingEnabled = false;\n\n\t// transmission\n\n\tlet _transmissionRenderTarget = null;\n\n\t// camera matrices cache\n\n\tconst _projScreenMatrix = new Matrix4();\n\n\tconst _vector2 = new Vector2();\n\tconst _vector3 = new Vector3();\n\n\tconst _emptyScene = { background: null, fog: null, environment: null, overrideMaterial: null, isScene: true };\n\n\tfunction getTargetPixelRatio() {\n\n\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\n\n\t}\n\n\t// initialize\n\n\tlet _gl = _context;\n\n\tfunction getContext( contextNames, contextAttributes ) {\n\n\t\tfor ( let i = 0; i < contextNames.length; i ++ ) {\n\n\t\t\tconst contextName = contextNames[ i ];\n\t\t\tconst context = _canvas.getContext( contextName, contextAttributes );\n\t\t\tif ( context !== null ) return context;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\ttry {\n\n\t\tconst contextAttributes = {\n\t\t\talpha: true,\n\t\t\tdepth: _depth,\n\t\t\tstencil: _stencil,\n\t\t\tantialias: _antialias,\n\t\t\tpremultipliedAlpha: _premultipliedAlpha,\n\t\t\tpreserveDrawingBuffer: _preserveDrawingBuffer,\n\t\t\tpowerPreference: _powerPreference,\n\t\t\tfailIfMajorPerformanceCaveat: _failIfMajorPerformanceCaveat\n\t\t};\n\n\t\t// OffscreenCanvas does not have setAttribute, see #22811\n\t\tif ( 'setAttribute' in _canvas ) _canvas.setAttribute( 'data-engine', `three.js r${REVISION}` );\n\n\t\t// event listeners must be registered before WebGL context is created, see #12753\n\t\t_canvas.addEventListener( 'webglcontextlost', onContextLost, false );\n\t\t_canvas.addEventListener( 'webglcontextrestored', onContextRestore, false );\n\n\t\tif ( _gl === null ) {\n\n\t\t\tconst contextNames = [ 'webgl2', 'webgl', 'experimental-webgl' ];\n\n\t\t\tif ( _this.isWebGL1Renderer === true ) {\n\n\t\t\t\tcontextNames.shift();\n\n\t\t\t}\n\n\t\t\t_gl = getContext( contextNames, contextAttributes );\n\n\t\t\tif ( _gl === null ) {\n\n\t\t\t\tif ( getContext( contextNames ) ) {\n\n\t\t\t\t\tthrow new Error( 'Error creating WebGL context with your selected attributes.' );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( 'Error creating WebGL context.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Some experimental-webgl implementations do not have getShaderPrecisionFormat\n\n\t\tif ( _gl.getShaderPrecisionFormat === undefined ) {\n\n\t\t\t_gl.getShaderPrecisionFormat = function () {\n\n\t\t\t\treturn { 'rangeMin': 1, 'rangeMax': 1, 'precision': 1 };\n\n\t\t\t};\n\n\t\t}\n\n\t} catch ( error ) {\n\n\t\tconsole.error( 'THREE.WebGLRenderer: ' + error.message );\n\t\tthrow error;\n\n\t}\n\n\tlet extensions, capabilities, state, info;\n\tlet properties, textures, cubemaps, cubeuvmaps, attributes, geometries, objects;\n\tlet programCache, materials, renderLists, renderStates, clipping, shadowMap;\n\n\tlet background, morphtargets, bufferRenderer, indexedBufferRenderer;\n\n\tlet utils, bindingStates;\n\n\tfunction initGLContext() {\n\n\t\textensions = new WebGLExtensions( _gl );\n\n\t\tcapabilities = new WebGLCapabilities( _gl, extensions, parameters );\n\n\t\textensions.init( capabilities );\n\n\t\tutils = new WebGLUtils( _gl, extensions, capabilities );\n\n\t\tstate = new WebGLState( _gl, extensions, capabilities );\n\n\t\tinfo = new WebGLInfo( _gl );\n\t\tproperties = new WebGLProperties();\n\t\ttextures = new WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info );\n\t\tcubemaps = new WebGLCubeMaps( _this );\n\t\tcubeuvmaps = new WebGLCubeUVMaps( _this );\n\t\tattributes = new WebGLAttributes( _gl, capabilities );\n\t\tbindingStates = new WebGLBindingStates( _gl, extensions, attributes, capabilities );\n\t\tgeometries = new WebGLGeometries( _gl, attributes, info, bindingStates );\n\t\tobjects = new WebGLObjects( _gl, geometries, attributes, info );\n\t\tmorphtargets = new WebGLMorphtargets( _gl, capabilities, textures );\n\t\tclipping = new WebGLClipping( properties );\n\t\tprogramCache = new WebGLPrograms( _this, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping );\n\t\tmaterials = new WebGLMaterials( _this, properties );\n\t\trenderLists = new WebGLRenderLists();\n\t\trenderStates = new WebGLRenderStates( extensions, capabilities );\n\t\tbackground = new WebGLBackground( _this, cubemaps, state, objects, _alpha, _premultipliedAlpha );\n\t\tshadowMap = new WebGLShadowMap( _this, objects, capabilities );\n\n\t\tbufferRenderer = new WebGLBufferRenderer( _gl, extensions, info, capabilities );\n\t\tindexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, info, capabilities );\n\n\t\tinfo.programs = programCache.programs;\n\n\t\t_this.capabilities = capabilities;\n\t\t_this.extensions = extensions;\n\t\t_this.properties = properties;\n\t\t_this.renderLists = renderLists;\n\t\t_this.shadowMap = shadowMap;\n\t\t_this.state = state;\n\t\t_this.info = info;\n\n\t}\n\n\tinitGLContext();\n\n\t// xr\n\n\tconst xr = new WebXRManager( _this, _gl );\n\n\tthis.xr = xr;\n\n\t// API\n\n\tthis.getContext = function () {\n\n\t\treturn _gl;\n\n\t};\n\n\tthis.getContextAttributes = function () {\n\n\t\treturn _gl.getContextAttributes();\n\n\t};\n\n\tthis.forceContextLoss = function () {\n\n\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\tif ( extension ) extension.loseContext();\n\n\t};\n\n\tthis.forceContextRestore = function () {\n\n\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\tif ( extension ) extension.restoreContext();\n\n\t};\n\n\tthis.getPixelRatio = function () {\n\n\t\treturn _pixelRatio;\n\n\t};\n\n\tthis.setPixelRatio = function ( value ) {\n\n\t\tif ( value === undefined ) return;\n\n\t\t_pixelRatio = value;\n\n\t\tthis.setSize( _width, _height, false );\n\n\t};\n\n\tthis.getSize = function ( target ) {\n\n\t\treturn target.set( _width, _height );\n\n\t};\n\n\tthis.setSize = function ( width, height, updateStyle ) {\n\n\t\tif ( xr.isPresenting ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\t_width = width;\n\t\t_height = height;\n\n\t\t_canvas.width = Math.floor( width * _pixelRatio );\n\t\t_canvas.height = Math.floor( height * _pixelRatio );\n\n\t\tif ( updateStyle !== false ) {\n\n\t\t\t_canvas.style.width = width + 'px';\n\t\t\t_canvas.style.height = height + 'px';\n\n\t\t}\n\n\t\tthis.setViewport( 0, 0, width, height );\n\n\t};\n\n\tthis.getDrawingBufferSize = function ( target ) {\n\n\t\treturn target.set( _width * _pixelRatio, _height * _pixelRatio ).floor();\n\n\t};\n\n\tthis.setDrawingBufferSize = function ( width, height, pixelRatio ) {\n\n\t\t_width = width;\n\t\t_height = height;\n\n\t\t_pixelRatio = pixelRatio;\n\n\t\t_canvas.width = Math.floor( width * pixelRatio );\n\t\t_canvas.height = Math.floor( height * pixelRatio );\n\n\t\tthis.setViewport( 0, 0, width, height );\n\n\t};\n\n\tthis.getCurrentViewport = function ( target ) {\n\n\t\treturn target.copy( _currentViewport );\n\n\t};\n\n\tthis.getViewport = function ( target ) {\n\n\t\treturn target.copy( _viewport );\n\n\t};\n\n\tthis.setViewport = function ( x, y, width, height ) {\n\n\t\tif ( x.isVector4 ) {\n\n\t\t\t_viewport.set( x.x, x.y, x.z, x.w );\n\n\t\t} else {\n\n\t\t\t_viewport.set( x, y, width, height );\n\n\t\t}\n\n\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor() );\n\n\t};\n\n\tthis.getScissor = function ( target ) {\n\n\t\treturn target.copy( _scissor );\n\n\t};\n\n\tthis.setScissor = function ( x, y, width, height ) {\n\n\t\tif ( x.isVector4 ) {\n\n\t\t\t_scissor.set( x.x, x.y, x.z, x.w );\n\n\t\t} else {\n\n\t\t\t_scissor.set( x, y, width, height );\n\n\t\t}\n\n\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor() );\n\n\t};\n\n\tthis.getScissorTest = function () {\n\n\t\treturn _scissorTest;\n\n\t};\n\n\tthis.setScissorTest = function ( boolean ) {\n\n\t\tstate.setScissorTest( _scissorTest = boolean );\n\n\t};\n\n\tthis.setOpaqueSort = function ( method ) {\n\n\t\t_opaqueSort = method;\n\n\t};\n\n\tthis.setTransparentSort = function ( method ) {\n\n\t\t_transparentSort = method;\n\n\t};\n\n\t// Clearing\n\n\tthis.getClearColor = function ( target ) {\n\n\t\treturn target.copy( background.getClearColor() );\n\n\t};\n\n\tthis.setClearColor = function () {\n\n\t\tbackground.setClearColor.apply( background, arguments );\n\n\t};\n\n\tthis.getClearAlpha = function () {\n\n\t\treturn background.getClearAlpha();\n\n\t};\n\n\tthis.setClearAlpha = function () {\n\n\t\tbackground.setClearAlpha.apply( background, arguments );\n\n\t};\n\n\tthis.clear = function ( color = true, depth = true, stencil = true ) {\n\n\t\tlet bits = 0;\n\n\t\tif ( color ) bits |= 16384;\n\t\tif ( depth ) bits |= 256;\n\t\tif ( stencil ) bits |= 1024;\n\n\t\t_gl.clear( bits );\n\n\t};\n\n\tthis.clearColor = function () {\n\n\t\tthis.clear( true, false, false );\n\n\t};\n\n\tthis.clearDepth = function () {\n\n\t\tthis.clear( false, true, false );\n\n\t};\n\n\tthis.clearStencil = function () {\n\n\t\tthis.clear( false, false, true );\n\n\t};\n\n\t//\n\n\tthis.dispose = function () {\n\n\t\t_canvas.removeEventListener( 'webglcontextlost', onContextLost, false );\n\t\t_canvas.removeEventListener( 'webglcontextrestored', onContextRestore, false );\n\n\t\trenderLists.dispose();\n\t\trenderStates.dispose();\n\t\tproperties.dispose();\n\t\tcubemaps.dispose();\n\t\tcubeuvmaps.dispose();\n\t\tobjects.dispose();\n\t\tbindingStates.dispose();\n\t\tprogramCache.dispose();\n\n\t\txr.dispose();\n\n\t\txr.removeEventListener( 'sessionstart', onXRSessionStart );\n\t\txr.removeEventListener( 'sessionend', onXRSessionEnd );\n\n\t\tif ( _transmissionRenderTarget ) {\n\n\t\t\t_transmissionRenderTarget.dispose();\n\t\t\t_transmissionRenderTarget = null;\n\n\t\t}\n\n\t\tanimation.stop();\n\n\t};\n\n\t// Events\n\n\tfunction onContextLost( event ) {\n\n\t\tevent.preventDefault();\n\n\t\tconsole.log( 'THREE.WebGLRenderer: Context Lost.' );\n\n\t\t_isContextLost = true;\n\n\t}\n\n\tfunction onContextRestore( /* event */ ) {\n\n\t\tconsole.log( 'THREE.WebGLRenderer: Context Restored.' );\n\n\t\t_isContextLost = false;\n\n\t\tconst infoAutoReset = info.autoReset;\n\t\tconst shadowMapEnabled = shadowMap.enabled;\n\t\tconst shadowMapAutoUpdate = shadowMap.autoUpdate;\n\t\tconst shadowMapNeedsUpdate = shadowMap.needsUpdate;\n\t\tconst shadowMapType = shadowMap.type;\n\n\t\tinitGLContext();\n\n\t\tinfo.autoReset = infoAutoReset;\n\t\tshadowMap.enabled = shadowMapEnabled;\n\t\tshadowMap.autoUpdate = shadowMapAutoUpdate;\n\t\tshadowMap.needsUpdate = shadowMapNeedsUpdate;\n\t\tshadowMap.type = shadowMapType;\n\n\t}\n\n\tfunction onMaterialDispose( event ) {\n\n\t\tconst material = event.target;\n\n\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\tdeallocateMaterial( material );\n\n\t}\n\n\t// Buffer deallocation\n\n\tfunction deallocateMaterial( material ) {\n\n\t\treleaseMaterialProgramReferences( material );\n\n\t\tproperties.remove( material );\n\n\t}\n\n\n\tfunction releaseMaterialProgramReferences( material ) {\n\n\t\tconst programs = properties.get( material ).programs;\n\n\t\tif ( programs !== undefined ) {\n\n\t\t\tprograms.forEach( function ( program ) {\n\n\t\t\t\tprogramCache.releaseProgram( program );\n\n\t\t\t} );\n\n\t\t\tif ( material.isShaderMaterial ) {\n\n\t\t\t\tprogramCache.releaseShaderCache( material );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// Buffer rendering\n\n\tthis.renderBufferDirect = function ( camera, scene, geometry, material, object, group ) {\n\n\t\tif ( scene === null ) scene = _emptyScene; // renderBufferDirect second parameter used to be fog (could be null)\n\n\t\tconst frontFaceCW = ( object.isMesh && object.matrixWorld.determinant() < 0 );\n\n\t\tconst program = setProgram( camera, scene, geometry, material, object );\n\n\t\tstate.setMaterial( material, frontFaceCW );\n\n\t\t//\n\n\t\tlet index = geometry.index;\n\t\tconst position = geometry.attributes.position;\n\n\t\t//\n\n\t\tif ( index === null ) {\n\n\t\t\tif ( position === undefined || position.count === 0 ) return;\n\n\t\t} else if ( index.count === 0 ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t//\n\n\t\tlet rangeFactor = 1;\n\n\t\tif ( material.wireframe === true ) {\n\n\t\t\tindex = geometries.getWireframeAttribute( geometry );\n\t\t\trangeFactor = 2;\n\n\t\t}\n\n\t\tbindingStates.setup( object, material, program, geometry, index );\n\n\t\tlet attribute;\n\t\tlet renderer = bufferRenderer;\n\n\t\tif ( index !== null ) {\n\n\t\t\tattribute = attributes.get( index );\n\n\t\t\trenderer = indexedBufferRenderer;\n\t\t\trenderer.setIndex( attribute );\n\n\t\t}\n\n\t\t//\n\n\t\tconst dataCount = ( index !== null ) ? index.count : position.count;\n\n\t\tconst rangeStart = geometry.drawRange.start * rangeFactor;\n\t\tconst rangeCount = geometry.drawRange.count * rangeFactor;\n\n\t\tconst groupStart = group !== null ? group.start * rangeFactor : 0;\n\t\tconst groupCount = group !== null ? group.count * rangeFactor : Infinity;\n\n\t\tconst drawStart = Math.max( rangeStart, groupStart );\n\t\tconst drawEnd = Math.min( dataCount, rangeStart + rangeCount, groupStart + groupCount ) - 1;\n\n\t\tconst drawCount = Math.max( 0, drawEnd - drawStart + 1 );\n\n\t\tif ( drawCount === 0 ) return;\n\n\t\t//\n\n\t\tif ( object.isMesh ) {\n\n\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\n\t\t\t\trenderer.setMode( 1 );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.setMode( 4 );\n\n\t\t\t}\n\n\t\t} else if ( object.isLine ) {\n\n\t\t\tlet lineWidth = material.linewidth;\n\n\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\n\n\t\t\tstate.setLineWidth( lineWidth * getTargetPixelRatio() );\n\n\t\t\tif ( object.isLineSegments ) {\n\n\t\t\t\trenderer.setMode( 1 );\n\n\t\t\t} else if ( object.isLineLoop ) {\n\n\t\t\t\trenderer.setMode( 2 );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.setMode( 3 );\n\n\t\t\t}\n\n\t\t} else if ( object.isPoints ) {\n\n\t\t\trenderer.setMode( 0 );\n\n\t\t} else if ( object.isSprite ) {\n\n\t\t\trenderer.setMode( 4 );\n\n\t\t}\n\n\t\tif ( object.isInstancedMesh ) {\n\n\t\t\trenderer.renderInstances( drawStart, drawCount, object.count );\n\n\t\t} else if ( geometry.isInstancedBufferGeometry ) {\n\n\t\t\tconst instanceCount = Math.min( geometry.instanceCount, geometry._maxInstanceCount );\n\n\t\t\trenderer.renderInstances( drawStart, drawCount, instanceCount );\n\n\t\t} else {\n\n\t\t\trenderer.render( drawStart, drawCount );\n\n\t\t}\n\n\t};\n\n\t// Compile\n\n\tthis.compile = function ( scene, camera ) {\n\n\t\tcurrentRenderState = renderStates.get( scene );\n\t\tcurrentRenderState.init();\n\n\t\trenderStateStack.push( currentRenderState );\n\n\t\tscene.traverseVisible( function ( object ) {\n\n\t\t\tif ( object.isLight && object.layers.test( camera.layers ) ) {\n\n\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t\tcurrentRenderState.setupLights( _this.physicallyCorrectLights );\n\n\t\tscene.traverse( function ( object ) {\n\n\t\t\tconst material = object.material;\n\n\t\t\tif ( material ) {\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tfor ( let i = 0; i < material.length; i ++ ) {\n\n\t\t\t\t\t\tconst material2 = material[ i ];\n\n\t\t\t\t\t\tgetProgram( material2, scene, object );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t\trenderStateStack.pop();\n\t\tcurrentRenderState = null;\n\n\t};\n\n\t// Animation Loop\n\n\tlet onAnimationFrameCallback = null;\n\n\tfunction onAnimationFrame( time ) {\n\n\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time );\n\n\t}\n\n\tfunction onXRSessionStart() {\n\n\t\tanimation.stop();\n\n\t}\n\n\tfunction onXRSessionEnd() {\n\n\t\tanimation.start();\n\n\t}\n\n\tconst animation = new WebGLAnimation();\n\tanimation.setAnimationLoop( onAnimationFrame );\n\n\tif ( typeof self !== 'undefined' ) animation.setContext( self );\n\n\tthis.setAnimationLoop = function ( callback ) {\n\n\t\tonAnimationFrameCallback = callback;\n\t\txr.setAnimationLoop( callback );\n\n\t\t( callback === null ) ? animation.stop() : animation.start();\n\n\t};\n\n\txr.addEventListener( 'sessionstart', onXRSessionStart );\n\txr.addEventListener( 'sessionend', onXRSessionEnd );\n\n\t// Rendering\n\n\tthis.render = function ( scene, camera ) {\n\n\t\tif ( camera !== undefined && camera.isCamera !== true ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( _isContextLost === true ) return;\n\n\t\t// update scene graph\n\n\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\n\n\t\t// update camera matrices and frustum\n\n\t\tif ( camera.parent === null ) camera.updateMatrixWorld();\n\n\t\tif ( xr.enabled === true && xr.isPresenting === true ) {\n\n\t\t\tif ( xr.cameraAutoUpdate === true ) xr.updateCamera( camera );\n\n\t\t\tcamera = xr.getCamera(); // use XR camera for rendering\n\n\t\t}\n\n\t\t//\n\t\tif ( scene.isScene === true ) scene.onBeforeRender( _this, scene, camera, _currentRenderTarget );\n\n\t\tcurrentRenderState = renderStates.get( scene, renderStateStack.length );\n\t\tcurrentRenderState.init();\n\n\t\trenderStateStack.push( currentRenderState );\n\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\t_frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t\t_localClippingEnabled = this.localClippingEnabled;\n\t\t_clippingEnabled = clipping.init( this.clippingPlanes, _localClippingEnabled, camera );\n\n\t\tcurrentRenderList = renderLists.get( scene, renderListStack.length );\n\t\tcurrentRenderList.init();\n\n\t\trenderListStack.push( currentRenderList );\n\n\t\tprojectObject( scene, camera, 0, _this.sortObjects );\n\n\t\tcurrentRenderList.finish();\n\n\t\tif ( _this.sortObjects === true ) {\n\n\t\t\tcurrentRenderList.sort( _opaqueSort, _transparentSort );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( _clippingEnabled === true ) clipping.beginShadows();\n\n\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\tshadowMap.render( shadowsArray, scene, camera );\n\n\t\tif ( _clippingEnabled === true ) clipping.endShadows();\n\n\t\t//\n\n\t\tif ( this.info.autoReset === true ) this.info.reset();\n\n\t\t//\n\n\t\tbackground.render( currentRenderList, scene );\n\n\t\t// render scene\n\n\t\tcurrentRenderState.setupLights( _this.physicallyCorrectLights );\n\n\t\tif ( camera.isArrayCamera ) {\n\n\t\t\tconst cameras = camera.cameras;\n\n\t\t\tfor ( let i = 0, l = cameras.length; i < l; i ++ ) {\n\n\t\t\t\tconst camera2 = cameras[ i ];\n\n\t\t\t\trenderScene( currentRenderList, scene, camera2, camera2.viewport );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\trenderScene( currentRenderList, scene, camera );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( _currentRenderTarget !== null ) {\n\n\t\t\t// resolve multisample renderbuffers to a single-sample texture if necessary\n\n\t\t\ttextures.updateMultisampleRenderTarget( _currentRenderTarget );\n\n\t\t\t// Generate mipmap if we're using any kind of mipmap filtering\n\n\t\t\ttextures.updateRenderTargetMipmap( _currentRenderTarget );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( scene.isScene === true ) scene.onAfterRender( _this, scene, camera );\n\n\t\t// _gl.finish();\n\n\t\tbindingStates.resetDefaultState();\n\t\t_currentMaterialId = - 1;\n\t\t_currentCamera = null;\n\n\t\trenderStateStack.pop();\n\n\t\tif ( renderStateStack.length > 0 ) {\n\n\t\t\tcurrentRenderState = renderStateStack[ renderStateStack.length - 1 ];\n\n\t\t} else {\n\n\t\t\tcurrentRenderState = null;\n\n\t\t}\n\n\t\trenderListStack.pop();\n\n\t\tif ( renderListStack.length > 0 ) {\n\n\t\t\tcurrentRenderList = renderListStack[ renderListStack.length - 1 ];\n\n\t\t} else {\n\n\t\t\tcurrentRenderList = null;\n\n\t\t}\n\n\t};\n\n\tfunction projectObject( object, camera, groupOrder, sortObjects ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tconst visible = object.layers.test( camera.layers );\n\n\t\tif ( visible ) {\n\n\t\t\tif ( object.isGroup ) {\n\n\t\t\t\tgroupOrder = object.renderOrder;\n\n\t\t\t} else if ( object.isLOD ) {\n\n\t\t\t\tif ( object.autoUpdate === true ) object.update( camera );\n\n\t\t\t} else if ( object.isLight ) {\n\n\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsSprite( object ) ) {\n\n\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\tif ( material.visible ) {\n\n\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isMesh || object.isLine || object.isPoints ) {\n\n\t\t\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\t\t\t// update skeleton only once in a frame\n\n\t\t\t\t\tif ( object.skeleton.frame !== info.render.frame ) {\n\n\t\t\t\t\t\tobject.skeleton.update();\n\t\t\t\t\t\tobject.skeleton.frame = info.render.frame;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) {\n\n\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, groupMaterial, groupOrder, _vector3.z, group );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tprojectObject( children[ i ], camera, groupOrder, sortObjects );\n\n\t\t}\n\n\t}\n\n\tfunction renderScene( currentRenderList, scene, camera, viewport ) {\n\n\t\tconst opaqueObjects = currentRenderList.opaque;\n\t\tconst transmissiveObjects = currentRenderList.transmissive;\n\t\tconst transparentObjects = currentRenderList.transparent;\n\n\t\tcurrentRenderState.setupLightsView( camera );\n\n\t\tif ( transmissiveObjects.length > 0 ) renderTransmissionPass( opaqueObjects, scene, camera );\n\n\t\tif ( viewport ) state.viewport( _currentViewport.copy( viewport ) );\n\n\t\tif ( opaqueObjects.length > 0 ) renderObjects( opaqueObjects, scene, camera );\n\t\tif ( transmissiveObjects.length > 0 ) renderObjects( transmissiveObjects, scene, camera );\n\t\tif ( transparentObjects.length > 0 ) renderObjects( transparentObjects, scene, camera );\n\n\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\t\tstate.buffers.depth.setTest( true );\n\t\tstate.buffers.depth.setMask( true );\n\t\tstate.buffers.color.setMask( true );\n\n\t\tstate.setPolygonOffset( false );\n\n\t}\n\n\tfunction renderTransmissionPass( opaqueObjects, scene, camera ) {\n\n\t\tconst isWebGL2 = capabilities.isWebGL2;\n\n\t\tif ( _transmissionRenderTarget === null ) {\n\n\t\t\t_transmissionRenderTarget = new WebGLRenderTarget( 1, 1, {\n\t\t\t\tgenerateMipmaps: true,\n\t\t\t\ttype: extensions.has( 'EXT_color_buffer_half_float' ) ? HalfFloatType : UnsignedByteType,\n\t\t\t\tminFilter: LinearMipmapLinearFilter,\n\t\t\t\tsamples: ( isWebGL2 && _antialias === true ) ? 4 : 0\n\t\t\t} );\n\n\t\t}\n\n\t\t_this.getDrawingBufferSize( _vector2 );\n\n\t\tif ( isWebGL2 ) {\n\n\t\t\t_transmissionRenderTarget.setSize( _vector2.x, _vector2.y );\n\n\t\t} else {\n\n\t\t\t_transmissionRenderTarget.setSize( floorPowerOfTwo( _vector2.x ), floorPowerOfTwo( _vector2.y ) );\n\n\t\t}\n\n\t\t//\n\n\t\tconst currentRenderTarget = _this.getRenderTarget();\n\t\t_this.setRenderTarget( _transmissionRenderTarget );\n\t\t_this.clear();\n\n\t\t// Turn off the features which can affect the frag color for opaque objects pass.\n\t\t// Otherwise they are applied twice in opaque objects pass and transmission objects pass.\n\t\tconst currentToneMapping = _this.toneMapping;\n\t\t_this.toneMapping = NoToneMapping;\n\n\t\trenderObjects( opaqueObjects, scene, camera );\n\n\t\t_this.toneMapping = currentToneMapping;\n\n\t\ttextures.updateMultisampleRenderTarget( _transmissionRenderTarget );\n\t\ttextures.updateRenderTargetMipmap( _transmissionRenderTarget );\n\n\t\t_this.setRenderTarget( currentRenderTarget );\n\n\t}\n\n\tfunction renderObjects( renderList, scene, camera ) {\n\n\t\tconst overrideMaterial = scene.isScene === true ? scene.overrideMaterial : null;\n\n\t\tfor ( let i = 0, l = renderList.length; i < l; i ++ ) {\n\n\t\t\tconst renderItem = renderList[ i ];\n\n\t\t\tconst object = renderItem.object;\n\t\t\tconst geometry = renderItem.geometry;\n\t\t\tconst material = overrideMaterial === null ? renderItem.material : overrideMaterial;\n\t\t\tconst group = renderItem.group;\n\n\t\t\tif ( object.layers.test( camera.layers ) ) {\n\n\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction renderObject( object, scene, camera, geometry, material, group ) {\n\n\t\tobject.onBeforeRender( _this, scene, camera, geometry, material, group );\n\n\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\n\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\n\n\t\tmaterial.onBeforeRender( _this, scene, camera, geometry, object, group );\n\n\t\tif ( material.transparent === true && material.side === DoubleSide ) {\n\n\t\t\tmaterial.side = BackSide;\n\t\t\tmaterial.needsUpdate = true;\n\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\tmaterial.side = FrontSide;\n\t\t\tmaterial.needsUpdate = true;\n\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\tmaterial.side = DoubleSide;\n\n\t\t} else {\n\n\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t}\n\n\t\tobject.onAfterRender( _this, scene, camera, geometry, material, group );\n\n\t}\n\n\tfunction getProgram( material, scene, object ) {\n\n\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\tconst materialProperties = properties.get( material );\n\n\t\tconst lights = currentRenderState.state.lights;\n\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\tconst lightsStateVersion = lights.state.version;\n\n\t\tconst parameters = programCache.getParameters( material, lights.state, shadowsArray, scene, object );\n\t\tconst programCacheKey = programCache.getProgramCacheKey( parameters );\n\n\t\tlet programs = materialProperties.programs;\n\n\t\t// always update environment and fog - changing these trigger an getProgram call, but it's possible that the program doesn't change\n\n\t\tmaterialProperties.environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\tmaterialProperties.fog = scene.fog;\n\t\tmaterialProperties.envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || materialProperties.environment );\n\n\t\tif ( programs === undefined ) {\n\n\t\t\t// new material\n\n\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t\tprograms = new Map();\n\t\t\tmaterialProperties.programs = programs;\n\n\t\t}\n\n\t\tlet program = programs.get( programCacheKey );\n\n\t\tif ( program !== undefined ) {\n\n\t\t\t// early out if program and light state is identical\n\n\t\t\tif ( materialProperties.currentProgram === program && materialProperties.lightsStateVersion === lightsStateVersion ) {\n\n\t\t\t\tupdateCommonMaterialProperties( material, parameters );\n\n\t\t\t\treturn program;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tparameters.uniforms = programCache.getUniforms( material );\n\n\t\t\tmaterial.onBuild( object, parameters, _this );\n\n\t\t\tmaterial.onBeforeCompile( parameters, _this );\n\n\t\t\tprogram = programCache.acquireProgram( parameters, programCacheKey );\n\t\t\tprograms.set( programCacheKey, program );\n\n\t\t\tmaterialProperties.uniforms = parameters.uniforms;\n\n\t\t}\n\n\t\tconst uniforms = materialProperties.uniforms;\n\n\t\tif ( ( ! material.isShaderMaterial && ! material.isRawShaderMaterial ) || material.clipping === true ) {\n\n\t\t\tuniforms.clippingPlanes = clipping.uniform;\n\n\t\t}\n\n\t\tupdateCommonMaterialProperties( material, parameters );\n\n\t\t// store the light setup it was created for\n\n\t\tmaterialProperties.needsLights = materialNeedsLights( material );\n\t\tmaterialProperties.lightsStateVersion = lightsStateVersion;\n\n\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t// wire up the material to this renderer's lighting state\n\n\t\t\tuniforms.ambientLightColor.value = lights.state.ambient;\n\t\t\tuniforms.lightProbe.value = lights.state.probe;\n\t\t\tuniforms.directionalLights.value = lights.state.directional;\n\t\t\tuniforms.directionalLightShadows.value = lights.state.directionalShadow;\n\t\t\tuniforms.spotLights.value = lights.state.spot;\n\t\t\tuniforms.spotLightShadows.value = lights.state.spotShadow;\n\t\t\tuniforms.rectAreaLights.value = lights.state.rectArea;\n\t\t\tuniforms.ltc_1.value = lights.state.rectAreaLTC1;\n\t\t\tuniforms.ltc_2.value = lights.state.rectAreaLTC2;\n\t\t\tuniforms.pointLights.value = lights.state.point;\n\t\t\tuniforms.pointLightShadows.value = lights.state.pointShadow;\n\t\t\tuniforms.hemisphereLights.value = lights.state.hemi;\n\n\t\t\tuniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\n\t\t\tuniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\n\t\t\tuniforms.spotShadowMap.value = lights.state.spotShadowMap;\n\t\t\tuniforms.spotShadowMatrix.value = lights.state.spotShadowMatrix;\n\t\t\tuniforms.pointShadowMap.value = lights.state.pointShadowMap;\n\t\t\tuniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix;\n\t\t\t// TODO (abelnation): add area lights shadow info to uniforms\n\n\t\t}\n\n\t\tconst progUniforms = program.getUniforms();\n\t\tconst uniformsList = WebGLUniforms.seqWithValue( progUniforms.seq, uniforms );\n\n\t\tmaterialProperties.currentProgram = program;\n\t\tmaterialProperties.uniformsList = uniformsList;\n\n\t\treturn program;\n\n\t}\n\n\tfunction updateCommonMaterialProperties( material, parameters ) {\n\n\t\tconst materialProperties = properties.get( material );\n\n\t\tmaterialProperties.outputEncoding = parameters.outputEncoding;\n\t\tmaterialProperties.instancing = parameters.instancing;\n\t\tmaterialProperties.skinning = parameters.skinning;\n\t\tmaterialProperties.morphTargets = parameters.morphTargets;\n\t\tmaterialProperties.morphNormals = parameters.morphNormals;\n\t\tmaterialProperties.morphColors = parameters.morphColors;\n\t\tmaterialProperties.morphTargetsCount = parameters.morphTargetsCount;\n\t\tmaterialProperties.numClippingPlanes = parameters.numClippingPlanes;\n\t\tmaterialProperties.numIntersection = parameters.numClipIntersection;\n\t\tmaterialProperties.vertexAlphas = parameters.vertexAlphas;\n\t\tmaterialProperties.vertexTangents = parameters.vertexTangents;\n\t\tmaterialProperties.toneMapping = parameters.toneMapping;\n\n\t}\n\n\tfunction setProgram( camera, scene, geometry, material, object ) {\n\n\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\ttextures.resetTextureUnits();\n\n\t\tconst fog = scene.fog;\n\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\tconst encoding = ( _currentRenderTarget === null ) ? _this.outputEncoding : ( _currentRenderTarget.isXRRenderTarget === true ? _currentRenderTarget.texture.encoding : LinearEncoding );\n\t\tconst envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || environment );\n\t\tconst vertexAlphas = material.vertexColors === true && !! geometry.attributes.color && geometry.attributes.color.itemSize === 4;\n\t\tconst vertexTangents = !! material.normalMap && !! geometry.attributes.tangent;\n\t\tconst morphTargets = !! geometry.morphAttributes.position;\n\t\tconst morphNormals = !! geometry.morphAttributes.normal;\n\t\tconst morphColors = !! geometry.morphAttributes.color;\n\t\tconst toneMapping = material.toneMapped ? _this.toneMapping : NoToneMapping;\n\n\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\tconst materialProperties = properties.get( material );\n\t\tconst lights = currentRenderState.state.lights;\n\n\t\tif ( _clippingEnabled === true ) {\n\n\t\t\tif ( _localClippingEnabled === true || camera !== _currentCamera ) {\n\n\t\t\t\tconst useCache =\n\t\t\t\t\tcamera === _currentCamera &&\n\t\t\t\t\tmaterial.id === _currentMaterialId;\n\n\t\t\t\t// we might want to call this function with some ClippingGroup\n\t\t\t\t// object instead of the material, once it becomes feasible\n\t\t\t\t// (#8465, #8379)\n\t\t\t\tclipping.setState( material, camera, useCache );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tlet needsProgramChange = false;\n\n\t\tif ( material.version === materialProperties.__version ) {\n\n\t\t\tif ( materialProperties.needsLights && ( materialProperties.lightsStateVersion !== lights.state.version ) ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.outputEncoding !== encoding ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancing === false ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( ! object.isInstancedMesh && materialProperties.instancing === true ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( object.isSkinnedMesh && materialProperties.skinning === false ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( ! object.isSkinnedMesh && materialProperties.skinning === true ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.envMap !== envMap ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( material.fog === true && materialProperties.fog !== fog ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.numClippingPlanes !== undefined &&\n\t\t\t\t( materialProperties.numClippingPlanes !== clipping.numPlanes ||\n\t\t\t\tmaterialProperties.numIntersection !== clipping.numIntersection ) ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.vertexAlphas !== vertexAlphas ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.vertexTangents !== vertexTangents ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.morphTargets !== morphTargets ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.morphNormals !== morphNormals ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.morphColors !== morphColors ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.toneMapping !== toneMapping ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( capabilities.isWebGL2 === true && materialProperties.morphTargetsCount !== morphTargetsCount ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tneedsProgramChange = true;\n\t\t\tmaterialProperties.__version = material.version;\n\n\t\t}\n\n\t\t//\n\n\t\tlet program = materialProperties.currentProgram;\n\n\t\tif ( needsProgramChange === true ) {\n\n\t\t\tprogram = getProgram( material, scene, object );\n\n\t\t}\n\n\t\tlet refreshProgram = false;\n\t\tlet refreshMaterial = false;\n\t\tlet refreshLights = false;\n\n\t\tconst p_uniforms = program.getUniforms(),\n\t\t\tm_uniforms = materialProperties.uniforms;\n\n\t\tif ( state.useProgram( program.program ) ) {\n\n\t\t\trefreshProgram = true;\n\t\t\trefreshMaterial = true;\n\t\t\trefreshLights = true;\n\n\t\t}\n\n\t\tif ( material.id !== _currentMaterialId ) {\n\n\t\t\t_currentMaterialId = material.id;\n\n\t\t\trefreshMaterial = true;\n\n\t\t}\n\n\t\tif ( refreshProgram || _currentCamera !== camera ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'projectionMatrix', camera.projectionMatrix );\n\n\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'logDepthBufFC',\n\t\t\t\t\t2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\n\n\t\t\t}\n\n\t\t\tif ( _currentCamera !== camera ) {\n\n\t\t\t\t_currentCamera = camera;\n\n\t\t\t\t// lighting uniforms depend on the camera so enforce an update\n\t\t\t\t// now, in case this material supports lights - or later, when\n\t\t\t\t// the next material that does gets activated:\n\n\t\t\t\trefreshMaterial = true;\t\t// set to true on material change\n\t\t\t\trefreshLights = true;\t\t// remains set until update done\n\n\t\t\t}\n\n\t\t\t// load material specific uniforms\n\t\t\t// (shader material also gets them for the sake of genericity)\n\n\t\t\tif ( material.isShaderMaterial ||\n\t\t\t\tmaterial.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.envMap ) {\n\n\t\t\t\tconst uCamPos = p_uniforms.map.cameraPosition;\n\n\t\t\t\tif ( uCamPos !== undefined ) {\n\n\t\t\t\t\tuCamPos.setValue( _gl,\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( camera.matrixWorld ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.isShaderMaterial ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'isOrthographic', camera.isOrthographicCamera === true );\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.isShaderMaterial ||\n\t\t\t\tmaterial.isShadowMaterial ||\n\t\t\t\tobject.isSkinnedMesh ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// skinning and morph target uniforms must be set even if material didn't change\n\t\t// auto-setting of texture unit for bone and morph texture must go before other textures\n\t\t// otherwise textures used for skinning and morphing can take over texture units reserved for other material textures\n\n\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrix' );\n\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\n\n\t\t\tconst skeleton = object.skeleton;\n\n\t\t\tif ( skeleton ) {\n\n\t\t\t\tif ( capabilities.floatVertexTextures ) {\n\n\t\t\t\t\tif ( skeleton.boneTexture === null ) skeleton.computeBoneTexture();\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTexture', skeleton.boneTexture, textures );\n\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTextureSize', skeleton.boneTextureSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\n\t\tif ( morphAttributes.position !== undefined || morphAttributes.normal !== undefined || ( morphAttributes.color !== undefined && capabilities.isWebGL2 === true ) ) {\n\n\t\t\tmorphtargets.update( object, geometry, material, program );\n\n\t\t}\n\n\n\t\tif ( refreshMaterial || materialProperties.receiveShadow !== object.receiveShadow ) {\n\n\t\t\tmaterialProperties.receiveShadow = object.receiveShadow;\n\t\t\tp_uniforms.setValue( _gl, 'receiveShadow', object.receiveShadow );\n\n\t\t}\n\n\t\tif ( refreshMaterial ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'toneMappingExposure', _this.toneMappingExposure );\n\n\t\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t\t// the current material requires lighting info\n\n\t\t\t\t// note: all lighting uniforms are always set correctly\n\t\t\t\t// they simply reference the renderer's state for their\n\t\t\t\t// values\n\t\t\t\t//\n\t\t\t\t// use the current material's .needsUpdate flags to set\n\t\t\t\t// the GL state when required\n\n\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\n\n\t\t\t}\n\n\t\t\t// refresh uniforms common to several materials\n\n\t\t\tif ( fog && material.fog === true ) {\n\n\t\t\t\tmaterials.refreshFogUniforms( m_uniforms, fog );\n\n\t\t\t}\n\n\t\t\tmaterials.refreshMaterialUniforms( m_uniforms, material, _pixelRatio, _height, _transmissionRenderTarget );\n\n\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, textures );\n\n\t\t}\n\n\t\tif ( material.isShaderMaterial && material.uniformsNeedUpdate === true ) {\n\n\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, textures );\n\t\t\tmaterial.uniformsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( material.isSpriteMaterial ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'center', object.center );\n\n\t\t}\n\n\t\t// common matrices\n\n\t\tp_uniforms.setValue( _gl, 'modelViewMatrix', object.modelViewMatrix );\n\t\tp_uniforms.setValue( _gl, 'normalMatrix', object.normalMatrix );\n\t\tp_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\n\n\t\treturn program;\n\n\t}\n\n\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\tfunction markUniformsLightsNeedsUpdate( uniforms, value ) {\n\n\t\tuniforms.ambientLightColor.needsUpdate = value;\n\t\tuniforms.lightProbe.needsUpdate = value;\n\n\t\tuniforms.directionalLights.needsUpdate = value;\n\t\tuniforms.directionalLightShadows.needsUpdate = value;\n\t\tuniforms.pointLights.needsUpdate = value;\n\t\tuniforms.pointLightShadows.needsUpdate = value;\n\t\tuniforms.spotLights.needsUpdate = value;\n\t\tuniforms.spotLightShadows.needsUpdate = value;\n\t\tuniforms.rectAreaLights.needsUpdate = value;\n\t\tuniforms.hemisphereLights.needsUpdate = value;\n\n\t}\n\n\tfunction materialNeedsLights( material ) {\n\n\t\treturn material.isMeshLambertMaterial || material.isMeshToonMaterial || material.isMeshPhongMaterial ||\n\t\t\tmaterial.isMeshStandardMaterial || material.isShadowMaterial ||\n\t\t\t( material.isShaderMaterial && material.lights === true );\n\n\t}\n\n\tthis.getActiveCubeFace = function () {\n\n\t\treturn _currentActiveCubeFace;\n\n\t};\n\n\tthis.getActiveMipmapLevel = function () {\n\n\t\treturn _currentActiveMipmapLevel;\n\n\t};\n\n\tthis.getRenderTarget = function () {\n\n\t\treturn _currentRenderTarget;\n\n\t};\n\n\tthis.setRenderTargetTextures = function ( renderTarget, colorTexture, depthTexture ) {\n\n\t\tproperties.get( renderTarget.texture ).__webglTexture = colorTexture;\n\t\tproperties.get( renderTarget.depthTexture ).__webglTexture = depthTexture;\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\trenderTargetProperties.__hasExternalTextures = true;\n\n\t\tif ( renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\trenderTargetProperties.__autoAllocateDepthBuffer = depthTexture === undefined;\n\n\t\t\tif ( ! renderTargetProperties.__autoAllocateDepthBuffer ) {\n\n\t\t\t\t// The multisample_render_to_texture extension doesn't work properly if there\n\t\t\t\t// are midframe flushes and an external depth buffer. Disable use of the extension.\n\t\t\t\tif ( extensions.has( 'WEBGL_multisampled_render_to_texture' ) === true ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided' );\n\t\t\t\t\trenderTargetProperties.__useRenderToTexture = false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tthis.setRenderTargetFramebuffer = function ( renderTarget, defaultFramebuffer ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\trenderTargetProperties.__webglFramebuffer = defaultFramebuffer;\n\t\trenderTargetProperties.__useDefaultFramebuffer = defaultFramebuffer === undefined;\n\n\t};\n\n\tthis.setRenderTarget = function ( renderTarget, activeCubeFace = 0, activeMipmapLevel = 0 ) {\n\n\t\t_currentRenderTarget = renderTarget;\n\t\t_currentActiveCubeFace = activeCubeFace;\n\t\t_currentActiveMipmapLevel = activeMipmapLevel;\n\n\t\tlet useDefaultFramebuffer = true;\n\n\t\tif ( renderTarget ) {\n\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\t\tif ( renderTargetProperties.__useDefaultFramebuffer !== undefined ) {\n\n\t\t\t\t// We need to make sure to rebind the framebuffer.\n\t\t\t\tstate.bindFramebuffer( 36160, null );\n\t\t\t\tuseDefaultFramebuffer = false;\n\n\t\t\t} else if ( renderTargetProperties.__webglFramebuffer === undefined ) {\n\n\t\t\t\ttextures.setupRenderTarget( renderTarget );\n\n\t\t\t} else if ( renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\t\t// Color and depth texture must be rebound in order for the swapchain to update.\n\t\t\t\ttextures.rebindTextures( renderTarget, properties.get( renderTarget.texture ).__webglTexture, properties.get( renderTarget.depthTexture ).__webglTexture );\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet framebuffer = null;\n\t\tlet isCube = false;\n\t\tlet isRenderTarget3D = false;\n\n\t\tif ( renderTarget ) {\n\n\t\t\tconst texture = renderTarget.texture;\n\n\t\t\tif ( texture.isData3DTexture || texture.isDataArrayTexture ) {\n\n\t\t\t\tisRenderTarget3D = true;\n\n\t\t\t}\n\n\t\t\tconst __webglFramebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\t\tframebuffer = __webglFramebuffer[ activeCubeFace ];\n\t\t\t\tisCube = true;\n\n\t\t\t} else if ( ( capabilities.isWebGL2 && renderTarget.samples > 0 ) && textures.useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\tframebuffer = properties.get( renderTarget ).__webglMultisampledFramebuffer;\n\n\t\t\t} else {\n\n\t\t\t\tframebuffer = __webglFramebuffer;\n\n\t\t\t}\n\n\t\t\t_currentViewport.copy( renderTarget.viewport );\n\t\t\t_currentScissor.copy( renderTarget.scissor );\n\t\t\t_currentScissorTest = renderTarget.scissorTest;\n\n\t\t} else {\n\n\t\t\t_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t_currentScissorTest = _scissorTest;\n\n\t\t}\n\n\t\tconst framebufferBound = state.bindFramebuffer( 36160, framebuffer );\n\n\t\tif ( framebufferBound && capabilities.drawBuffers && useDefaultFramebuffer ) {\n\n\t\t\tstate.drawBuffers( renderTarget, framebuffer );\n\n\t\t}\n\n\t\tstate.viewport( _currentViewport );\n\t\tstate.scissor( _currentScissor );\n\t\tstate.setScissorTest( _currentScissorTest );\n\n\t\tif ( isCube ) {\n\n\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\t_gl.framebufferTexture2D( 36160, 36064, 34069 + activeCubeFace, textureProperties.__webglTexture, activeMipmapLevel );\n\n\t\t} else if ( isRenderTarget3D ) {\n\n\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\tconst layer = activeCubeFace || 0;\n\t\t\t_gl.framebufferTextureLayer( 36160, 36064, textureProperties.__webglTexture, activeMipmapLevel || 0, layer );\n\n\t\t}\n\n\t\t_currentMaterialId = - 1; // reset current material to ensure correct uniform bindings\n\n\t};\n\n\tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer, activeCubeFaceIndex ) {\n\n\t\tif ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tlet framebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\tif ( renderTarget.isWebGLCubeRenderTarget && activeCubeFaceIndex !== undefined ) {\n\n\t\t\tframebuffer = framebuffer[ activeCubeFaceIndex ];\n\n\t\t}\n\n\t\tif ( framebuffer ) {\n\n\t\t\tstate.bindFramebuffer( 36160, framebuffer );\n\n\t\t\ttry {\n\n\t\t\t\tconst texture = renderTarget.texture;\n\t\t\t\tconst textureFormat = texture.format;\n\t\t\t\tconst textureType = texture.type;\n\n\t\t\t\tif ( textureFormat !== RGBAFormat && utils.convert( textureFormat ) !== _gl.getParameter( 35739 ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tconst halfFloatSupportedByExt = ( textureType === HalfFloatType ) && ( extensions.has( 'EXT_color_buffer_half_float' ) || ( capabilities.isWebGL2 && extensions.has( 'EXT_color_buffer_float' ) ) );\n\n\t\t\t\tif ( textureType !== UnsignedByteType && utils.convert( textureType ) !== _gl.getParameter( 35738 ) && // Edge and Chrome Mac < 52 (#9513)\n\t\t\t\t\t! ( textureType === FloatType && ( capabilities.isWebGL2 || extensions.has( 'OES_texture_float' ) || extensions.has( 'WEBGL_color_buffer_float' ) ) ) && // Chrome Mac >= 52 and Firefox\n\t\t\t\t\t! halfFloatSupportedByExt ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\n\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\n\n\t\t\t\t\t_gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), buffer );\n\n\t\t\t\t}\n\n\t\t\t} finally {\n\n\t\t\t\t// restore framebuffer of current render target if necessary\n\n\t\t\t\tconst framebuffer = ( _currentRenderTarget !== null ) ? properties.get( _currentRenderTarget ).__webglFramebuffer : null;\n\t\t\t\tstate.bindFramebuffer( 36160, framebuffer );\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tthis.copyFramebufferToTexture = function ( position, texture, level = 0 ) {\n\n\t\tif ( texture.isFramebufferTexture !== true ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer: copyFramebufferToTexture() can only be used with FramebufferTexture.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst levelScale = Math.pow( 2, - level );\n\t\tconst width = Math.floor( texture.image.width * levelScale );\n\t\tconst height = Math.floor( texture.image.height * levelScale );\n\n\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t_gl.copyTexSubImage2D( 3553, level, 0, 0, position.x, position.y, width, height );\n\n\t\tstate.unbindTexture();\n\n\t};\n\n\tthis.copyTextureToTexture = function ( position, srcTexture, dstTexture, level = 0 ) {\n\n\t\tconst width = srcTexture.image.width;\n\t\tconst height = srcTexture.image.height;\n\t\tconst glFormat = utils.convert( dstTexture.format );\n\t\tconst glType = utils.convert( dstTexture.type );\n\n\t\ttextures.setTexture2D( dstTexture, 0 );\n\n\t\t// As another texture upload may have changed pixelStorei\n\t\t// parameters, make sure they are correct for the dstTexture\n\t\t_gl.pixelStorei( 37440, dstTexture.flipY );\n\t\t_gl.pixelStorei( 37441, dstTexture.premultiplyAlpha );\n\t\t_gl.pixelStorei( 3317, dstTexture.unpackAlignment );\n\n\t\tif ( srcTexture.isDataTexture ) {\n\n\t\t\t_gl.texSubImage2D( 3553, level, position.x, position.y, width, height, glFormat, glType, srcTexture.image.data );\n\n\t\t} else {\n\n\t\t\tif ( srcTexture.isCompressedTexture ) {\n\n\t\t\t\t_gl.compressedTexSubImage2D( 3553, level, position.x, position.y, srcTexture.mipmaps[ 0 ].width, srcTexture.mipmaps[ 0 ].height, glFormat, srcTexture.mipmaps[ 0 ].data );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.texSubImage2D( 3553, level, position.x, position.y, glFormat, glType, srcTexture.image );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Generate mipmaps only when copying level 0\n\t\tif ( level === 0 && dstTexture.generateMipmaps ) _gl.generateMipmap( 3553 );\n\n\t\tstate.unbindTexture();\n\n\t};\n\n\tthis.copyTextureToTexture3D = function ( sourceBox, position, srcTexture, dstTexture, level = 0 ) {\n\n\t\tif ( _this.isWebGL1Renderer ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst width = sourceBox.max.x - sourceBox.min.x + 1;\n\t\tconst height = sourceBox.max.y - sourceBox.min.y + 1;\n\t\tconst depth = sourceBox.max.z - sourceBox.min.z + 1;\n\t\tconst glFormat = utils.convert( dstTexture.format );\n\t\tconst glType = utils.convert( dstTexture.type );\n\t\tlet glTarget;\n\n\t\tif ( dstTexture.isData3DTexture ) {\n\n\t\t\ttextures.setTexture3D( dstTexture, 0 );\n\t\t\tglTarget = 32879;\n\n\t\t} else if ( dstTexture.isDataArrayTexture ) {\n\n\t\t\ttextures.setTexture2DArray( dstTexture, 0 );\n\t\t\tglTarget = 35866;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\t_gl.pixelStorei( 37440, dstTexture.flipY );\n\t\t_gl.pixelStorei( 37441, dstTexture.premultiplyAlpha );\n\t\t_gl.pixelStorei( 3317, dstTexture.unpackAlignment );\n\n\t\tconst unpackRowLen = _gl.getParameter( 3314 );\n\t\tconst unpackImageHeight = _gl.getParameter( 32878 );\n\t\tconst unpackSkipPixels = _gl.getParameter( 3316 );\n\t\tconst unpackSkipRows = _gl.getParameter( 3315 );\n\t\tconst unpackSkipImages = _gl.getParameter( 32877 );\n\n\t\tconst image = srcTexture.isCompressedTexture ? srcTexture.mipmaps[ 0 ] : srcTexture.image;\n\n\t\t_gl.pixelStorei( 3314, image.width );\n\t\t_gl.pixelStorei( 32878, image.height );\n\t\t_gl.pixelStorei( 3316, sourceBox.min.x );\n\t\t_gl.pixelStorei( 3315, sourceBox.min.y );\n\t\t_gl.pixelStorei( 32877, sourceBox.min.z );\n\n\t\tif ( srcTexture.isDataTexture || srcTexture.isData3DTexture ) {\n\n\t\t\t_gl.texSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, glType, image.data );\n\n\t\t} else {\n\n\t\t\tif ( srcTexture.isCompressedTexture ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture.' );\n\t\t\t\t_gl.compressedTexSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, image.data );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.texSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, glType, image );\n\n\t\t\t}\n\n\t\t}\n\n\t\t_gl.pixelStorei( 3314, unpackRowLen );\n\t\t_gl.pixelStorei( 32878, unpackImageHeight );\n\t\t_gl.pixelStorei( 3316, unpackSkipPixels );\n\t\t_gl.pixelStorei( 3315, unpackSkipRows );\n\t\t_gl.pixelStorei( 32877, unpackSkipImages );\n\n\t\t// Generate mipmaps only when copying level 0\n\t\tif ( level === 0 && dstTexture.generateMipmaps ) _gl.generateMipmap( glTarget );\n\n\t\tstate.unbindTexture();\n\n\t};\n\n\tthis.initTexture = function ( texture ) {\n\n\t\ttextures.setTexture2D( texture, 0 );\n\n\t\tstate.unbindTexture();\n\n\t};\n\n\tthis.resetState = function () {\n\n\t\t_currentActiveCubeFace = 0;\n\t\t_currentActiveMipmapLevel = 0;\n\t\t_currentRenderTarget = null;\n\n\t\tstate.reset();\n\t\tbindingStates.reset();\n\n\t};\n\n\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) );\n\n\t}\n\n}\n\nWebGLRenderer.prototype.isWebGLRenderer = true;\n\nclass WebGL1Renderer extends WebGLRenderer {}\n\nWebGL1Renderer.prototype.isWebGL1Renderer = true;\n\nclass FogExp2 {\n\n\tconstructor( color, density = 0.00025 ) {\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\t\tthis.density = density;\n\n\t}\n\n\tclone() {\n\n\t\treturn new FogExp2( this.color, this.density );\n\n\t}\n\n\ttoJSON( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'FogExp2',\n\t\t\tcolor: this.color.getHex(),\n\t\t\tdensity: this.density\n\t\t};\n\n\t}\n\n}\n\nFogExp2.prototype.isFogExp2 = true;\n\nclass Fog {\n\n\tconstructor( color, near = 1, far = 1000 ) {\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Fog( this.color, this.near, this.far );\n\n\t}\n\n\ttoJSON( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'Fog',\n\t\t\tcolor: this.color.getHex(),\n\t\t\tnear: this.near,\n\t\t\tfar: this.far\n\t\t};\n\n\t}\n\n}\n\nFog.prototype.isFog = true;\n\nclass Scene extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'Scene';\n\n\t\tthis.background = null;\n\t\tthis.environment = null;\n\t\tthis.fog = null;\n\n\t\tthis.overrideMaterial = null;\n\n\t\tthis.autoUpdate = true; // checked by the renderer\n\n\t\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.background !== null ) this.background = source.background.clone();\n\t\tif ( source.environment !== null ) this.environment = source.environment.clone();\n\t\tif ( source.fog !== null ) this.fog = source.fog.clone();\n\n\t\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\n\n\t\tthis.autoUpdate = source.autoUpdate;\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.fog !== null ) data.object.fog = this.fog.toJSON();\n\n\t\treturn data;\n\n\t}\n\n}\n\nScene.prototype.isScene = true;\n\nclass InterleavedBuffer {\n\n\tconstructor( array, stride ) {\n\n\t\tthis.array = array;\n\t\tthis.stride = stride;\n\t\tthis.count = array !== undefined ? array.length / stride : 0;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.updateRange = { offset: 0, count: - 1 };\n\n\t\tthis.version = 0;\n\n\t\tthis.uuid = generateUUID();\n\n\t}\n\n\tonUploadCallback() {}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.count = source.count;\n\t\tthis.stride = source.stride;\n\t\tthis.usage = source.usage;\n\n\t\treturn this;\n\n\t}\n\n\tcopyAt( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.stride;\n\t\tindex2 *= attribute.stride;\n\n\t\tfor ( let i = 0, l = this.stride; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( value, offset = 0 ) {\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\tdata.arrayBuffers = {};\n\n\t\t}\n\n\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\tthis.array.buffer._uuid = generateUUID();\n\n\t\t}\n\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = this.array.slice( 0 ).buffer;\n\n\t\t}\n\n\t\tconst array = new this.array.constructor( data.arrayBuffers[ this.array.buffer._uuid ] );\n\n\t\tconst ib = new this.constructor( array, this.stride );\n\t\tib.setUsage( this.usage );\n\n\t\treturn ib;\n\n\t}\n\n\tonUpload( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\tdata.arrayBuffers = {};\n\n\t\t}\n\n\t\t// generate UUID for array buffer if necessary\n\n\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\tthis.array.buffer._uuid = generateUUID();\n\n\t\t}\n\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = Array.prototype.slice.call( new Uint32Array( this.array.buffer ) );\n\n\t\t}\n\n\t\t//\n\n\t\treturn {\n\t\t\tuuid: this.uuid,\n\t\t\tbuffer: this.array.buffer._uuid,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tstride: this.stride\n\t\t};\n\n\t}\n\n}\n\nInterleavedBuffer.prototype.isInterleavedBuffer = true;\n\nconst _vector$6 = /*@__PURE__*/ new Vector3();\n\nclass InterleavedBufferAttribute {\n\n\tconstructor( interleavedBuffer, itemSize, offset, normalized = false ) {\n\n\t\tthis.name = '';\n\n\t\tthis.data = interleavedBuffer;\n\t\tthis.itemSize = itemSize;\n\t\tthis.offset = offset;\n\n\t\tthis.normalized = normalized === true;\n\n\t}\n\n\tget count() {\n\n\t\treturn this.data.count;\n\n\t}\n\n\tget array() {\n\n\t\treturn this.data.array;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tthis.data.needsUpdate = value;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tfor ( let i = 0, l = this.data.count; i < l; i ++ ) {\n\n\t\t\t_vector$6.fromBufferAttribute( this, i );\n\n\t\t\t_vector$6.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$6.fromBufferAttribute( this, i );\n\n\t\t\t_vector$6.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$6.fromBufferAttribute( this, i );\n\n\t\t\t_vector$6.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tgetX( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset ];\n\n\t}\n\n\tgetY( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 1 ];\n\n\t}\n\n\tgetZ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 2 ];\n\n\t}\n\n\tgetW( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 3 ];\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\t\tthis.data.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( new this.array.constructor( array ), this.itemSize, this.normalized );\n\n\t\t} else {\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.clone( data );\n\n\t\t\t}\n\n\t\t\treturn new InterleavedBufferAttribute( data.interleavedBuffers[ this.data.uuid ], this.itemSize, this.offset, this.normalized );\n\n\t\t}\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// deinterleave data and save it as an ordinary buffer attribute for now\n\n\t\t\treturn {\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\ttype: this.array.constructor.name,\n\t\t\t\tarray: array,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t} else {\n\n\t\t\t// save as true interlaved attribtue\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.toJSON( data );\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tisInterleavedBufferAttribute: true,\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\tdata: this.data.uuid,\n\t\t\t\toffset: this.offset,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t}\n\n\t}\n\n}\n\nInterleavedBufferAttribute.prototype.isInterleavedBufferAttribute = true;\n\nclass SpriteMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'SpriteMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.rotation = 0;\n\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.transparent = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nSpriteMaterial.prototype.isSpriteMaterial = true;\n\nlet _geometry;\n\nconst _intersectPoint = /*@__PURE__*/ new Vector3();\nconst _worldScale = /*@__PURE__*/ new Vector3();\nconst _mvPosition = /*@__PURE__*/ new Vector3();\n\nconst _alignedPosition = /*@__PURE__*/ new Vector2();\nconst _rotatedPosition = /*@__PURE__*/ new Vector2();\nconst _viewWorldMatrix = /*@__PURE__*/ new Matrix4();\n\nconst _vA = /*@__PURE__*/ new Vector3();\nconst _vB = /*@__PURE__*/ new Vector3();\nconst _vC = /*@__PURE__*/ new Vector3();\n\nconst _uvA = /*@__PURE__*/ new Vector2();\nconst _uvB = /*@__PURE__*/ new Vector2();\nconst _uvC = /*@__PURE__*/ new Vector2();\n\nclass Sprite extends Object3D {\n\n\tconstructor( material ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Sprite';\n\n\t\tif ( _geometry === undefined ) {\n\n\t\t\t_geometry = new BufferGeometry();\n\n\t\t\tconst float32Array = new Float32Array( [\n\t\t\t\t- 0.5, - 0.5, 0, 0, 0,\n\t\t\t\t0.5, - 0.5, 0, 1, 0,\n\t\t\t\t0.5, 0.5, 0, 1, 1,\n\t\t\t\t- 0.5, 0.5, 0, 0, 1\n\t\t\t] );\n\n\t\t\tconst interleavedBuffer = new InterleavedBuffer( float32Array, 5 );\n\n\t\t\t_geometry.setIndex( [ 0, 1, 2,\t0, 2, 3 ] );\n\t\t\t_geometry.setAttribute( 'position', new InterleavedBufferAttribute( interleavedBuffer, 3, 0, false ) );\n\t\t\t_geometry.setAttribute( 'uv', new InterleavedBufferAttribute( interleavedBuffer, 2, 3, false ) );\n\n\t\t}\n\n\t\tthis.geometry = _geometry;\n\t\tthis.material = ( material !== undefined ) ? material : new SpriteMaterial();\n\n\t\tthis.center = new Vector2( 0.5, 0.5 );\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tif ( raycaster.camera === null ) {\n\n\t\t\tconsole.error( 'THREE.Sprite: \"Raycaster.camera\" needs to be set in order to raycast against sprites.' );\n\n\t\t}\n\n\t\t_worldScale.setFromMatrixScale( this.matrixWorld );\n\n\t\t_viewWorldMatrix.copy( raycaster.camera.matrixWorld );\n\t\tthis.modelViewMatrix.multiplyMatrices( raycaster.camera.matrixWorldInverse, this.matrixWorld );\n\n\t\t_mvPosition.setFromMatrixPosition( this.modelViewMatrix );\n\n\t\tif ( raycaster.camera.isPerspectiveCamera && this.material.sizeAttenuation === false ) {\n\n\t\t\t_worldScale.multiplyScalar( - _mvPosition.z );\n\n\t\t}\n\n\t\tconst rotation = this.material.rotation;\n\t\tlet sin, cos;\n\n\t\tif ( rotation !== 0 ) {\n\n\t\t\tcos = Math.cos( rotation );\n\t\t\tsin = Math.sin( rotation );\n\n\t\t}\n\n\t\tconst center = this.center;\n\n\t\ttransformVertex( _vA.set( - 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\ttransformVertex( _vB.set( 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\ttransformVertex( _vC.set( 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\n\t\t_uvA.set( 0, 0 );\n\t\t_uvB.set( 1, 0 );\n\t\t_uvC.set( 1, 1 );\n\n\t\t// check first triangle\n\t\tlet intersect = raycaster.ray.intersectTriangle( _vA, _vB, _vC, false, _intersectPoint );\n\n\t\tif ( intersect === null ) {\n\n\t\t\t// check second triangle\n\t\t\ttransformVertex( _vB.set( - 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\t\t_uvB.set( 0, 1 );\n\n\t\t\tintersect = raycaster.ray.intersectTriangle( _vA, _vC, _vB, false, _intersectPoint );\n\t\t\tif ( intersect === null ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst distance = raycaster.ray.origin.distanceTo( _intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tpoint: _intersectPoint.clone(),\n\t\t\tuv: Triangle.getUV( _intersectPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new Vector2() ),\n\t\t\tface: null,\n\t\t\tobject: this\n\n\t\t} );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tif ( source.center !== undefined ) this.center.copy( source.center );\n\n\t\tthis.material = source.material;\n\n\t\treturn this;\n\n\t}\n\n}\n\nSprite.prototype.isSprite = true;\n\nfunction transformVertex( vertexPosition, mvPosition, center, scale, sin, cos ) {\n\n\t// compute position in camera space\n\t_alignedPosition.subVectors( vertexPosition, center ).addScalar( 0.5 ).multiply( scale );\n\n\t// to check if rotation is not zero\n\tif ( sin !== undefined ) {\n\n\t\t_rotatedPosition.x = ( cos * _alignedPosition.x ) - ( sin * _alignedPosition.y );\n\t\t_rotatedPosition.y = ( sin * _alignedPosition.x ) + ( cos * _alignedPosition.y );\n\n\t} else {\n\n\t\t_rotatedPosition.copy( _alignedPosition );\n\n\t}\n\n\n\tvertexPosition.copy( mvPosition );\n\tvertexPosition.x += _rotatedPosition.x;\n\tvertexPosition.y += _rotatedPosition.y;\n\n\t// transform to world space\n\tvertexPosition.applyMatrix4( _viewWorldMatrix );\n\n}\n\nconst _v1$2 = /*@__PURE__*/ new Vector3();\nconst _v2$1 = /*@__PURE__*/ new Vector3();\n\nclass LOD extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis._currentLevel = 0;\n\n\t\tthis.type = 'LOD';\n\n\t\tObject.defineProperties( this, {\n\t\t\tlevels: {\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: []\n\t\t\t},\n\t\t\tisLOD: {\n\t\t\t\tvalue: true,\n\t\t\t}\n\t\t} );\n\n\t\tthis.autoUpdate = true;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source, false );\n\n\t\tconst levels = source.levels;\n\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tconst level = levels[ i ];\n\n\t\t\tthis.addLevel( level.object.clone(), level.distance );\n\n\t\t}\n\n\t\tthis.autoUpdate = source.autoUpdate;\n\n\t\treturn this;\n\n\t}\n\n\taddLevel( object, distance = 0 ) {\n\n\t\tdistance = Math.abs( distance );\n\n\t\tconst levels = this.levels;\n\n\t\tlet l;\n\n\t\tfor ( l = 0; l < levels.length; l ++ ) {\n\n\t\t\tif ( distance < levels[ l ].distance ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlevels.splice( l, 0, { distance: distance, object: object } );\n\n\t\tthis.add( object );\n\n\t\treturn this;\n\n\t}\n\n\tgetCurrentLevel() {\n\n\t\treturn this._currentLevel;\n\n\t}\n\n\tgetObjectForDistance( distance ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 0 ) {\n\n\t\t\tlet i, l;\n\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tif ( distance < levels[ i ].distance ) {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn levels[ i - 1 ].object;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 0 ) {\n\n\t\t\t_v1$2.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tconst distance = raycaster.ray.origin.distanceTo( _v1$2 );\n\n\t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\n\n\t\t}\n\n\t}\n\n\tupdate( camera ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 1 ) {\n\n\t\t\t_v1$2.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t_v2$1.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tconst distance = _v1$2.distanceTo( _v2$1 ) / camera.zoom;\n\n\t\t\tlevels[ 0 ].object.visible = true;\n\n\t\t\tlet i, l;\n\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tif ( distance >= levels[ i ].distance ) {\n\n\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\n\t\t\t\t\tlevels[ i ].object.visible = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._currentLevel = i - 1;\n\n\t\t\tfor ( ; i < l; i ++ ) {\n\n\t\t\t\tlevels[ i ].object.visible = false;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.autoUpdate === false ) data.object.autoUpdate = false;\n\n\t\tdata.object.levels = [];\n\n\t\tconst levels = this.levels;\n\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tconst level = levels[ i ];\n\n\t\t\tdata.object.levels.push( {\n\t\t\t\tobject: level.object.uuid,\n\t\t\t\tdistance: level.distance\n\t\t\t} );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst _basePosition = /*@__PURE__*/ new Vector3();\n\nconst _skinIndex = /*@__PURE__*/ new Vector4();\nconst _skinWeight = /*@__PURE__*/ new Vector4();\n\nconst _vector$5 = /*@__PURE__*/ new Vector3();\nconst _matrix = /*@__PURE__*/ new Matrix4();\n\nclass SkinnedMesh extends Mesh {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'SkinnedMesh';\n\n\t\tthis.bindMode = 'attached';\n\t\tthis.bindMatrix = new Matrix4();\n\t\tthis.bindMatrixInverse = new Matrix4();\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.bindMode = source.bindMode;\n\t\tthis.bindMatrix.copy( source.bindMatrix );\n\t\tthis.bindMatrixInverse.copy( source.bindMatrixInverse );\n\n\t\tthis.skeleton = source.skeleton;\n\n\t\treturn this;\n\n\t}\n\n\tbind( skeleton, bindMatrix ) {\n\n\t\tthis.skeleton = skeleton;\n\n\t\tif ( bindMatrix === undefined ) {\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.skeleton.calculateInverses();\n\n\t\t\tbindMatrix = this.matrixWorld;\n\n\t\t}\n\n\t\tthis.bindMatrix.copy( bindMatrix );\n\t\tthis.bindMatrixInverse.copy( bindMatrix ).invert();\n\n\t}\n\n\tpose() {\n\n\t\tthis.skeleton.pose();\n\n\t}\n\n\tnormalizeSkinWeights() {\n\n\t\tconst vector = new Vector4();\n\n\t\tconst skinWeight = this.geometry.attributes.skinWeight;\n\n\t\tfor ( let i = 0, l = skinWeight.count; i < l; i ++ ) {\n\n\t\t\tvector.fromBufferAttribute( skinWeight, i );\n\n\t\t\tconst scale = 1.0 / vector.manhattanLength();\n\n\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\tvector.multiplyScalar( scale );\n\n\t\t\t} else {\n\n\t\t\t\tvector.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t}\n\n\t\t\tskinWeight.setXYZW( i, vector.x, vector.y, vector.z, vector.w );\n\n\t\t}\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tif ( this.bindMode === 'attached' ) {\n\n\t\t\tthis.bindMatrixInverse.copy( this.matrixWorld ).invert();\n\n\t\t} else if ( this.bindMode === 'detached' ) {\n\n\t\t\tthis.bindMatrixInverse.copy( this.bindMatrix ).invert();\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode );\n\n\t\t}\n\n\t}\n\n\tboneTransform( index, target ) {\n\n\t\tconst skeleton = this.skeleton;\n\t\tconst geometry = this.geometry;\n\n\t\t_skinIndex.fromBufferAttribute( geometry.attributes.skinIndex, index );\n\t\t_skinWeight.fromBufferAttribute( geometry.attributes.skinWeight, index );\n\n\t\t_basePosition.copy( target ).applyMatrix4( this.bindMatrix );\n\n\t\ttarget.set( 0, 0, 0 );\n\n\t\tfor ( let i = 0; i < 4; i ++ ) {\n\n\t\t\tconst weight = _skinWeight.getComponent( i );\n\n\t\t\tif ( weight !== 0 ) {\n\n\t\t\t\tconst boneIndex = _skinIndex.getComponent( i );\n\n\t\t\t\t_matrix.multiplyMatrices( skeleton.bones[ boneIndex ].matrixWorld, skeleton.boneInverses[ boneIndex ] );\n\n\t\t\t\ttarget.addScaledVector( _vector$5.copy( _basePosition ).applyMatrix4( _matrix ), weight );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn target.applyMatrix4( this.bindMatrixInverse );\n\n\t}\n\n}\n\nSkinnedMesh.prototype.isSkinnedMesh = true;\n\nclass Bone extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'Bone';\n\n\t}\n\n}\n\nBone.prototype.isBone = true;\n\nclass DataTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, format, type, mapping, wrapS, wrapT, magFilter = NearestFilter, minFilter = NearestFilter, anisotropy, encoding ) {\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\t\tthis.image = { data: data, width: width, height: height };\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nDataTexture.prototype.isDataTexture = true;\n\nconst _offsetMatrix = /*@__PURE__*/ new Matrix4();\nconst _identityMatrix = /*@__PURE__*/ new Matrix4();\n\nclass Skeleton {\n\n\tconstructor( bones = [], boneInverses = [] ) {\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.bones = bones.slice( 0 );\n\t\tthis.boneInverses = boneInverses;\n\t\tthis.boneMatrices = null;\n\n\t\tthis.boneTexture = null;\n\t\tthis.boneTextureSize = 0;\n\n\t\tthis.frame = - 1;\n\n\t\tthis.init();\n\n\t}\n\n\tinit() {\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\n\t\tthis.boneMatrices = new Float32Array( bones.length * 16 );\n\n\t\t// calculate inverse bone matrices if necessary\n\n\t\tif ( boneInverses.length === 0 ) {\n\n\t\t\tthis.calculateInverses();\n\n\t\t} else {\n\n\t\t\t// handle special case\n\n\t\t\tif ( bones.length !== boneInverses.length ) {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton: Number of inverse bone matrices does not match amount of bones.' );\n\n\t\t\t\tthis.boneInverses = [];\n\n\t\t\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\t\tthis.boneInverses.push( new Matrix4() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcalculateInverses() {\n\n\t\tthis.boneInverses.length = 0;\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst inverse = new Matrix4();\n\n\t\t\tif ( this.bones[ i ] ) {\n\n\t\t\t\tinverse.copy( this.bones[ i ].matrixWorld ).invert();\n\n\t\t\t}\n\n\t\t\tthis.boneInverses.push( inverse );\n\n\t\t}\n\n\t}\n\n\tpose() {\n\n\t\t// recover the bind-time world matrices\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tbone.matrixWorld.copy( this.boneInverses[ i ] ).invert();\n\n\t\t\t}\n\n\t\t}\n\n\t\t// compute the local matrices, positions, rotations and scales\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t\tbone.matrix.copy( bone.parent.matrixWorld ).invert();\n\t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\n\n\t\t\t\t}\n\n\t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdate() {\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\t\tconst boneMatrices = this.boneMatrices;\n\t\tconst boneTexture = this.boneTexture;\n\n\t\t// flatten bone matrices to array\n\n\t\tfor ( let i = 0, il = bones.length; i < il; i ++ ) {\n\n\t\t\t// compute the offset between the current and the original transform\n\n\t\t\tconst matrix = bones[ i ] ? bones[ i ].matrixWorld : _identityMatrix;\n\n\t\t\t_offsetMatrix.multiplyMatrices( matrix, boneInverses[ i ] );\n\t\t\t_offsetMatrix.toArray( boneMatrices, i * 16 );\n\n\t\t}\n\n\t\tif ( boneTexture !== null ) {\n\n\t\t\tboneTexture.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new Skeleton( this.bones, this.boneInverses );\n\n\t}\n\n\tcomputeBoneTexture() {\n\n\t\t// layout (1 matrix = 4 pixels)\n\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n\n\t\tlet size = Math.sqrt( this.bones.length * 4 ); // 4 pixels needed for 1 matrix\n\t\tsize = ceilPowerOfTwo( size );\n\t\tsize = Math.max( size, 4 );\n\n\t\tconst boneMatrices = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\tboneMatrices.set( this.boneMatrices ); // copy current values\n\n\t\tconst boneTexture = new DataTexture( boneMatrices, size, size, RGBAFormat, FloatType );\n\t\tboneTexture.needsUpdate = true;\n\n\t\tthis.boneMatrices = boneMatrices;\n\t\tthis.boneTexture = boneTexture;\n\t\tthis.boneTextureSize = size;\n\n\t\treturn this;\n\n\t}\n\n\tgetBoneByName( name ) {\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone.name === name ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\tdispose( ) {\n\n\t\tif ( this.boneTexture !== null ) {\n\n\t\t\tthis.boneTexture.dispose();\n\n\t\t\tthis.boneTexture = null;\n\n\t\t}\n\n\t}\n\n\tfromJSON( json, bones ) {\n\n\t\tthis.uuid = json.uuid;\n\n\t\tfor ( let i = 0, l = json.bones.length; i < l; i ++ ) {\n\n\t\t\tconst uuid = json.bones[ i ];\n\t\t\tlet bone = bones[ uuid ];\n\n\t\t\tif ( bone === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton: No bone found with UUID:', uuid );\n\t\t\t\tbone = new Bone();\n\n\t\t\t}\n\n\t\t\tthis.bones.push( bone );\n\t\t\tthis.boneInverses.push( new Matrix4().fromArray( json.boneInverses[ i ] ) );\n\n\t\t}\n\n\t\tthis.init();\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Skeleton',\n\t\t\t\tgenerator: 'Skeleton.toJSON'\n\t\t\t},\n\t\t\tbones: [],\n\t\t\tboneInverses: []\n\t\t};\n\n\t\tdata.uuid = this.uuid;\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\n\t\tfor ( let i = 0, l = bones.length; i < l; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\t\t\tdata.bones.push( bone.uuid );\n\n\t\t\tconst boneInverse = boneInverses[ i ];\n\t\t\tdata.boneInverses.push( boneInverse.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass InstancedBufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized, meshPerAttribute = 1 ) {\n\n\t\tif ( typeof normalized === 'number' ) {\n\n\t\t\tmeshPerAttribute = normalized;\n\n\t\t\tnormalized = false;\n\n\t\t\tconsole.error( 'THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.' );\n\n\t\t}\n\n\t\tsuper( array, itemSize, normalized );\n\n\t\tthis.meshPerAttribute = meshPerAttribute;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.meshPerAttribute = this.meshPerAttribute;\n\n\t\tdata.isInstancedBufferAttribute = true;\n\n\t\treturn data;\n\n\t}\n\n}\n\nInstancedBufferAttribute.prototype.isInstancedBufferAttribute = true;\n\nconst _instanceLocalMatrix = /*@__PURE__*/ new Matrix4();\nconst _instanceWorldMatrix = /*@__PURE__*/ new Matrix4();\n\nconst _instanceIntersects = [];\n\nconst _mesh = /*@__PURE__*/ new Mesh();\n\nclass InstancedMesh extends Mesh {\n\n\tconstructor( geometry, material, count ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.instanceMatrix = new InstancedBufferAttribute( new Float32Array( count * 16 ), 16 );\n\t\tthis.instanceColor = null;\n\n\t\tthis.count = count;\n\n\t\tthis.frustumCulled = false;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.instanceMatrix.copy( source.instanceMatrix );\n\n\t\tif ( source.instanceColor !== null ) this.instanceColor = source.instanceColor.clone();\n\n\t\tthis.count = source.count;\n\n\t\treturn this;\n\n\t}\n\n\tgetColorAt( index, color ) {\n\n\t\tcolor.fromArray( this.instanceColor.array, index * 3 );\n\n\t}\n\n\tgetMatrixAt( index, matrix ) {\n\n\t\tmatrix.fromArray( this.instanceMatrix.array, index * 16 );\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst raycastTimes = this.count;\n\n\t\t_mesh.geometry = this.geometry;\n\t\t_mesh.material = this.material;\n\n\t\tif ( _mesh.material === undefined ) return;\n\n\t\tfor ( let instanceId = 0; instanceId < raycastTimes; instanceId ++ ) {\n\n\t\t\t// calculate the world matrix for each instance\n\n\t\t\tthis.getMatrixAt( instanceId, _instanceLocalMatrix );\n\n\t\t\t_instanceWorldMatrix.multiplyMatrices( matrixWorld, _instanceLocalMatrix );\n\n\t\t\t// the mesh represents this single instance\n\n\t\t\t_mesh.matrixWorld = _instanceWorldMatrix;\n\n\t\t\t_mesh.raycast( raycaster, _instanceIntersects );\n\n\t\t\t// process the result of raycast\n\n\t\t\tfor ( let i = 0, l = _instanceIntersects.length; i < l; i ++ ) {\n\n\t\t\t\tconst intersect = _instanceIntersects[ i ];\n\t\t\t\tintersect.instanceId = instanceId;\n\t\t\t\tintersect.object = this;\n\t\t\t\tintersects.push( intersect );\n\n\t\t\t}\n\n\t\t\t_instanceIntersects.length = 0;\n\n\t\t}\n\n\t}\n\n\tsetColorAt( index, color ) {\n\n\t\tif ( this.instanceColor === null ) {\n\n\t\t\tthis.instanceColor = new InstancedBufferAttribute( new Float32Array( this.instanceMatrix.count * 3 ), 3 );\n\n\t\t}\n\n\t\tcolor.toArray( this.instanceColor.array, index * 3 );\n\n\t}\n\n\tsetMatrixAt( index, matrix ) {\n\n\t\tmatrix.toArray( this.instanceMatrix.array, index * 16 );\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nInstancedMesh.prototype.isInstancedMesh = true;\n\nclass LineBasicMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'LineBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.linewidth = 1;\n\t\tthis.linecap = 'round';\n\t\tthis.linejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.linewidth = source.linewidth;\n\t\tthis.linecap = source.linecap;\n\t\tthis.linejoin = source.linejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nLineBasicMaterial.prototype.isLineBasicMaterial = true;\n\nconst _start$1 = /*@__PURE__*/ new Vector3();\nconst _end$1 = /*@__PURE__*/ new Vector3();\nconst _inverseMatrix$1 = /*@__PURE__*/ new Matrix4();\nconst _ray$1 = /*@__PURE__*/ new Ray();\nconst _sphere$1 = /*@__PURE__*/ new Sphere();\n\nclass Line extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new LineBasicMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Line';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.material = source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\tcomputeLineDistances() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t// we assume non-indexed geometry\n\n\t\t\tif ( geometry.index === null ) {\n\n\t\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\t\tconst lineDistances = [ 0 ];\n\n\t\t\t\tfor ( let i = 1, l = positionAttribute.count; i < l; i ++ ) {\n\n\t\t\t\t\t_start$1.fromBufferAttribute( positionAttribute, i - 1 );\n\t\t\t\t\t_end$1.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\n\t\t\t\t\tlineDistances[ i ] += _start$1.distanceTo( _end$1 );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t\t}\n\n\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\tconsole.error( 'THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst threshold = raycaster.params.Line.threshold;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$1.copy( geometry.boundingSphere );\n\t\t_sphere$1.applyMatrix4( matrixWorld );\n\t\t_sphere$1.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$1 ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix$1.copy( matrixWorld ).invert();\n\t\t_ray$1.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$1 );\n\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\tconst vStart = new Vector3();\n\t\tconst vEnd = new Vector3();\n\t\tconst interSegment = new Vector3();\n\t\tconst interRay = new Vector3();\n\t\tconst step = this.isLineSegments ? 2 : 1;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tconst index = geometry.index;\n\t\t\tconst attributes = geometry.attributes;\n\t\t\tconst positionAttribute = attributes.position;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, l = end - 1; i < l; i += step ) {\n\n\t\t\t\t\tconst a = index.getX( i );\n\t\t\t\t\tconst b = index.getX( i + 1 );\n\n\t\t\t\t\tvStart.fromBufferAttribute( positionAttribute, a );\n\t\t\t\t\tvEnd.fromBufferAttribute( positionAttribute, b );\n\n\t\t\t\t\tconst distSq = _ray$1.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\t\tif ( distSq > localThresholdSq ) continue;\n\n\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\tconst distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\tface: null,\n\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, l = end - 1; i < l; i += step ) {\n\n\t\t\t\t\tvStart.fromBufferAttribute( positionAttribute, i );\n\t\t\t\t\tvEnd.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\t\tconst distSq = _ray$1.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\t\tif ( distSq > localThresholdSq ) continue;\n\n\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\tconst distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\tface: null,\n\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\tconsole.error( 'THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\n\t\t}\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tconst morphAttributes = geometry.morphAttributes;\n\t\t\tconst keys = Object.keys( morphAttributes );\n\n\t\t\tif ( keys.length > 0 ) {\n\n\t\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst morphTargets = geometry.morphTargets;\n\n\t\t\tif ( morphTargets !== undefined && morphTargets.length > 0 ) {\n\n\t\t\t\tconsole.error( 'THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nLine.prototype.isLine = true;\n\nconst _start = /*@__PURE__*/ new Vector3();\nconst _end = /*@__PURE__*/ new Vector3();\n\nclass LineSegments extends Line {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'LineSegments';\n\n\t}\n\n\tcomputeLineDistances() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t// we assume non-indexed geometry\n\n\t\t\tif ( geometry.index === null ) {\n\n\t\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\t\tconst lineDistances = [];\n\n\t\t\t\tfor ( let i = 0, l = positionAttribute.count; i < l; i += 2 ) {\n\n\t\t\t\t\t_start.fromBufferAttribute( positionAttribute, i );\n\t\t\t\t\t_end.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\n\t\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + _start.distanceTo( _end );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t\t}\n\n\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\tconsole.error( 'THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nLineSegments.prototype.isLineSegments = true;\n\nclass LineLoop extends Line {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'LineLoop';\n\n\t}\n\n}\n\nLineLoop.prototype.isLineLoop = true;\n\nclass PointsMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PointsMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.size = 1;\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.size = source.size;\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nPointsMaterial.prototype.isPointsMaterial = true;\n\nconst _inverseMatrix = /*@__PURE__*/ new Matrix4();\nconst _ray = /*@__PURE__*/ new Ray();\nconst _sphere = /*@__PURE__*/ new Sphere();\nconst _position$2 = /*@__PURE__*/ new Vector3();\n\nclass Points extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new PointsMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Points';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.material = source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst threshold = raycaster.params.Points.threshold;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere.copy( geometry.boundingSphere );\n\t\t_sphere.applyMatrix4( matrixWorld );\n\t\t_sphere.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix.copy( matrixWorld ).invert();\n\t\t_ray.copy( raycaster.ray ).applyMatrix4( _inverseMatrix );\n\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tconst index = geometry.index;\n\t\t\tconst attributes = geometry.attributes;\n\t\t\tconst positionAttribute = attributes.position;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, il = end; i < il; i ++ ) {\n\n\t\t\t\t\tconst a = index.getX( i );\n\n\t\t\t\t\t_position$2.fromBufferAttribute( positionAttribute, a );\n\n\t\t\t\t\ttestPoint( _position$2, a, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, l = end; i < l; i ++ ) {\n\n\t\t\t\t\t_position$2.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\t\ttestPoint( _position$2, i, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\n\t\t}\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tconst morphAttributes = geometry.morphAttributes;\n\t\t\tconst keys = Object.keys( morphAttributes );\n\n\t\t\tif ( keys.length > 0 ) {\n\n\t\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst morphTargets = geometry.morphTargets;\n\n\t\t\tif ( morphTargets !== undefined && morphTargets.length > 0 ) {\n\n\t\t\t\tconsole.error( 'THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nPoints.prototype.isPoints = true;\n\nfunction testPoint( point, index, localThresholdSq, matrixWorld, raycaster, intersects, object ) {\n\n\tconst rayPointDistanceSq = _ray.distanceSqToPoint( point );\n\n\tif ( rayPointDistanceSq < localThresholdSq ) {\n\n\t\tconst intersectPoint = new Vector3();\n\n\t\t_ray.closestPointToPoint( point, intersectPoint );\n\t\tintersectPoint.applyMatrix4( matrixWorld );\n\n\t\tconst distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\n\t\t\tpoint: intersectPoint,\n\t\t\tindex: index,\n\t\t\tface: null,\n\t\t\tobject: object\n\n\t\t} );\n\n\t}\n\n}\n\nclass VideoTexture extends Texture {\n\n\tconstructor( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tsuper( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : LinearFilter;\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\n\t\tthis.generateMipmaps = false;\n\n\t\tconst scope = this;\n\n\t\tfunction updateVideo() {\n\n\t\t\tscope.needsUpdate = true;\n\t\t\tvideo.requestVideoFrameCallback( updateVideo );\n\n\t\t}\n\n\t\tif ( 'requestVideoFrameCallback' in video ) {\n\n\t\t\tvideo.requestVideoFrameCallback( updateVideo );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.image ).copy( this );\n\n\t}\n\n\tupdate() {\n\n\t\tconst video = this.image;\n\t\tconst hasVideoFrameCallback = 'requestVideoFrameCallback' in video;\n\n\t\tif ( hasVideoFrameCallback === false && video.readyState >= video.HAVE_CURRENT_DATA ) {\n\n\t\t\tthis.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n}\n\nVideoTexture.prototype.isVideoTexture = true;\n\nclass FramebufferTexture extends Texture {\n\n\tconstructor( width, height, format ) {\n\n\t\tsuper( { width, height } );\n\n\t\tthis.format = format;\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.generateMipmaps = false;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\nFramebufferTexture.prototype.isFramebufferTexture = true;\n\nclass CompressedTexture extends Texture {\n\n\tconstructor( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\t\tthis.image = { width: width, height: height };\n\t\tthis.mipmaps = mipmaps;\n\n\t\t// no flipping for cube textures\n\t\t// (also flipping doesn't work for compressed textures )\n\n\t\tthis.flipY = false;\n\n\t\t// can't generate mipmaps for compressed textures\n\t\t// mips must be embedded in DDS files\n\n\t\tthis.generateMipmaps = false;\n\n\t}\n\n}\n\nCompressedTexture.prototype.isCompressedTexture = true;\n\nclass CanvasTexture extends Texture {\n\n\tconstructor( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tsuper( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\nCanvasTexture.prototype.isCanvasTexture = true;\n\n/**\n * Extensible curve object.\n *\n * Some common of curve methods:\n * .getPoint( t, optionalTarget ), .getTangent( t, optionalTarget )\n * .getPointAt( u, optionalTarget ), .getTangentAt( u, optionalTarget )\n * .getPoints(), .getSpacedPoints()\n * .getLength()\n * .updateArcLengths()\n *\n * This following curves inherit from THREE.Curve:\n *\n * -- 2D curves --\n * THREE.ArcCurve\n * THREE.CubicBezierCurve\n * THREE.EllipseCurve\n * THREE.LineCurve\n * THREE.QuadraticBezierCurve\n * THREE.SplineCurve\n *\n * -- 3D curves --\n * THREE.CatmullRomCurve3\n * THREE.CubicBezierCurve3\n * THREE.LineCurve3\n * THREE.QuadraticBezierCurve3\n *\n * A series of curves can be represented as a THREE.CurvePath.\n *\n **/\n\nclass Curve {\n\n\tconstructor() {\n\n\t\tthis.type = 'Curve';\n\n\t\tthis.arcLengthDivisions = 200;\n\n\t}\n\n\t// Virtual base class method to overwrite and implement in subclasses\n\t//\t- t [0 .. 1]\n\n\tgetPoint( /* t, optionalTarget */ ) {\n\n\t\tconsole.warn( 'THREE.Curve: .getPoint() not implemented.' );\n\t\treturn null;\n\n\t}\n\n\t// Get point at relative position in curve according to arc length\n\t// - u [0 .. 1]\n\n\tgetPointAt( u, optionalTarget ) {\n\n\t\tconst t = this.getUtoTmapping( u );\n\t\treturn this.getPoint( t, optionalTarget );\n\n\t}\n\n\t// Get sequence of points using getPoint( t )\n\n\tgetPoints( divisions = 5 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPoint( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\t// Get sequence of points using getPointAt( u )\n\n\tgetSpacedPoints( divisions = 5 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPointAt( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\t// Get total curve arc length\n\n\tgetLength() {\n\n\t\tconst lengths = this.getLengths();\n\t\treturn lengths[ lengths.length - 1 ];\n\n\t}\n\n\t// Get list of cumulative segment lengths\n\n\tgetLengths( divisions = this.arcLengthDivisions ) {\n\n\t\tif ( this.cacheArcLengths &&\n\t\t\t( this.cacheArcLengths.length === divisions + 1 ) &&\n\t\t\t! this.needsUpdate ) {\n\n\t\t\treturn this.cacheArcLengths;\n\n\t\t}\n\n\t\tthis.needsUpdate = false;\n\n\t\tconst cache = [];\n\t\tlet current, last = this.getPoint( 0 );\n\t\tlet sum = 0;\n\n\t\tcache.push( 0 );\n\n\t\tfor ( let p = 1; p <= divisions; p ++ ) {\n\n\t\t\tcurrent = this.getPoint( p / divisions );\n\t\t\tsum += current.distanceTo( last );\n\t\t\tcache.push( sum );\n\t\t\tlast = current;\n\n\t\t}\n\n\t\tthis.cacheArcLengths = cache;\n\n\t\treturn cache; // { sums: cache, sum: sum }; Sum is in the last element.\n\n\t}\n\n\tupdateArcLengths() {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.getLengths();\n\n\t}\n\n\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n\n\tgetUtoTmapping( u, distance ) {\n\n\t\tconst arcLengths = this.getLengths();\n\n\t\tlet i = 0;\n\t\tconst il = arcLengths.length;\n\n\t\tlet targetArcLength; // The targeted u distance value to get\n\n\t\tif ( distance ) {\n\n\t\t\ttargetArcLength = distance;\n\n\t\t} else {\n\n\t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\n\n\t\t}\n\n\t\t// binary search for the index with largest value smaller than target u distance\n\n\t\tlet low = 0, high = il - 1, comparison;\n\n\t\twhile ( low <= high ) {\n\n\t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n\t\t\tcomparison = arcLengths[ i ] - targetArcLength;\n\n\t\t\tif ( comparison < 0 ) {\n\n\t\t\t\tlow = i + 1;\n\n\t\t\t} else if ( comparison > 0 ) {\n\n\t\t\t\thigh = i - 1;\n\n\t\t\t} else {\n\n\t\t\t\thigh = i;\n\t\t\t\tbreak;\n\n\t\t\t\t// DONE\n\n\t\t\t}\n\n\t\t}\n\n\t\ti = high;\n\n\t\tif ( arcLengths[ i ] === targetArcLength ) {\n\n\t\t\treturn i / ( il - 1 );\n\n\t\t}\n\n\t\t// we could get finer grain at lengths, or use simple interpolation between two points\n\n\t\tconst lengthBefore = arcLengths[ i ];\n\t\tconst lengthAfter = arcLengths[ i + 1 ];\n\n\t\tconst segmentLength = lengthAfter - lengthBefore;\n\n\t\t// determine where we are between the 'before' and 'after' points\n\n\t\tconst segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\n\n\t\t// add that fractional amount to t\n\n\t\tconst t = ( i + segmentFraction ) / ( il - 1 );\n\n\t\treturn t;\n\n\t}\n\n\t// Returns a unit vector tangent at t\n\t// In case any sub curve does not implement its tangent derivation,\n\t// 2 points a small delta apart will be used to find its gradient\n\t// which seems to give a reasonable approximation\n\n\tgetTangent( t, optionalTarget ) {\n\n\t\tconst delta = 0.0001;\n\t\tlet t1 = t - delta;\n\t\tlet t2 = t + delta;\n\n\t\t// Capping in case of danger\n\n\t\tif ( t1 < 0 ) t1 = 0;\n\t\tif ( t2 > 1 ) t2 = 1;\n\n\t\tconst pt1 = this.getPoint( t1 );\n\t\tconst pt2 = this.getPoint( t2 );\n\n\t\tconst tangent = optionalTarget || ( ( pt1.isVector2 ) ? new Vector2() : new Vector3() );\n\n\t\ttangent.copy( pt2 ).sub( pt1 ).normalize();\n\n\t\treturn tangent;\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\tconst t = this.getUtoTmapping( u );\n\t\treturn this.getTangent( t, optionalTarget );\n\n\t}\n\n\tcomputeFrenetFrames( segments, closed ) {\n\n\t\t// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n\n\t\tconst normal = new Vector3();\n\n\t\tconst tangents = [];\n\t\tconst normals = [];\n\t\tconst binormals = [];\n\n\t\tconst vec = new Vector3();\n\t\tconst mat = new Matrix4();\n\n\t\t// compute the tangent vectors for each segment on the curve\n\n\t\tfor ( let i = 0; i <= segments; i ++ ) {\n\n\t\t\tconst u = i / segments;\n\n\t\t\ttangents[ i ] = this.getTangentAt( u, new Vector3() );\n\n\t\t}\n\n\t\t// select an initial normal vector perpendicular to the first tangent vector,\n\t\t// and in the direction of the minimum tangent xyz component\n\n\t\tnormals[ 0 ] = new Vector3();\n\t\tbinormals[ 0 ] = new Vector3();\n\t\tlet min = Number.MAX_VALUE;\n\t\tconst tx = Math.abs( tangents[ 0 ].x );\n\t\tconst ty = Math.abs( tangents[ 0 ].y );\n\t\tconst tz = Math.abs( tangents[ 0 ].z );\n\n\t\tif ( tx <= min ) {\n\n\t\t\tmin = tx;\n\t\t\tnormal.set( 1, 0, 0 );\n\n\t\t}\n\n\t\tif ( ty <= min ) {\n\n\t\t\tmin = ty;\n\t\t\tnormal.set( 0, 1, 0 );\n\n\t\t}\n\n\t\tif ( tz <= min ) {\n\n\t\t\tnormal.set( 0, 0, 1 );\n\n\t\t}\n\n\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\n\n\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\n\n\n\t\t// compute the slowly-varying normal and binormal vectors for each segment on the curve\n\n\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\tnormals[ i ] = normals[ i - 1 ].clone();\n\n\t\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\n\n\t\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\n\n\t\t\tif ( vec.length() > Number.EPSILON ) {\n\n\t\t\t\tvec.normalize();\n\n\t\t\t\tconst theta = Math.acos( clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\n\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\n\n\t\t\t}\n\n\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t}\n\n\t\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\t\tif ( closed === true ) {\n\n\t\t\tlet theta = Math.acos( clamp( normals[ 0 ].dot( normals[ segments ] ), - 1, 1 ) );\n\t\t\ttheta /= segments;\n\n\t\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ segments ] ) ) > 0 ) {\n\n\t\t\t\ttheta = - theta;\n\n\t\t\t}\n\n\t\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\t\t// twist a little...\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\n\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\ttangents: tangents,\n\t\t\tnormals: normals,\n\t\t\tbinormals: binormals\n\t\t};\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.arcLengthDivisions = source.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Curve',\n\t\t\t\tgenerator: 'Curve.toJSON'\n\t\t\t}\n\t\t};\n\n\t\tdata.arcLengthDivisions = this.arcLengthDivisions;\n\t\tdata.type = this.type;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tthis.arcLengthDivisions = json.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass EllipseCurve extends Curve {\n\n\tconstructor( aX = 0, aY = 0, xRadius = 1, yRadius = 1, aStartAngle = 0, aEndAngle = Math.PI * 2, aClockwise = false, aRotation = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'EllipseCurve';\n\n\t\tthis.aX = aX;\n\t\tthis.aY = aY;\n\n\t\tthis.xRadius = xRadius;\n\t\tthis.yRadius = yRadius;\n\n\t\tthis.aStartAngle = aStartAngle;\n\t\tthis.aEndAngle = aEndAngle;\n\n\t\tthis.aClockwise = aClockwise;\n\n\t\tthis.aRotation = aRotation;\n\n\t}\n\n\tgetPoint( t, optionalTarget ) {\n\n\t\tconst point = optionalTarget || new Vector2();\n\n\t\tconst twoPi = Math.PI * 2;\n\t\tlet deltaAngle = this.aEndAngle - this.aStartAngle;\n\t\tconst samePoints = Math.abs( deltaAngle ) < Number.EPSILON;\n\n\t\t// ensures that deltaAngle is 0 .. 2 PI\n\t\twhile ( deltaAngle < 0 ) deltaAngle += twoPi;\n\t\twhile ( deltaAngle > twoPi ) deltaAngle -= twoPi;\n\n\t\tif ( deltaAngle < Number.EPSILON ) {\n\n\t\t\tif ( samePoints ) {\n\n\t\t\t\tdeltaAngle = 0;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.aClockwise === true && ! samePoints ) {\n\n\t\t\tif ( deltaAngle === twoPi ) {\n\n\t\t\t\tdeltaAngle = - twoPi;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = deltaAngle - twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst angle = this.aStartAngle + t * deltaAngle;\n\t\tlet x = this.aX + this.xRadius * Math.cos( angle );\n\t\tlet y = this.aY + this.yRadius * Math.sin( angle );\n\n\t\tif ( this.aRotation !== 0 ) {\n\n\t\t\tconst cos = Math.cos( this.aRotation );\n\t\t\tconst sin = Math.sin( this.aRotation );\n\n\t\t\tconst tx = x - this.aX;\n\t\t\tconst ty = y - this.aY;\n\n\t\t\t// Rotate the point about the center of the ellipse.\n\t\t\tx = tx * cos - ty * sin + this.aX;\n\t\t\ty = tx * sin + ty * cos + this.aY;\n\n\t\t}\n\n\t\treturn point.set( x, y );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.aX = source.aX;\n\t\tthis.aY = source.aY;\n\n\t\tthis.xRadius = source.xRadius;\n\t\tthis.yRadius = source.yRadius;\n\n\t\tthis.aStartAngle = source.aStartAngle;\n\t\tthis.aEndAngle = source.aEndAngle;\n\n\t\tthis.aClockwise = source.aClockwise;\n\n\t\tthis.aRotation = source.aRotation;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.aX = this.aX;\n\t\tdata.aY = this.aY;\n\n\t\tdata.xRadius = this.xRadius;\n\t\tdata.yRadius = this.yRadius;\n\n\t\tdata.aStartAngle = this.aStartAngle;\n\t\tdata.aEndAngle = this.aEndAngle;\n\n\t\tdata.aClockwise = this.aClockwise;\n\n\t\tdata.aRotation = this.aRotation;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.aX = json.aX;\n\t\tthis.aY = json.aY;\n\n\t\tthis.xRadius = json.xRadius;\n\t\tthis.yRadius = json.yRadius;\n\n\t\tthis.aStartAngle = json.aStartAngle;\n\t\tthis.aEndAngle = json.aEndAngle;\n\n\t\tthis.aClockwise = json.aClockwise;\n\n\t\tthis.aRotation = json.aRotation;\n\n\t\treturn this;\n\n\t}\n\n}\n\nEllipseCurve.prototype.isEllipseCurve = true;\n\nclass ArcCurve extends EllipseCurve {\n\n\tconstructor( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tsuper( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\tthis.type = 'ArcCurve';\n\n\t}\n\n}\n\nArcCurve.prototype.isArcCurve = true;\n\n/**\n * Centripetal CatmullRom Curve - which is useful for avoiding\n * cusps and self-intersections in non-uniform catmull rom curves.\n * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n *\n * curve.type accepts centripetal(default), chordal and catmullrom\n * curve.tension is used for catmullrom which defaults to 0.5\n */\n\n\n/*\nBased on an optimized c++ solution in\n - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n - http://ideone.com/NoEbVM\n\nThis CubicPoly class could be used for reusing some variables and calculations,\nbut for three.js curve use, it could be possible inlined and flatten into a single function call\nwhich can be placed in CurveUtils.\n*/\n\nfunction CubicPoly() {\n\n\tlet c0 = 0, c1 = 0, c2 = 0, c3 = 0;\n\n\t/*\n\t * Compute coefficients for a cubic polynomial\n\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n\t * such that\n\t *   p(0) = x0, p(1) = x1\n\t *  and\n\t *   p'(0) = t0, p'(1) = t1.\n\t */\n\tfunction init( x0, x1, t0, t1 ) {\n\n\t\tc0 = x0;\n\t\tc1 = t0;\n\t\tc2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\n\t\tc3 = 2 * x0 - 2 * x1 + t0 + t1;\n\n\t}\n\n\treturn {\n\n\t\tinitCatmullRom: function ( x0, x1, x2, x3, tension ) {\n\n\t\t\tinit( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\n\n\t\t},\n\n\t\tinitNonuniformCatmullRom: function ( x0, x1, x2, x3, dt0, dt1, dt2 ) {\n\n\t\t\t// compute tangents when parameterized in [t1,t2]\n\t\t\tlet t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\n\t\t\tlet t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\n\n\t\t\t// rescale tangents for parametrization in [0,1]\n\t\t\tt1 *= dt1;\n\t\t\tt2 *= dt1;\n\n\t\t\tinit( x1, x2, t1, t2 );\n\n\t\t},\n\n\t\tcalc: function ( t ) {\n\n\t\t\tconst t2 = t * t;\n\t\t\tconst t3 = t2 * t;\n\t\t\treturn c0 + c1 * t + c2 * t2 + c3 * t3;\n\n\t\t}\n\n\t};\n\n}\n\n//\n\nconst tmp = new Vector3();\nconst px = new CubicPoly(), py = new CubicPoly(), pz = new CubicPoly();\n\nclass CatmullRomCurve3 extends Curve {\n\n\tconstructor( points = [], closed = false, curveType = 'centripetal', tension = 0.5 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CatmullRomCurve3';\n\n\t\tthis.points = points;\n\t\tthis.closed = closed;\n\t\tthis.curveType = curveType;\n\t\tthis.tension = tension;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst points = this.points;\n\t\tconst l = points.length;\n\n\t\tconst p = ( l - ( this.closed ? 0 : 1 ) ) * t;\n\t\tlet intPoint = Math.floor( p );\n\t\tlet weight = p - intPoint;\n\n\t\tif ( this.closed ) {\n\n\t\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / l ) + 1 ) * l;\n\n\t\t} else if ( weight === 0 && intPoint === l - 1 ) {\n\n\t\t\tintPoint = l - 2;\n\t\t\tweight = 1;\n\n\t\t}\n\n\t\tlet p0, p3; // 4 points (p1 & p2 defined below)\n\n\t\tif ( this.closed || intPoint > 0 ) {\n\n\t\t\tp0 = points[ ( intPoint - 1 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate first point\n\t\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\n\t\t\tp0 = tmp;\n\n\t\t}\n\n\t\tconst p1 = points[ intPoint % l ];\n\t\tconst p2 = points[ ( intPoint + 1 ) % l ];\n\n\t\tif ( this.closed || intPoint + 2 < l ) {\n\n\t\t\tp3 = points[ ( intPoint + 2 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate last point\n\t\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );\n\t\t\tp3 = tmp;\n\n\t\t}\n\n\t\tif ( this.curveType === 'centripetal' || this.curveType === 'chordal' ) {\n\n\t\t\t// init Centripetal / Chordal Catmull-Rom\n\t\t\tconst pow = this.curveType === 'chordal' ? 0.5 : 0.25;\n\t\t\tlet dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\n\t\t\tlet dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\n\t\t\tlet dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\n\n\t\t\t// safety check for repeated points\n\t\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\n\t\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\n\t\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\n\n\t\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\n\t\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\n\t\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\n\n\t\t} else if ( this.curveType === 'catmullrom' ) {\n\n\t\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, this.tension );\n\t\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, this.tension );\n\t\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, this.tension );\n\n\t\t}\n\n\t\tpoint.set(\n\t\t\tpx.calc( weight ),\n\t\t\tpy.calc( weight ),\n\t\t\tpz.calc( weight )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\tthis.closed = source.closed;\n\t\tthis.curveType = source.curveType;\n\t\tthis.tension = source.tension;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.points = [];\n\n\t\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\tdata.closed = this.closed;\n\t\tdata.curveType = this.curveType;\n\t\tdata.tension = this.tension;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = json.points[ i ];\n\t\t\tthis.points.push( new Vector3().fromArray( point ) );\n\n\t\t}\n\n\t\tthis.closed = json.closed;\n\t\tthis.curveType = json.curveType;\n\t\tthis.tension = json.tension;\n\n\t\treturn this;\n\n\t}\n\n}\n\nCatmullRomCurve3.prototype.isCatmullRomCurve3 = true;\n\n/**\n * Bezier Curves formulas obtained from\n * https://en.wikipedia.org/wiki/B%C3%A9zier_curve\n */\n\nfunction CatmullRom( t, p0, p1, p2, p3 ) {\n\n\tconst v0 = ( p2 - p0 ) * 0.5;\n\tconst v1 = ( p3 - p1 ) * 0.5;\n\tconst t2 = t * t;\n\tconst t3 = t * t2;\n\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\n}\n\n//\n\nfunction QuadraticBezierP0( t, p ) {\n\n\tconst k = 1 - t;\n\treturn k * k * p;\n\n}\n\nfunction QuadraticBezierP1( t, p ) {\n\n\treturn 2 * ( 1 - t ) * t * p;\n\n}\n\nfunction QuadraticBezierP2( t, p ) {\n\n\treturn t * t * p;\n\n}\n\nfunction QuadraticBezier( t, p0, p1, p2 ) {\n\n\treturn QuadraticBezierP0( t, p0 ) + QuadraticBezierP1( t, p1 ) +\n\t\tQuadraticBezierP2( t, p2 );\n\n}\n\n//\n\nfunction CubicBezierP0( t, p ) {\n\n\tconst k = 1 - t;\n\treturn k * k * k * p;\n\n}\n\nfunction CubicBezierP1( t, p ) {\n\n\tconst k = 1 - t;\n\treturn 3 * k * k * t * p;\n\n}\n\nfunction CubicBezierP2( t, p ) {\n\n\treturn 3 * ( 1 - t ) * t * t * p;\n\n}\n\nfunction CubicBezierP3( t, p ) {\n\n\treturn t * t * t * p;\n\n}\n\nfunction CubicBezier( t, p0, p1, p2, p3 ) {\n\n\treturn CubicBezierP0( t, p0 ) + CubicBezierP1( t, p1 ) + CubicBezierP2( t, p2 ) +\n\t\tCubicBezierP3( t, p3 );\n\n}\n\nclass CubicBezierCurve extends Curve {\n\n\tconstructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2(), v3 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CubicBezierCurve';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nCubicBezierCurve.prototype.isCubicBezierCurve = true;\n\nclass CubicBezierCurve3 extends Curve {\n\n\tconstructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3(), v3 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CubicBezierCurve3';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y ),\n\t\t\tCubicBezier( t, v0.z, v1.z, v2.z, v3.z )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nCubicBezierCurve3.prototype.isCubicBezierCurve3 = true;\n\nclass LineCurve extends Curve {\n\n\tconstructor( v1 = new Vector2(), v2 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'LineCurve';\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t}\n\n\t// Line curve is linear, so we can overwrite default getPointAt\n\tgetPointAt( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t}\n\n\tgetTangent( t, optionalTarget ) {\n\n\t\tconst tangent = optionalTarget || new Vector2();\n\n\t\ttangent.copy( this.v2 ).sub( this.v1 ).normalize();\n\n\t\treturn tangent;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nLineCurve.prototype.isLineCurve = true;\n\nclass LineCurve3 extends Curve {\n\n\tconstructor( v1 = new Vector3(), v2 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'LineCurve3';\n\t\tthis.isLineCurve3 = true;\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t}\n\t// Line curve is linear, so we can overwrite default getPointAt\n\tgetPointAt( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t}\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass QuadraticBezierCurve extends Curve {\n\n\tconstructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'QuadraticBezierCurve';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nQuadraticBezierCurve.prototype.isQuadraticBezierCurve = true;\n\nclass QuadraticBezierCurve3 extends Curve {\n\n\tconstructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'QuadraticBezierCurve3';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y ),\n\t\t\tQuadraticBezier( t, v0.z, v1.z, v2.z )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nQuadraticBezierCurve3.prototype.isQuadraticBezierCurve3 = true;\n\nclass SplineCurve extends Curve {\n\n\tconstructor( points = [] ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'SplineCurve';\n\n\t\tthis.points = points;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst points = this.points;\n\t\tconst p = ( points.length - 1 ) * t;\n\n\t\tconst intPoint = Math.floor( p );\n\t\tconst weight = p - intPoint;\n\n\t\tconst p0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\n\t\tconst p1 = points[ intPoint ];\n\t\tconst p2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\n\t\tconst p3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\n\n\t\tpoint.set(\n\t\t\tCatmullRom( weight, p0.x, p1.x, p2.x, p3.x ),\n\t\t\tCatmullRom( weight, p0.y, p1.y, p2.y, p3.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.points = [];\n\n\t\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = json.points[ i ];\n\t\t\tthis.points.push( new Vector2().fromArray( point ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nSplineCurve.prototype.isSplineCurve = true;\n\nvar Curves = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tArcCurve: ArcCurve,\n\tCatmullRomCurve3: CatmullRomCurve3,\n\tCubicBezierCurve: CubicBezierCurve,\n\tCubicBezierCurve3: CubicBezierCurve3,\n\tEllipseCurve: EllipseCurve,\n\tLineCurve: LineCurve,\n\tLineCurve3: LineCurve3,\n\tQuadraticBezierCurve: QuadraticBezierCurve,\n\tQuadraticBezierCurve3: QuadraticBezierCurve3,\n\tSplineCurve: SplineCurve\n});\n\n/**************************************************************\n *\tCurved Path - a curve path is simply a array of connected\n *  curves, but retains the api of a curve\n **************************************************************/\n\nclass CurvePath extends Curve {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'CurvePath';\n\n\t\tthis.curves = [];\n\t\tthis.autoClose = false; // Automatically closes the path\n\n\t}\n\n\tadd( curve ) {\n\n\t\tthis.curves.push( curve );\n\n\t}\n\n\tclosePath() {\n\n\t\t// Add a line curve if start and end of lines are not connected\n\t\tconst startPoint = this.curves[ 0 ].getPoint( 0 );\n\t\tconst endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\n\n\t\tif ( ! startPoint.equals( endPoint ) ) {\n\n\t\t\tthis.curves.push( new LineCurve( endPoint, startPoint ) );\n\n\t\t}\n\n\t}\n\n\t// To get accurate point with reference to\n\t// entire path distance at time t,\n\t// following has to be done:\n\n\t// 1. Length of each sub path have to be known\n\t// 2. Locate and identify type of curve\n\t// 3. Get t for the curve\n\t// 4. Return curve.getPointAt(t')\n\n\tgetPoint( t, optionalTarget ) {\n\n\t\tconst d = t * this.getLength();\n\t\tconst curveLengths = this.getCurveLengths();\n\t\tlet i = 0;\n\n\t\t// To think about boundaries points.\n\n\t\twhile ( i < curveLengths.length ) {\n\n\t\t\tif ( curveLengths[ i ] >= d ) {\n\n\t\t\t\tconst diff = curveLengths[ i ] - d;\n\t\t\t\tconst curve = this.curves[ i ];\n\n\t\t\t\tconst segmentLength = curve.getLength();\n\t\t\t\tconst u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n\n\t\t\t\treturn curve.getPointAt( u, optionalTarget );\n\n\t\t\t}\n\n\t\t\ti ++;\n\n\t\t}\n\n\t\treturn null;\n\n\t\t// loop where sum != 0, sum > d , sum+1 <d\n\n\t}\n\n\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\n\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n\t// getPoint() depends on getLength\n\n\tgetLength() {\n\n\t\tconst lens = this.getCurveLengths();\n\t\treturn lens[ lens.length - 1 ];\n\n\t}\n\n\t// cacheLengths must be recalculated.\n\tupdateArcLengths() {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.cacheLengths = null;\n\t\tthis.getCurveLengths();\n\n\t}\n\n\t// Compute lengths and cache them\n\t// We cannot overwrite getLengths() because UtoT mapping uses it.\n\n\tgetCurveLengths() {\n\n\t\t// We use cache values if curves and cache array are same length\n\n\t\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\n\n\t\t\treturn this.cacheLengths;\n\n\t\t}\n\n\t\t// Get length of sub-curve\n\t\t// Push sums into cached array\n\n\t\tconst lengths = [];\n\t\tlet sums = 0;\n\n\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tsums += this.curves[ i ].getLength();\n\t\t\tlengths.push( sums );\n\n\t\t}\n\n\t\tthis.cacheLengths = lengths;\n\n\t\treturn lengths;\n\n\t}\n\n\tgetSpacedPoints( divisions = 40 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let i = 0; i <= divisions; i ++ ) {\n\n\t\t\tpoints.push( this.getPoint( i / divisions ) );\n\n\t\t}\n\n\t\tif ( this.autoClose ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\tgetPoints( divisions = 12 ) {\n\n\t\tconst points = [];\n\t\tlet last;\n\n\t\tfor ( let i = 0, curves = this.curves; i < curves.length; i ++ ) {\n\n\t\t\tconst curve = curves[ i ];\n\t\t\tconst resolution = curve.isEllipseCurve ? divisions * 2\n\t\t\t\t: ( curve.isLineCurve || curve.isLineCurve3 ) ? 1\n\t\t\t\t\t: curve.isSplineCurve ? divisions * curve.points.length\n\t\t\t\t\t\t: divisions;\n\n\t\t\tconst pts = curve.getPoints( resolution );\n\n\t\t\tfor ( let j = 0; j < pts.length; j ++ ) {\n\n\t\t\t\tconst point = pts[ j ];\n\n\t\t\t\tif ( last && last.equals( point ) ) continue; // ensures no consecutive points are duplicates\n\n\t\t\t\tpoints.push( point );\n\t\t\t\tlast = point;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.autoClose && points.length > 1 && ! points[ points.length - 1 ].equals( points[ 0 ] ) ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.curves = [];\n\n\t\tfor ( let i = 0, l = source.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = source.curves[ i ];\n\n\t\t\tthis.curves.push( curve.clone() );\n\n\t\t}\n\n\t\tthis.autoClose = source.autoClose;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.autoClose = this.autoClose;\n\t\tdata.curves = [];\n\n\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = this.curves[ i ];\n\t\t\tdata.curves.push( curve.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.autoClose = json.autoClose;\n\t\tthis.curves = [];\n\n\t\tfor ( let i = 0, l = json.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = json.curves[ i ];\n\t\t\tthis.curves.push( new Curves[ curve.type ]().fromJSON( curve ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Path extends CurvePath {\n\n\tconstructor( points ) {\n\n\t\tsuper();\n\t\tthis.type = 'Path';\n\n\t\tthis.currentPoint = new Vector2();\n\n\t\tif ( points ) {\n\n\t\t\tthis.setFromPoints( points );\n\n\t\t}\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.moveTo( points[ 0 ].x, points[ 0 ].y );\n\n\t\tfor ( let i = 1, l = points.length; i < l; i ++ ) {\n\n\t\t\tthis.lineTo( points[ i ].x, points[ i ].y );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmoveTo( x, y ) {\n\n\t\tthis.currentPoint.set( x, y ); // TODO consider referencing vectors instead of copying?\n\n\t\treturn this;\n\n\t}\n\n\tlineTo( x, y ) {\n\n\t\tconst curve = new LineCurve( this.currentPoint.clone(), new Vector2( x, y ) );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tquadraticCurveTo( aCPx, aCPy, aX, aY ) {\n\n\t\tconst curve = new QuadraticBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCPx, aCPy ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tbezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tconst curve = new CubicBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCP1x, aCP1y ),\n\t\t\tnew Vector2( aCP2x, aCP2y ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tsplineThru( pts /*Array of Vector*/ ) {\n\n\t\tconst npts = [ this.currentPoint.clone() ].concat( pts );\n\n\t\tconst curve = new SplineCurve( npts );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.copy( pts[ pts.length - 1 ] );\n\n\t\treturn this;\n\n\t}\n\n\tarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tconst x0 = this.currentPoint.x;\n\t\tconst y0 = this.currentPoint.y;\n\n\t\tthis.absarc( aX + x0, aY + y0, aRadius,\n\t\t\taStartAngle, aEndAngle, aClockwise );\n\n\t\treturn this;\n\n\t}\n\n\tabsarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\treturn this;\n\n\t}\n\n\tellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tconst x0 = this.currentPoint.x;\n\t\tconst y0 = this.currentPoint.y;\n\n\t\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\treturn this;\n\n\t}\n\n\tabsellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tconst curve = new EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\tif ( this.curves.length > 0 ) {\n\n\t\t\t// if a previous curve is present, attempt to join\n\t\t\tconst firstPoint = curve.getPoint( 0 );\n\n\t\t\tif ( ! firstPoint.equals( this.currentPoint ) ) {\n\n\t\t\t\tthis.lineTo( firstPoint.x, firstPoint.y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.curves.push( curve );\n\n\t\tconst lastPoint = curve.getPoint( 1 );\n\t\tthis.currentPoint.copy( lastPoint );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.currentPoint.copy( source.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.currentPoint = this.currentPoint.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.currentPoint.fromArray( json.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LatheGeometry extends BufferGeometry {\n\n\tconstructor( points = [ new Vector2( 0, 0.5 ), new Vector2( 0.5, 0 ), new Vector2( 0, - 0.5 ) ], segments = 12, phiStart = 0, phiLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'LatheGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpoints: points,\n\t\t\tsegments: segments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength\n\t\t};\n\n\t\tsegments = Math.floor( segments );\n\n\t\t// clamp phiLength so it's in range of [ 0, 2PI ]\n\n\t\tphiLength = clamp( phiLength, 0, Math.PI * 2 );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst uvs = [];\n\t\tconst initNormals = [];\n\t\tconst normals = [];\n\n\t\t// helper variables\n\n\t\tconst inverseSegments = 1.0 / segments;\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\t\tconst normal = new Vector3();\n\t\tconst curNormal = new Vector3();\n\t\tconst prevNormal = new Vector3();\n\t\tlet dx = 0;\n\t\tlet dy = 0;\n\n\t\t// pre-compute normals for initial \"meridian\"\n\n\t\tfor ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\tswitch ( j ) {\n\n\t\t\t\tcase 0:\t\t\t\t// special handling for 1st vertex on path\n\n\t\t\t\t\tdx = points[ j + 1 ].x - points[ j ].x;\n\t\t\t\t\tdy = points[ j + 1 ].y - points[ j ].y;\n\n\t\t\t\t\tnormal.x = dy * 1.0;\n\t\t\t\t\tnormal.y = - dx;\n\t\t\t\t\tnormal.z = dy * 0.0;\n\n\t\t\t\t\tprevNormal.copy( normal );\n\n\t\t\t\t\tnormal.normalize();\n\n\t\t\t\t\tinitNormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ( points.length - 1 ):\t// special handling for last Vertex on path\n\n\t\t\t\t\tinitNormals.push( prevNormal.x, prevNormal.y, prevNormal.z );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\t\t\t// default handling for all vertices in between\n\n\t\t\t\t\tdx = points[ j + 1 ].x - points[ j ].x;\n\t\t\t\t\tdy = points[ j + 1 ].y - points[ j ].y;\n\n\t\t\t\t\tnormal.x = dy * 1.0;\n\t\t\t\t\tnormal.y = - dx;\n\t\t\t\t\tnormal.z = dy * 0.0;\n\n\t\t\t\t\tcurNormal.copy( normal );\n\n\t\t\t\t\tnormal.x += prevNormal.x;\n\t\t\t\t\tnormal.y += prevNormal.y;\n\t\t\t\t\tnormal.z += prevNormal.z;\n\n\t\t\t\t\tnormal.normalize();\n\n\t\t\t\t\tinitNormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\tprevNormal.copy( curNormal );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate vertices, uvs and normals\n\n\t\tfor ( let i = 0; i <= segments; i ++ ) {\n\n\t\t\tconst phi = phiStart + i * inverseSegments * phiLength;\n\n\t\t\tconst sin = Math.sin( phi );\n\t\t\tconst cos = Math.cos( phi );\n\n\t\t\tfor ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = points[ j ].x * sin;\n\t\t\t\tvertex.y = points[ j ].y;\n\t\t\t\tvertex.z = points[ j ].x * cos;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = i / segments;\n\t\t\t\tuv.y = j / ( points.length - 1 );\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t// normal\n\n\t\t\t\tconst x = initNormals[ 3 * j + 0 ] * sin;\n\t\t\t\tconst y = initNormals[ 3 * j + 1 ];\n\t\t\t\tconst z = initNormals[ 3 * j + 0 ] * cos;\n\n\t\t\t\tnormals.push( x, y, z );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let i = 0; i < segments; i ++ ) {\n\n\t\t\tfor ( let j = 0; j < ( points.length - 1 ); j ++ ) {\n\n\t\t\t\tconst base = j + i * points.length;\n\n\t\t\t\tconst a = base;\n\t\t\t\tconst b = base + points.length;\n\t\t\t\tconst c = base + points.length + 1;\n\t\t\t\tconst d = base + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( c, d, b );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new LatheGeometry( data.points, data.segments, data.phiStart, data.phiLength );\n\n\t}\n\n}\n\nclass CapsuleGeometry extends LatheGeometry {\n\n\tconstructor( radius = 1, length = 1, capSegments = 4, radialSegments = 8 ) {\n\n\t\tconst path = new Path();\n\t\tpath.absarc( 0, - length / 2, radius, Math.PI * 1.5, 0 );\n\t\tpath.absarc( 0, length / 2, radius, 0, Math.PI * 0.5 );\n\n\t\tsuper( path.getPoints( capSegments ), radialSegments );\n\n\t\tthis.type = 'CapsuleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\theight: length,\n\t\t\tcapSegments: capSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CapsuleGeometry( data.radius, data.length, data.capSegments, data.radialSegments );\n\n\t}\n\n}\n\nclass CircleGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, segments = 8, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CircleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tsegments: segments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tsegments = Math.max( 3, segments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// center point\n\n\t\tvertices.push( 0, 0, 0 );\n\t\tnormals.push( 0, 0, 1 );\n\t\tuvs.push( 0.5, 0.5 );\n\n\t\tfor ( let s = 0, i = 3; s <= segments; s ++, i += 3 ) {\n\n\t\t\tconst segment = thetaStart + s / segments * thetaLength;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t// uvs\n\n\t\t\tuv.x = ( vertices[ i ] / radius + 1 ) / 2;\n\t\t\tuv.y = ( vertices[ i + 1 ] / radius + 1 ) / 2;\n\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\tindices.push( i, i + 1, 0 );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CircleGeometry( data.radius, data.segments, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass CylinderGeometry extends BufferGeometry {\n\n\tconstructor( radiusTop = 1, radiusBottom = 1, height = 1, radialSegments = 8, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\t\tthis.type = 'CylinderGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradiusTop: radiusTop,\n\t\t\tradiusBottom: radiusBottom,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tconst scope = this;\n\n\t\tradialSegments = Math.floor( radialSegments );\n\t\theightSegments = Math.floor( heightSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet index = 0;\n\t\tconst indexArray = [];\n\t\tconst halfHeight = height / 2;\n\t\tlet groupStart = 0;\n\n\t\t// generate geometry\n\n\t\tgenerateTorso();\n\n\t\tif ( openEnded === false ) {\n\n\t\t\tif ( radiusTop > 0 ) generateCap( true );\n\t\t\tif ( radiusBottom > 0 ) generateCap( false );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction generateTorso() {\n\n\t\t\tconst normal = new Vector3();\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tlet groupCount = 0;\n\n\t\t\t// this will be used to calculate the normal\n\t\t\tconst slope = ( radiusBottom - radiusTop ) / height;\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let y = 0; y <= heightSegments; y ++ ) {\n\n\t\t\t\tconst indexRow = [];\n\n\t\t\t\tconst v = y / heightSegments;\n\n\t\t\t\t// calculate the radius of the current row\n\n\t\t\t\tconst radius = v * ( radiusBottom - radiusTop ) + radiusTop;\n\n\t\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\t\tconst u = x / radialSegments;\n\n\t\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\n\t\t\t\t\tconst sinTheta = Math.sin( theta );\n\t\t\t\t\tconst cosTheta = Math.cos( theta );\n\n\t\t\t\t\t// vertex\n\n\t\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\t\tvertex.y = - v * height + halfHeight;\n\t\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\t// normal\n\n\t\t\t\t\tnormal.set( sinTheta, slope, cosTheta ).normalize();\n\t\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\t// uv\n\n\t\t\t\t\tuvs.push( u, 1 - v );\n\n\t\t\t\t\t// save index of vertex in respective row\n\n\t\t\t\t\tindexRow.push( index ++ );\n\n\t\t\t\t}\n\n\t\t\t\t// now save vertices of the row in our index array\n\n\t\t\t\tindexArray.push( indexRow );\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tfor ( let y = 0; y < heightSegments; y ++ ) {\n\n\t\t\t\t\t// we use the index array to access the correct indices\n\n\t\t\t\t\tconst a = indexArray[ y ][ x ];\n\t\t\t\t\tconst b = indexArray[ y + 1 ][ x ];\n\t\t\t\t\tconst c = indexArray[ y + 1 ][ x + 1 ];\n\t\t\t\t\tconst d = indexArray[ y ][ x + 1 ];\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// update group counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, 0 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t\tfunction generateCap( top ) {\n\n\t\t\t// save the index of the first center vertex\n\t\t\tconst centerIndexStart = index;\n\n\t\t\tconst uv = new Vector2();\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tlet groupCount = 0;\n\n\t\t\tconst radius = ( top === true ) ? radiusTop : radiusBottom;\n\t\t\tconst sign = ( top === true ) ? 1 : - 1;\n\n\t\t\t// first we generate the center vertex data of the cap.\n\t\t\t// because the geometry needs one set of uvs per face,\n\t\t\t// we must generate a center vertex per face/segment\n\n\t\t\tfor ( let x = 1; x <= radialSegments; x ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertices.push( 0, halfHeight * sign, 0 );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( 0.5, 0.5 );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// save the index of the last center vertex\n\t\t\tconst centerIndexEnd = index;\n\n\t\t\t// now we generate the surrounding vertices, normals and uvs\n\n\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\tconst u = x / radialSegments;\n\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\n\t\t\t\tconst cosTheta = Math.cos( theta );\n\t\t\t\tconst sinTheta = Math.sin( theta );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\tvertex.y = halfHeight * sign;\n\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( cosTheta * 0.5 ) + 0.5;\n\t\t\t\tuv.y = ( sinTheta * 0.5 * sign ) + 0.5;\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tconst c = centerIndexStart + x;\n\t\t\t\tconst i = centerIndexEnd + x;\n\n\t\t\t\tif ( top === true ) {\n\n\t\t\t\t\t// face top\n\n\t\t\t\t\tindices.push( i, i + 1, c );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// face bottom\n\n\t\t\t\t\tindices.push( i + 1, i, c );\n\n\t\t\t\t}\n\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CylinderGeometry( data.radiusTop, data.radiusBottom, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass ConeGeometry extends CylinderGeometry {\n\n\tconstructor( radius = 1, height = 1, radialSegments = 8, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper( 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\t\tthis.type = 'ConeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new ConeGeometry( data.radius, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass PolyhedronGeometry extends BufferGeometry {\n\n\tconstructor( vertices = [], indices = [], radius = 1, detail = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PolyhedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tvertices: vertices,\n\t\t\tindices: indices,\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\t// default buffer data\n\n\t\tconst vertexBuffer = [];\n\t\tconst uvBuffer = [];\n\n\t\t// the subdivision creates the vertex buffer data\n\n\t\tsubdivide( detail );\n\n\t\t// all vertices should lie on a conceptual sphere with a given radius\n\n\t\tapplyRadius( radius );\n\n\t\t// finally, create the uv data\n\n\t\tgenerateUVs();\n\n\t\t// build non-indexed geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertexBuffer, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( vertexBuffer.slice(), 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvBuffer, 2 ) );\n\n\t\tif ( detail === 0 ) {\n\n\t\t\tthis.computeVertexNormals(); // flat normals\n\n\t\t} else {\n\n\t\t\tthis.normalizeNormals(); // smooth normals\n\n\t\t}\n\n\t\t// helper functions\n\n\t\tfunction subdivide( detail ) {\n\n\t\t\tconst a = new Vector3();\n\t\t\tconst b = new Vector3();\n\t\t\tconst c = new Vector3();\n\n\t\t\t// iterate over all faces and apply a subdivison with the given detail value\n\n\t\t\tfor ( let i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t\t// get the vertices of the face\n\n\t\t\t\tgetVertexByIndex( indices[ i + 0 ], a );\n\t\t\t\tgetVertexByIndex( indices[ i + 1 ], b );\n\t\t\t\tgetVertexByIndex( indices[ i + 2 ], c );\n\n\t\t\t\t// perform subdivision\n\n\t\t\t\tsubdivideFace( a, b, c, detail );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction subdivideFace( a, b, c, detail ) {\n\n\t\t\tconst cols = detail + 1;\n\n\t\t\t// we use this multidimensional array as a data structure for creating the subdivision\n\n\t\t\tconst v = [];\n\n\t\t\t// construct all of the vertices for this subdivision\n\n\t\t\tfor ( let i = 0; i <= cols; i ++ ) {\n\n\t\t\t\tv[ i ] = [];\n\n\t\t\t\tconst aj = a.clone().lerp( c, i / cols );\n\t\t\t\tconst bj = b.clone().lerp( c, i / cols );\n\n\t\t\t\tconst rows = cols - i;\n\n\t\t\t\tfor ( let j = 0; j <= rows; j ++ ) {\n\n\t\t\t\t\tif ( j === 0 && i === cols ) {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj.clone().lerp( bj, j / rows );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// construct all of the faces\n\n\t\t\tfor ( let i = 0; i < cols; i ++ ) {\n\n\t\t\t\tfor ( let j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\n\n\t\t\t\t\tconst k = Math.floor( j / 2 );\n\n\t\t\t\t\tif ( j % 2 === 0 ) {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\t\t\t\t\t\tpushVertex( v[ i ][ k ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction applyRadius( radius ) {\n\n\t\t\tconst vertex = new Vector3();\n\n\t\t\t// iterate over the entire buffer and apply the radius to each vertex\n\n\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tvertex.normalize().multiplyScalar( radius );\n\n\t\t\t\tvertexBuffer[ i + 0 ] = vertex.x;\n\t\t\t\tvertexBuffer[ i + 1 ] = vertex.y;\n\t\t\t\tvertexBuffer[ i + 2 ] = vertex.z;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tconst u = azimuth( vertex ) / 2 / Math.PI + 0.5;\n\t\t\t\tconst v = inclination( vertex ) / Math.PI + 0.5;\n\t\t\t\tuvBuffer.push( u, 1 - v );\n\n\t\t\t}\n\n\t\t\tcorrectUVs();\n\n\t\t\tcorrectSeam();\n\n\t\t}\n\n\t\tfunction correctSeam() {\n\n\t\t\t// handle case when face straddles the seam, see #3269\n\n\t\t\tfor ( let i = 0; i < uvBuffer.length; i += 6 ) {\n\n\t\t\t\t// uv data of a single face\n\n\t\t\t\tconst x0 = uvBuffer[ i + 0 ];\n\t\t\t\tconst x1 = uvBuffer[ i + 2 ];\n\t\t\t\tconst x2 = uvBuffer[ i + 4 ];\n\n\t\t\t\tconst max = Math.max( x0, x1, x2 );\n\t\t\t\tconst min = Math.min( x0, x1, x2 );\n\n\t\t\t\t// 0.9 is somewhat arbitrary\n\n\t\t\t\tif ( max > 0.9 && min < 0.1 ) {\n\n\t\t\t\t\tif ( x0 < 0.2 ) uvBuffer[ i + 0 ] += 1;\n\t\t\t\t\tif ( x1 < 0.2 ) uvBuffer[ i + 2 ] += 1;\n\t\t\t\t\tif ( x2 < 0.2 ) uvBuffer[ i + 4 ] += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction pushVertex( vertex ) {\n\n\t\t\tvertexBuffer.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t\tfunction getVertexByIndex( index, vertex ) {\n\n\t\t\tconst stride = index * 3;\n\n\t\t\tvertex.x = vertices[ stride + 0 ];\n\t\t\tvertex.y = vertices[ stride + 1 ];\n\t\t\tvertex.z = vertices[ stride + 2 ];\n\n\t\t}\n\n\t\tfunction correctUVs() {\n\n\t\t\tconst a = new Vector3();\n\t\t\tconst b = new Vector3();\n\t\t\tconst c = new Vector3();\n\n\t\t\tconst centroid = new Vector3();\n\n\t\t\tconst uvA = new Vector2();\n\t\t\tconst uvB = new Vector2();\n\t\t\tconst uvC = new Vector2();\n\n\t\t\tfor ( let i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6 ) {\n\n\t\t\t\ta.set( vertexBuffer[ i + 0 ], vertexBuffer[ i + 1 ], vertexBuffer[ i + 2 ] );\n\t\t\t\tb.set( vertexBuffer[ i + 3 ], vertexBuffer[ i + 4 ], vertexBuffer[ i + 5 ] );\n\t\t\t\tc.set( vertexBuffer[ i + 6 ], vertexBuffer[ i + 7 ], vertexBuffer[ i + 8 ] );\n\n\t\t\t\tuvA.set( uvBuffer[ j + 0 ], uvBuffer[ j + 1 ] );\n\t\t\t\tuvB.set( uvBuffer[ j + 2 ], uvBuffer[ j + 3 ] );\n\t\t\t\tuvC.set( uvBuffer[ j + 4 ], uvBuffer[ j + 5 ] );\n\n\t\t\t\tcentroid.copy( a ).add( b ).add( c ).divideScalar( 3 );\n\n\t\t\t\tconst azi = azimuth( centroid );\n\n\t\t\t\tcorrectUV( uvA, j + 0, a, azi );\n\t\t\t\tcorrectUV( uvB, j + 2, b, azi );\n\t\t\t\tcorrectUV( uvC, j + 4, c, azi );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction correctUV( uv, stride, vector, azimuth ) {\n\n\t\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = uv.x - 1;\n\n\t\t\t}\n\n\t\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = azimuth / 2 / Math.PI + 0.5;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Angle around the Y axis, counter-clockwise when looking from above.\n\n\t\tfunction azimuth( vector ) {\n\n\t\t\treturn Math.atan2( vector.z, - vector.x );\n\n\t\t}\n\n\n\t\t// Angle above the XZ plane.\n\n\t\tfunction inclination( vector ) {\n\n\t\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\n\n\t\t}\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new PolyhedronGeometry( data.vertices, data.indices, data.radius, data.details );\n\n\t}\n\n}\n\nclass DodecahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\t\tconst r = 1 / t;\n\n\t\tconst vertices = [\n\n\t\t\t// (±1, ±1, ±1)\n\t\t\t- 1, - 1, - 1,\t- 1, - 1, 1,\n\t\t\t- 1, 1, - 1, - 1, 1, 1,\n\t\t\t1, - 1, - 1, 1, - 1, 1,\n\t\t\t1, 1, - 1, 1, 1, 1,\n\n\t\t\t// (0, ±1/φ, ±φ)\n\t\t\t0, - r, - t, 0, - r, t,\n\t\t\t0, r, - t, 0, r, t,\n\n\t\t\t// (±1/φ, ±φ, 0)\n\t\t\t- r, - t, 0, - r, t, 0,\n\t\t\tr, - t, 0, r, t, 0,\n\n\t\t\t// (±φ, 0, ±1/φ)\n\t\t\t- t, 0, - r, t, 0, - r,\n\t\t\t- t, 0, r, t, 0, r\n\t\t];\n\n\t\tconst indices = [\n\t\t\t3, 11, 7, \t3, 7, 15, \t3, 15, 13,\n\t\t\t7, 19, 17, \t7, 17, 6, \t7, 6, 15,\n\t\t\t17, 4, 8, \t17, 8, 10, \t17, 10, 6,\n\t\t\t8, 0, 16, \t8, 16, 2, \t8, 2, 10,\n\t\t\t0, 12, 1, \t0, 1, 18, \t0, 18, 16,\n\t\t\t6, 10, 2, \t6, 2, 13, \t6, 13, 15,\n\t\t\t2, 16, 18, \t2, 18, 3, \t2, 3, 13,\n\t\t\t18, 1, 9, \t18, 9, 11, \t18, 11, 3,\n\t\t\t4, 14, 12, \t4, 12, 0, \t4, 0, 8,\n\t\t\t11, 9, 5, \t11, 5, 19, \t11, 19, 7,\n\t\t\t19, 5, 14, \t19, 14, 4, \t19, 4, 17,\n\t\t\t1, 12, 14, \t1, 14, 5, \t1, 5, 9\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'DodecahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new DodecahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nconst _v0 = new Vector3();\nconst _v1$1 = new Vector3();\nconst _normal = new Vector3();\nconst _triangle = new Triangle();\n\nclass EdgesGeometry extends BufferGeometry {\n\n\tconstructor( geometry = null, thresholdAngle = 1 ) {\n\n\t\tsuper();\n\t\tthis.type = 'EdgesGeometry';\n\n\t\tthis.parameters = {\n\t\t\tgeometry: geometry,\n\t\t\tthresholdAngle: thresholdAngle\n\t\t};\n\n\t\tif ( geometry !== null ) {\n\n\t\t\tconst precisionPoints = 4;\n\t\t\tconst precision = Math.pow( 10, precisionPoints );\n\t\t\tconst thresholdDot = Math.cos( DEG2RAD * thresholdAngle );\n\n\t\t\tconst indexAttr = geometry.getIndex();\n\t\t\tconst positionAttr = geometry.getAttribute( 'position' );\n\t\t\tconst indexCount = indexAttr ? indexAttr.count : positionAttr.count;\n\n\t\t\tconst indexArr = [ 0, 0, 0 ];\n\t\t\tconst vertKeys = [ 'a', 'b', 'c' ];\n\t\t\tconst hashes = new Array( 3 );\n\n\t\t\tconst edgeData = {};\n\t\t\tconst vertices = [];\n\t\t\tfor ( let i = 0; i < indexCount; i += 3 ) {\n\n\t\t\t\tif ( indexAttr ) {\n\n\t\t\t\t\tindexArr[ 0 ] = indexAttr.getX( i );\n\t\t\t\t\tindexArr[ 1 ] = indexAttr.getX( i + 1 );\n\t\t\t\t\tindexArr[ 2 ] = indexAttr.getX( i + 2 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tindexArr[ 0 ] = i;\n\t\t\t\t\tindexArr[ 1 ] = i + 1;\n\t\t\t\t\tindexArr[ 2 ] = i + 2;\n\n\t\t\t\t}\n\n\t\t\t\tconst { a, b, c } = _triangle;\n\t\t\t\ta.fromBufferAttribute( positionAttr, indexArr[ 0 ] );\n\t\t\t\tb.fromBufferAttribute( positionAttr, indexArr[ 1 ] );\n\t\t\t\tc.fromBufferAttribute( positionAttr, indexArr[ 2 ] );\n\t\t\t\t_triangle.getNormal( _normal );\n\n\t\t\t\t// create hashes for the edge from the vertices\n\t\t\t\thashes[ 0 ] = `${ Math.round( a.x * precision ) },${ Math.round( a.y * precision ) },${ Math.round( a.z * precision ) }`;\n\t\t\t\thashes[ 1 ] = `${ Math.round( b.x * precision ) },${ Math.round( b.y * precision ) },${ Math.round( b.z * precision ) }`;\n\t\t\t\thashes[ 2 ] = `${ Math.round( c.x * precision ) },${ Math.round( c.y * precision ) },${ Math.round( c.z * precision ) }`;\n\n\t\t\t\t// skip degenerate triangles\n\t\t\t\tif ( hashes[ 0 ] === hashes[ 1 ] || hashes[ 1 ] === hashes[ 2 ] || hashes[ 2 ] === hashes[ 0 ] ) {\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\t// iterate over every edge\n\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t// get the first and next vertex making up the edge\n\t\t\t\t\tconst jNext = ( j + 1 ) % 3;\n\t\t\t\t\tconst vecHash0 = hashes[ j ];\n\t\t\t\t\tconst vecHash1 = hashes[ jNext ];\n\t\t\t\t\tconst v0 = _triangle[ vertKeys[ j ] ];\n\t\t\t\t\tconst v1 = _triangle[ vertKeys[ jNext ] ];\n\n\t\t\t\t\tconst hash = `${ vecHash0 }_${ vecHash1 }`;\n\t\t\t\t\tconst reverseHash = `${ vecHash1 }_${ vecHash0 }`;\n\n\t\t\t\t\tif ( reverseHash in edgeData && edgeData[ reverseHash ] ) {\n\n\t\t\t\t\t\t// if we found a sibling edge add it into the vertex array if\n\t\t\t\t\t\t// it meets the angle threshold and delete the edge from the map.\n\t\t\t\t\t\tif ( _normal.dot( edgeData[ reverseHash ].normal ) <= thresholdDot ) {\n\n\t\t\t\t\t\t\tvertices.push( v0.x, v0.y, v0.z );\n\t\t\t\t\t\t\tvertices.push( v1.x, v1.y, v1.z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tedgeData[ reverseHash ] = null;\n\n\t\t\t\t\t} else if ( ! ( hash in edgeData ) ) {\n\n\t\t\t\t\t\t// if we've already got an edge here then skip adding a new one\n\t\t\t\t\t\tedgeData[ hash ] = {\n\n\t\t\t\t\t\t\tindex0: indexArr[ j ],\n\t\t\t\t\t\t\tindex1: indexArr[ jNext ],\n\t\t\t\t\t\t\tnormal: _normal.clone(),\n\n\t\t\t\t\t\t};\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// iterate over all remaining, unmatched edges and add them to the vertex array\n\t\t\tfor ( const key in edgeData ) {\n\n\t\t\t\tif ( edgeData[ key ] ) {\n\n\t\t\t\t\tconst { index0, index1 } = edgeData[ key ];\n\t\t\t\t\t_v0.fromBufferAttribute( positionAttr, index0 );\n\t\t\t\t\t_v1$1.fromBufferAttribute( positionAttr, index1 );\n\n\t\t\t\t\tvertices.push( _v0.x, _v0.y, _v0.z );\n\t\t\t\t\tvertices.push( _v1$1.x, _v1$1.y, _v1$1.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t\t}\n\n\t}\n\n}\n\nclass Shape extends Path {\n\n\tconstructor( points ) {\n\n\t\tsuper( points );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.type = 'Shape';\n\n\t\tthis.holes = [];\n\n\t}\n\n\tgetPointsHoles( divisions ) {\n\n\t\tconst holesPts = [];\n\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tholesPts[ i ] = this.holes[ i ].getPoints( divisions );\n\n\t\t}\n\n\t\treturn holesPts;\n\n\t}\n\n\t// get points of shape and holes (keypoints based on segments parameter)\n\n\textractPoints( divisions ) {\n\n\t\treturn {\n\n\t\t\tshape: this.getPoints( divisions ),\n\t\t\tholes: this.getPointsHoles( divisions )\n\n\t\t};\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.holes = [];\n\n\t\tfor ( let i = 0, l = source.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = source.holes[ i ];\n\n\t\t\tthis.holes.push( hole.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.holes = [];\n\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = this.holes[ i ];\n\t\t\tdata.holes.push( hole.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.uuid = json.uuid;\n\t\tthis.holes = [];\n\n\t\tfor ( let i = 0, l = json.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = json.holes[ i ];\n\t\t\tthis.holes.push( new Path().fromJSON( hole ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\n/**\n * Port from https://github.com/mapbox/earcut (v2.2.2)\n */\n\nconst Earcut = {\n\n\ttriangulate: function ( data, holeIndices, dim = 2 ) {\n\n\t\tconst hasHoles = holeIndices && holeIndices.length;\n\t\tconst outerLen = hasHoles ? holeIndices[ 0 ] * dim : data.length;\n\t\tlet outerNode = linkedList( data, 0, outerLen, dim, true );\n\t\tconst triangles = [];\n\n\t\tif ( ! outerNode || outerNode.next === outerNode.prev ) return triangles;\n\n\t\tlet minX, minY, maxX, maxY, x, y, invSize;\n\n\t\tif ( hasHoles ) outerNode = eliminateHoles( data, holeIndices, outerNode, dim );\n\n\t\t// if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n\t\tif ( data.length > 80 * dim ) {\n\n\t\t\tminX = maxX = data[ 0 ];\n\t\t\tminY = maxY = data[ 1 ];\n\n\t\t\tfor ( let i = dim; i < outerLen; i += dim ) {\n\n\t\t\t\tx = data[ i ];\n\t\t\t\ty = data[ i + 1 ];\n\t\t\t\tif ( x < minX ) minX = x;\n\t\t\t\tif ( y < minY ) minY = y;\n\t\t\t\tif ( x > maxX ) maxX = x;\n\t\t\t\tif ( y > maxY ) maxY = y;\n\n\t\t\t}\n\n\t\t\t// minX, minY and invSize are later used to transform coords into integers for z-order calculation\n\t\t\tinvSize = Math.max( maxX - minX, maxY - minY );\n\t\t\tinvSize = invSize !== 0 ? 1 / invSize : 0;\n\n\t\t}\n\n\t\tearcutLinked( outerNode, triangles, dim, minX, minY, invSize );\n\n\t\treturn triangles;\n\n\t}\n\n};\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList( data, start, end, dim, clockwise ) {\n\n\tlet i, last;\n\n\tif ( clockwise === ( signedArea( data, start, end, dim ) > 0 ) ) {\n\n\t\tfor ( i = start; i < end; i += dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t} else {\n\n\t\tfor ( i = end - dim; i >= start; i -= dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t}\n\n\tif ( last && equals( last, last.next ) ) {\n\n\t\tremoveNode( last );\n\t\tlast = last.next;\n\n\t}\n\n\treturn last;\n\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints( start, end ) {\n\n\tif ( ! start ) return start;\n\tif ( ! end ) end = start;\n\n\tlet p = start,\n\t\tagain;\n\tdo {\n\n\t\tagain = false;\n\n\t\tif ( ! p.steiner && ( equals( p, p.next ) || area( p.prev, p, p.next ) === 0 ) ) {\n\n\t\t\tremoveNode( p );\n\t\t\tp = end = p.prev;\n\t\t\tif ( p === p.next ) break;\n\t\t\tagain = true;\n\n\t\t} else {\n\n\t\t\tp = p.next;\n\n\t\t}\n\n\t} while ( again || p !== end );\n\n\treturn end;\n\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked( ear, triangles, dim, minX, minY, invSize, pass ) {\n\n\tif ( ! ear ) return;\n\n\t// interlink polygon nodes in z-order\n\tif ( ! pass && invSize ) indexCurve( ear, minX, minY, invSize );\n\n\tlet stop = ear,\n\t\tprev, next;\n\n\t// iterate through ears, slicing them one by one\n\twhile ( ear.prev !== ear.next ) {\n\n\t\tprev = ear.prev;\n\t\tnext = ear.next;\n\n\t\tif ( invSize ? isEarHashed( ear, minX, minY, invSize ) : isEar( ear ) ) {\n\n\t\t\t// cut off the triangle\n\t\t\ttriangles.push( prev.i / dim );\n\t\t\ttriangles.push( ear.i / dim );\n\t\t\ttriangles.push( next.i / dim );\n\n\t\t\tremoveNode( ear );\n\n\t\t\t// skipping the next vertex leads to less sliver triangles\n\t\t\tear = next.next;\n\t\t\tstop = next.next;\n\n\t\t\tcontinue;\n\n\t\t}\n\n\t\tear = next;\n\n\t\t// if we looped through the whole remaining polygon and can't find any more ears\n\t\tif ( ear === stop ) {\n\n\t\t\t// try filtering points and slicing again\n\t\t\tif ( ! pass ) {\n\n\t\t\t\tearcutLinked( filterPoints( ear ), triangles, dim, minX, minY, invSize, 1 );\n\n\t\t\t\t// if this didn't work, try curing all small self-intersections locally\n\n\t\t\t} else if ( pass === 1 ) {\n\n\t\t\t\tear = cureLocalIntersections( filterPoints( ear ), triangles, dim );\n\t\t\t\tearcutLinked( ear, triangles, dim, minX, minY, invSize, 2 );\n\n\t\t\t\t// as a last resort, try splitting the remaining polygon into two\n\n\t\t\t} else if ( pass === 2 ) {\n\n\t\t\t\tsplitEarcut( ear, triangles, dim, minX, minY, invSize );\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar( ear ) {\n\n\tconst a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// now make sure we don't have other points inside the potential ear\n\tlet p = ear.next.next;\n\n\twhile ( p !== ear.prev ) {\n\n\t\tif ( pointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.next;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction isEarHashed( ear, minX, minY, invSize ) {\n\n\tconst a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// triangle bbox; min & max are calculated like this for speed\n\tconst minTX = a.x < b.x ? ( a.x < c.x ? a.x : c.x ) : ( b.x < c.x ? b.x : c.x ),\n\t\tminTY = a.y < b.y ? ( a.y < c.y ? a.y : c.y ) : ( b.y < c.y ? b.y : c.y ),\n\t\tmaxTX = a.x > b.x ? ( a.x > c.x ? a.x : c.x ) : ( b.x > c.x ? b.x : c.x ),\n\t\tmaxTY = a.y > b.y ? ( a.y > c.y ? a.y : c.y ) : ( b.y > c.y ? b.y : c.y );\n\n\t// z-order range for the current triangle bbox;\n\tconst minZ = zOrder( minTX, minTY, minX, minY, invSize ),\n\t\tmaxZ = zOrder( maxTX, maxTY, minX, minY, invSize );\n\n\tlet p = ear.prevZ,\n\t\tn = ear.nextZ;\n\n\t// look for points inside the triangle in both directions\n\twhile ( p && p.z >= minZ && n && n.z <= maxZ ) {\n\n\t\tif ( p !== ear.prev && p !== ear.next &&\n\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t\tif ( n !== ear.prev && n !== ear.next &&\n\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y ) &&\n\t\t\tarea( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\t// look for remaining points in decreasing z-order\n\twhile ( p && p.z >= minZ ) {\n\n\t\tif ( p !== ear.prev && p !== ear.next &&\n\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t}\n\n\t// look for remaining points in increasing z-order\n\twhile ( n && n.z <= maxZ ) {\n\n\t\tif ( n !== ear.prev && n !== ear.next &&\n\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y ) &&\n\t\t\tarea( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\treturn true;\n\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections( start, triangles, dim ) {\n\n\tlet p = start;\n\tdo {\n\n\t\tconst a = p.prev,\n\t\t\tb = p.next.next;\n\n\t\tif ( ! equals( a, b ) && intersects( a, p, p.next, b ) && locallyInside( a, b ) && locallyInside( b, a ) ) {\n\n\t\t\ttriangles.push( a.i / dim );\n\t\t\ttriangles.push( p.i / dim );\n\t\t\ttriangles.push( b.i / dim );\n\n\t\t\t// remove two nodes involved\n\t\t\tremoveNode( p );\n\t\t\tremoveNode( p.next );\n\n\t\t\tp = start = b;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn filterPoints( p );\n\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut( start, triangles, dim, minX, minY, invSize ) {\n\n\t// look for a valid diagonal that divides the polygon into two\n\tlet a = start;\n\tdo {\n\n\t\tlet b = a.next.next;\n\t\twhile ( b !== a.prev ) {\n\n\t\t\tif ( a.i !== b.i && isValidDiagonal( a, b ) ) {\n\n\t\t\t\t// split the polygon in two by the diagonal\n\t\t\t\tlet c = splitPolygon( a, b );\n\n\t\t\t\t// filter colinear points around the cuts\n\t\t\t\ta = filterPoints( a, a.next );\n\t\t\t\tc = filterPoints( c, c.next );\n\n\t\t\t\t// run earcut on each half\n\t\t\t\tearcutLinked( a, triangles, dim, minX, minY, invSize );\n\t\t\t\tearcutLinked( c, triangles, dim, minX, minY, invSize );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tb = b.next;\n\n\t\t}\n\n\t\ta = a.next;\n\n\t} while ( a !== start );\n\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles( data, holeIndices, outerNode, dim ) {\n\n\tconst queue = [];\n\tlet i, len, start, end, list;\n\n\tfor ( i = 0, len = holeIndices.length; i < len; i ++ ) {\n\n\t\tstart = holeIndices[ i ] * dim;\n\t\tend = i < len - 1 ? holeIndices[ i + 1 ] * dim : data.length;\n\t\tlist = linkedList( data, start, end, dim, false );\n\t\tif ( list === list.next ) list.steiner = true;\n\t\tqueue.push( getLeftmost( list ) );\n\n\t}\n\n\tqueue.sort( compareX );\n\n\t// process holes from left to right\n\tfor ( i = 0; i < queue.length; i ++ ) {\n\n\t\teliminateHole( queue[ i ], outerNode );\n\t\touterNode = filterPoints( outerNode, outerNode.next );\n\n\t}\n\n\treturn outerNode;\n\n}\n\nfunction compareX( a, b ) {\n\n\treturn a.x - b.x;\n\n}\n\n// find a bridge between vertices that connects hole with an outer ring and link it\nfunction eliminateHole( hole, outerNode ) {\n\n\touterNode = findHoleBridge( hole, outerNode );\n\tif ( outerNode ) {\n\n\t\tconst b = splitPolygon( outerNode, hole );\n\n\t\t// filter collinear points around the cuts\n\t\tfilterPoints( outerNode, outerNode.next );\n\t\tfilterPoints( b, b.next );\n\n\t}\n\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge( hole, outerNode ) {\n\n\tlet p = outerNode;\n\tconst hx = hole.x;\n\tconst hy = hole.y;\n\tlet qx = - Infinity, m;\n\n\t// find a segment intersected by a ray from the hole's leftmost point to the left;\n\t// segment's endpoint with lesser x will be potential connection point\n\tdo {\n\n\t\tif ( hy <= p.y && hy >= p.next.y && p.next.y !== p.y ) {\n\n\t\t\tconst x = p.x + ( hy - p.y ) * ( p.next.x - p.x ) / ( p.next.y - p.y );\n\t\t\tif ( x <= hx && x > qx ) {\n\n\t\t\t\tqx = x;\n\t\t\t\tif ( x === hx ) {\n\n\t\t\t\t\tif ( hy === p.y ) return p;\n\t\t\t\t\tif ( hy === p.next.y ) return p.next;\n\n\t\t\t\t}\n\n\t\t\t\tm = p.x < p.next.x ? p : p.next;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== outerNode );\n\n\tif ( ! m ) return null;\n\n\tif ( hx === qx ) return m; // hole touches outer segment; pick leftmost endpoint\n\n\t// look for points inside the triangle of hole point, segment intersection and endpoint;\n\t// if there are no points found, we have a valid connection;\n\t// otherwise choose the point of the minimum angle with the ray as connection point\n\n\tconst stop = m,\n\t\tmx = m.x,\n\t\tmy = m.y;\n\tlet tanMin = Infinity, tan;\n\n\tp = m;\n\n\tdo {\n\n\t\tif ( hx >= p.x && p.x >= mx && hx !== p.x &&\n\t\t\t\tpointInTriangle( hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y ) ) {\n\n\t\t\ttan = Math.abs( hy - p.y ) / ( hx - p.x ); // tangential\n\n\t\t\tif ( locallyInside( p, hole ) && ( tan < tanMin || ( tan === tanMin && ( p.x > m.x || ( p.x === m.x && sectorContainsSector( m, p ) ) ) ) ) ) {\n\n\t\t\t\tm = p;\n\t\t\t\ttanMin = tan;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== stop );\n\n\treturn m;\n\n}\n\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector( m, p ) {\n\n\treturn area( m.prev, m, p.prev ) < 0 && area( p.next, m, m.next ) < 0;\n\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve( start, minX, minY, invSize ) {\n\n\tlet p = start;\n\tdo {\n\n\t\tif ( p.z === null ) p.z = zOrder( p.x, p.y, minX, minY, invSize );\n\t\tp.prevZ = p.prev;\n\t\tp.nextZ = p.next;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\tp.prevZ.nextZ = null;\n\tp.prevZ = null;\n\n\tsortLinked( p );\n\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked( list ) {\n\n\tlet i, p, q, e, tail, numMerges, pSize, qSize,\n\t\tinSize = 1;\n\n\tdo {\n\n\t\tp = list;\n\t\tlist = null;\n\t\ttail = null;\n\t\tnumMerges = 0;\n\n\t\twhile ( p ) {\n\n\t\t\tnumMerges ++;\n\t\t\tq = p;\n\t\t\tpSize = 0;\n\t\t\tfor ( i = 0; i < inSize; i ++ ) {\n\n\t\t\t\tpSize ++;\n\t\t\t\tq = q.nextZ;\n\t\t\t\tif ( ! q ) break;\n\n\t\t\t}\n\n\t\t\tqSize = inSize;\n\n\t\t\twhile ( pSize > 0 || ( qSize > 0 && q ) ) {\n\n\t\t\t\tif ( pSize !== 0 && ( qSize === 0 || ! q || p.z <= q.z ) ) {\n\n\t\t\t\t\te = p;\n\t\t\t\t\tp = p.nextZ;\n\t\t\t\t\tpSize --;\n\n\t\t\t\t} else {\n\n\t\t\t\t\te = q;\n\t\t\t\t\tq = q.nextZ;\n\t\t\t\t\tqSize --;\n\n\t\t\t\t}\n\n\t\t\t\tif ( tail ) tail.nextZ = e;\n\t\t\t\telse list = e;\n\n\t\t\t\te.prevZ = tail;\n\t\t\t\ttail = e;\n\n\t\t\t}\n\n\t\t\tp = q;\n\n\t\t}\n\n\t\ttail.nextZ = null;\n\t\tinSize *= 2;\n\n\t} while ( numMerges > 1 );\n\n\treturn list;\n\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder( x, y, minX, minY, invSize ) {\n\n\t// coords are transformed into non-negative 15-bit integer range\n\tx = 32767 * ( x - minX ) * invSize;\n\ty = 32767 * ( y - minY ) * invSize;\n\n\tx = ( x | ( x << 8 ) ) & 0x00FF00FF;\n\tx = ( x | ( x << 4 ) ) & 0x0F0F0F0F;\n\tx = ( x | ( x << 2 ) ) & 0x33333333;\n\tx = ( x | ( x << 1 ) ) & 0x55555555;\n\n\ty = ( y | ( y << 8 ) ) & 0x00FF00FF;\n\ty = ( y | ( y << 4 ) ) & 0x0F0F0F0F;\n\ty = ( y | ( y << 2 ) ) & 0x33333333;\n\ty = ( y | ( y << 1 ) ) & 0x55555555;\n\n\treturn x | ( y << 1 );\n\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost( start ) {\n\n\tlet p = start,\n\t\tleftmost = start;\n\tdo {\n\n\t\tif ( p.x < leftmost.x || ( p.x === leftmost.x && p.y < leftmost.y ) ) leftmost = p;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn leftmost;\n\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle( ax, ay, bx, by, cx, cy, px, py ) {\n\n\treturn ( cx - px ) * ( ay - py ) - ( ax - px ) * ( cy - py ) >= 0 &&\n\t\t\t( ax - px ) * ( by - py ) - ( bx - px ) * ( ay - py ) >= 0 &&\n\t\t\t( bx - px ) * ( cy - py ) - ( cx - px ) * ( by - py ) >= 0;\n\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal( a, b ) {\n\n\treturn a.next.i !== b.i && a.prev.i !== b.i && ! intersectsPolygon( a, b ) && // doesn't intersect other edges\n\t\t( locallyInside( a, b ) && locallyInside( b, a ) && middleInside( a, b ) && // locally visible\n\t\t( area( a.prev, a, b.prev ) || area( a, b.prev, b ) ) || // does not create opposite-facing sectors\n\t\tequals( a, b ) && area( a.prev, a, a.next ) > 0 && area( b.prev, b, b.next ) > 0 ); // special zero-length case\n\n}\n\n// signed area of a triangle\nfunction area( p, q, r ) {\n\n\treturn ( q.y - p.y ) * ( r.x - q.x ) - ( q.x - p.x ) * ( r.y - q.y );\n\n}\n\n// check if two points are equal\nfunction equals( p1, p2 ) {\n\n\treturn p1.x === p2.x && p1.y === p2.y;\n\n}\n\n// check if two segments intersect\nfunction intersects( p1, q1, p2, q2 ) {\n\n\tconst o1 = sign( area( p1, q1, p2 ) );\n\tconst o2 = sign( area( p1, q1, q2 ) );\n\tconst o3 = sign( area( p2, q2, p1 ) );\n\tconst o4 = sign( area( p2, q2, q1 ) );\n\n\tif ( o1 !== o2 && o3 !== o4 ) return true; // general case\n\n\tif ( o1 === 0 && onSegment( p1, p2, q1 ) ) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n\tif ( o2 === 0 && onSegment( p1, q2, q1 ) ) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n\tif ( o3 === 0 && onSegment( p2, p1, q2 ) ) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n\tif ( o4 === 0 && onSegment( p2, q1, q2 ) ) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n\treturn false;\n\n}\n\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment( p, q, r ) {\n\n\treturn q.x <= Math.max( p.x, r.x ) && q.x >= Math.min( p.x, r.x ) && q.y <= Math.max( p.y, r.y ) && q.y >= Math.min( p.y, r.y );\n\n}\n\nfunction sign( num ) {\n\n\treturn num > 0 ? 1 : num < 0 ? - 1 : 0;\n\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon( a, b ) {\n\n\tlet p = a;\n\tdo {\n\n\t\tif ( p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n\t\t\t\tintersects( p, p.next, a, b ) ) return true;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn false;\n\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside( a, b ) {\n\n\treturn area( a.prev, a, a.next ) < 0 ?\n\t\tarea( a, b, a.next ) >= 0 && area( a, a.prev, b ) >= 0 :\n\t\tarea( a, b, a.prev ) < 0 || area( a, a.next, b ) < 0;\n\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside( a, b ) {\n\n\tlet p = a,\n\t\tinside = false;\n\tconst px = ( a.x + b.x ) / 2,\n\t\tpy = ( a.y + b.y ) / 2;\n\tdo {\n\n\t\tif ( ( ( p.y > py ) !== ( p.next.y > py ) ) && p.next.y !== p.y &&\n\t\t\t\t( px < ( p.next.x - p.x ) * ( py - p.y ) / ( p.next.y - p.y ) + p.x ) )\n\t\t\tinside = ! inside;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn inside;\n\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon( a, b ) {\n\n\tconst a2 = new Node( a.i, a.x, a.y ),\n\t\tb2 = new Node( b.i, b.x, b.y ),\n\t\tan = a.next,\n\t\tbp = b.prev;\n\n\ta.next = b;\n\tb.prev = a;\n\n\ta2.next = an;\n\tan.prev = a2;\n\n\tb2.next = a2;\n\ta2.prev = b2;\n\n\tbp.next = b2;\n\tb2.prev = bp;\n\n\treturn b2;\n\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode( i, x, y, last ) {\n\n\tconst p = new Node( i, x, y );\n\n\tif ( ! last ) {\n\n\t\tp.prev = p;\n\t\tp.next = p;\n\n\t} else {\n\n\t\tp.next = last.next;\n\t\tp.prev = last;\n\t\tlast.next.prev = p;\n\t\tlast.next = p;\n\n\t}\n\n\treturn p;\n\n}\n\nfunction removeNode( p ) {\n\n\tp.next.prev = p.prev;\n\tp.prev.next = p.next;\n\n\tif ( p.prevZ ) p.prevZ.nextZ = p.nextZ;\n\tif ( p.nextZ ) p.nextZ.prevZ = p.prevZ;\n\n}\n\nfunction Node( i, x, y ) {\n\n\t// vertex index in coordinates array\n\tthis.i = i;\n\n\t// vertex coordinates\n\tthis.x = x;\n\tthis.y = y;\n\n\t// previous and next vertex nodes in a polygon ring\n\tthis.prev = null;\n\tthis.next = null;\n\n\t// z-order curve value\n\tthis.z = null;\n\n\t// previous and next nodes in z-order\n\tthis.prevZ = null;\n\tthis.nextZ = null;\n\n\t// indicates whether this is a steiner point\n\tthis.steiner = false;\n\n}\n\nfunction signedArea( data, start, end, dim ) {\n\n\tlet sum = 0;\n\tfor ( let i = start, j = end - dim; i < end; i += dim ) {\n\n\t\tsum += ( data[ j ] - data[ i ] ) * ( data[ i + 1 ] + data[ j + 1 ] );\n\t\tj = i;\n\n\t}\n\n\treturn sum;\n\n}\n\nclass ShapeUtils {\n\n\t// calculate area of the contour polygon\n\n\tstatic area( contour ) {\n\n\t\tconst n = contour.length;\n\t\tlet a = 0.0;\n\n\t\tfor ( let p = n - 1, q = 0; q < n; p = q ++ ) {\n\n\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\n\n\t\t}\n\n\t\treturn a * 0.5;\n\n\t}\n\n\tstatic isClockWise( pts ) {\n\n\t\treturn ShapeUtils.area( pts ) < 0;\n\n\t}\n\n\tstatic triangulateShape( contour, holes ) {\n\n\t\tconst vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\n\t\tconst holeIndices = []; // array of hole indices\n\t\tconst faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\n\n\t\tremoveDupEndPts( contour );\n\t\taddContour( vertices, contour );\n\n\t\t//\n\n\t\tlet holeIndex = contour.length;\n\n\t\tholes.forEach( removeDupEndPts );\n\n\t\tfor ( let i = 0; i < holes.length; i ++ ) {\n\n\t\t\tholeIndices.push( holeIndex );\n\t\t\tholeIndex += holes[ i ].length;\n\t\t\taddContour( vertices, holes[ i ] );\n\n\t\t}\n\n\t\t//\n\n\t\tconst triangles = Earcut.triangulate( vertices, holeIndices );\n\n\t\t//\n\n\t\tfor ( let i = 0; i < triangles.length; i += 3 ) {\n\n\t\t\tfaces.push( triangles.slice( i, i + 3 ) );\n\n\t\t}\n\n\t\treturn faces;\n\n\t}\n\n}\n\nfunction removeDupEndPts( points ) {\n\n\tconst l = points.length;\n\n\tif ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) {\n\n\t\tpoints.pop();\n\n\t}\n\n}\n\nfunction addContour( vertices, contour ) {\n\n\tfor ( let i = 0; i < contour.length; i ++ ) {\n\n\t\tvertices.push( contour[ i ].x );\n\t\tvertices.push( contour[ i ].y );\n\n\t}\n\n}\n\n/**\n * Creates extruded geometry from a path shape.\n *\n * parameters = {\n *\n *  curveSegments: <int>, // number of points on the curves\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n *  depth: <float>, // Depth to extrude the shape\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\n *  bevelSize: <float>, // how far from shape outline (including bevelOffset) is bevel\n *  bevelOffset: <float>, // how far from shape outline does bevel start\n *  bevelSegments: <int>, // number of bevel layers\n *\n *  extrudePath: <THREE.Curve> // curve to extrude shape along\n *\n *  UVGenerator: <Object> // object that provides UV generator functions\n *\n * }\n */\n\nclass ExtrudeGeometry extends BufferGeometry {\n\n\tconstructor( shapes = new Shape( [ new Vector2( 0.5, 0.5 ), new Vector2( - 0.5, 0.5 ), new Vector2( - 0.5, - 0.5 ), new Vector2( 0.5, - 0.5 ) ] ), options = {} ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ExtrudeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\toptions: options\n\t\t};\n\n\t\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\n\n\t\tconst scope = this;\n\n\t\tconst verticesArray = [];\n\t\tconst uvArray = [];\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\t\t\taddShape( shape );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( verticesArray, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvArray, 2 ) );\n\n\t\tthis.computeVertexNormals();\n\n\t\t// functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tconst placeholder = [];\n\n\t\t\t// options\n\n\t\t\tconst curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\t\t\tconst steps = options.steps !== undefined ? options.steps : 1;\n\t\t\tlet depth = options.depth !== undefined ? options.depth : 1;\n\n\t\t\tlet bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true;\n\t\t\tlet bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 0.2;\n\t\t\tlet bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 0.1;\n\t\t\tlet bevelOffset = options.bevelOffset !== undefined ? options.bevelOffset : 0;\n\t\t\tlet bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n\n\t\t\tconst extrudePath = options.extrudePath;\n\n\t\t\tconst uvgen = options.UVGenerator !== undefined ? options.UVGenerator : WorldUVGenerator;\n\n\t\t\t// deprecated options\n\n\t\t\tif ( options.amount !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ExtrudeBufferGeometry: amount has been renamed to depth.' );\n\t\t\t\tdepth = options.amount;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tlet extrudePts, extrudeByPath = false;\n\t\t\tlet splineTube, binormal, normal, position2;\n\n\t\t\tif ( extrudePath ) {\n\n\t\t\t\textrudePts = extrudePath.getSpacedPoints( steps );\n\n\t\t\t\textrudeByPath = true;\n\t\t\t\tbevelEnabled = false; // bevels not supported for path extrusion\n\n\t\t\t\t// SETUP TNB variables\n\n\t\t\t\t// TODO1 - have a .isClosed in spline?\n\n\t\t\t\tsplineTube = extrudePath.computeFrenetFrames( steps, false );\n\n\t\t\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n\t\t\t\tbinormal = new Vector3();\n\t\t\t\tnormal = new Vector3();\n\t\t\t\tposition2 = new Vector3();\n\n\t\t\t}\n\n\t\t\t// Safeguards if bevels are not enabled\n\n\t\t\tif ( ! bevelEnabled ) {\n\n\t\t\t\tbevelSegments = 0;\n\t\t\t\tbevelThickness = 0;\n\t\t\t\tbevelSize = 0;\n\t\t\t\tbevelOffset = 0;\n\n\t\t\t}\n\n\t\t\t// Variables initialization\n\n\t\t\tconst shapePoints = shape.extractPoints( curveSegments );\n\n\t\t\tlet vertices = shapePoints.shape;\n\t\t\tconst holes = shapePoints.holes;\n\n\t\t\tconst reverse = ! ShapeUtils.isClockWise( vertices );\n\n\t\t\tif ( reverse ) {\n\n\t\t\t\tvertices = vertices.reverse();\n\n\t\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\t\tif ( ShapeUtils.isClockWise( ahole ) ) {\n\n\t\t\t\t\t\tholes[ h ] = ahole.reverse();\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\tconst faces = ShapeUtils.triangulateShape( vertices, holes );\n\n\t\t\t/* Vertices */\n\n\t\t\tconst contour = vertices; // vertices has all points but contour has only points of circumference\n\n\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\tvertices = vertices.concat( ahole );\n\n\t\t\t}\n\n\n\t\t\tfunction scalePt2( pt, vec, size ) {\n\n\t\t\t\tif ( ! vec ) console.error( 'THREE.ExtrudeGeometry: vec does not exist' );\n\n\t\t\t\treturn vec.clone().multiplyScalar( size ).add( pt );\n\n\t\t\t}\n\n\t\t\tconst vlen = vertices.length, flen = faces.length;\n\n\n\t\t\t// Find directions for point movement\n\n\n\t\t\tfunction getBevelVec( inPt, inPrev, inNext ) {\n\n\t\t\t\t// computes for inPt the corresponding point inPt' on a new contour\n\t\t\t\t//   shifted by 1 unit (length of normalized vector) to the left\n\t\t\t\t// if we walk along contour clockwise, this new contour is outside the old one\n\t\t\t\t//\n\t\t\t\t// inPt' is the intersection of the two lines parallel to the two\n\t\t\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\n\n\t\t\t\tlet v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\n\n\t\t\t\t// good reading for geometry algorithms (here: line-line intersection)\n\t\t\t\t// http://geomalgorithms.com/a05-_intersect-1.html\n\n\t\t\t\tconst v_prev_x = inPt.x - inPrev.x,\n\t\t\t\t\tv_prev_y = inPt.y - inPrev.y;\n\t\t\t\tconst v_next_x = inNext.x - inPt.x,\n\t\t\t\t\tv_next_y = inNext.y - inPt.y;\n\n\t\t\t\tconst v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\n\n\t\t\t\t// check for collinear edges\n\t\t\t\tconst collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\tif ( Math.abs( collinear0 ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not collinear\n\n\t\t\t\t\t// length of vectors for normalizing\n\n\t\t\t\t\tconst v_prev_len = Math.sqrt( v_prev_lensq );\n\t\t\t\t\tconst v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\n\n\t\t\t\t\t// shift adjacent points by unit vectors to the left\n\n\t\t\t\t\tconst ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\n\t\t\t\t\tconst ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\n\n\t\t\t\t\tconst ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\n\t\t\t\t\tconst ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\n\n\t\t\t\t\t// scaling factor for v_prev to intersection point\n\n\t\t\t\t\tconst sf = ( ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\n\t\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x ) /\n\t\t\t\t\t\t( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\t\t// vector from inPt to intersection point\n\n\t\t\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\n\t\t\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\n\n\t\t\t\t\t// Don't normalize!, otherwise sharp corners become ugly\n\t\t\t\t\t//  but prevent crazy spikes\n\t\t\t\t\tconst v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\n\t\t\t\t\tif ( v_trans_lensq <= 2 ) {\n\n\t\t\t\t\t\treturn new Vector2( v_trans_x, v_trans_y );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// handle special case of collinear edges\n\n\t\t\t\t\tlet direction_eq = false; // assumes: opposite\n\n\t\t\t\t\tif ( v_prev_x > Number.EPSILON ) {\n\n\t\t\t\t\t\tif ( v_next_x > Number.EPSILON ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( v_prev_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\tif ( v_next_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( direction_eq ) {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\n\t\t\t\t\t\tv_trans_x = - v_prev_y;\n\t\t\t\t\t\tv_trans_y = v_prev_x;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\n\t\t\t\t\t\tv_trans_x = v_prev_x;\n\t\t\t\t\t\tv_trans_y = v_prev_y;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn new Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\n\n\t\t\t}\n\n\n\t\t\tconst contourMovements = [];\n\n\t\t\tfor ( let i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t// console.log('i,j,k', i, j , k)\n\n\t\t\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\n\n\t\t\t}\n\n\t\t\tconst holesMovements = [];\n\t\t\tlet oneHoleMovements, verticesMovements = contourMovements.concat();\n\n\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\toneHoleMovements = [];\n\n\t\t\t\tfor ( let i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\n\n\t\t\t\t}\n\n\t\t\t\tholesMovements.push( oneHoleMovements );\n\t\t\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\n\n\t\t\t}\n\n\n\t\t\t// Loop bevelSegments, 1 for the front, 1 for the back\n\n\t\t\tfor ( let b = 0; b < bevelSegments; b ++ ) {\n\n\t\t\t\t//for ( b = bevelSegments; b > 0; b -- ) {\n\n\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\n\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst bs = bevelSize + bevelOffset;\n\n\t\t\t// Back facing vertices\n\n\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\n\n\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\tv( vert.x, vert.y, 0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n\n\t\t\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\n\t\t\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\n\n\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Add stepped vertices...\n\t\t\t// Including front facing vertices\n\n\t\t\tfor ( let s = 1; s <= steps; s ++ ) {\n\n\t\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\n\n\t\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\tv( vert.x, vert.y, depth / steps * s );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n\n\t\t\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\n\t\t\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\n\n\t\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\t// Add bevel segments planes\n\n\t\t\t//for ( b = 1; b <= bevelSegments; b ++ ) {\n\t\t\tfor ( let b = bevelSegments - 1; b >= 0; b -- ) {\n\n\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t/* Faces */\n\n\t\t\t// Top and bottom faces\n\n\t\t\tbuildLidFaces();\n\n\t\t\t// Sides faces\n\n\t\t\tbuildSideFaces();\n\n\n\t\t\t/////  Internal functions\n\n\t\t\tfunction buildLidFaces() {\n\n\t\t\t\tconst start = verticesArray.length / 3;\n\n\t\t\t\tif ( bevelEnabled ) {\n\n\t\t\t\t\tlet layer = 0; // steps + 1\n\t\t\t\t\tlet offset = vlen * layer;\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlayer = steps + bevelSegments * 2;\n\t\t\t\t\toffset = vlen * layer;\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 0 );\n\n\t\t\t}\n\n\t\t\t// Create faces for the z-sides of the shape\n\n\t\t\tfunction buildSideFaces() {\n\n\t\t\t\tconst start = verticesArray.length / 3;\n\t\t\t\tlet layeroffset = 0;\n\t\t\t\tsidewalls( contour, layeroffset );\n\t\t\t\tlayeroffset += contour.length;\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\tsidewalls( ahole, layeroffset );\n\n\t\t\t\t\t//, true\n\t\t\t\t\tlayeroffset += ahole.length;\n\n\t\t\t\t}\n\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 1 );\n\n\n\t\t\t}\n\n\t\t\tfunction sidewalls( contour, layeroffset ) {\n\n\t\t\t\tlet i = contour.length;\n\n\t\t\t\twhile ( -- i >= 0 ) {\n\n\t\t\t\t\tconst j = i;\n\t\t\t\t\tlet k = i - 1;\n\t\t\t\t\tif ( k < 0 ) k = contour.length - 1;\n\n\t\t\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\n\n\t\t\t\t\tfor ( let s = 0, sl = ( steps + bevelSegments * 2 ); s < sl; s ++ ) {\n\n\t\t\t\t\t\tconst slen1 = vlen * s;\n\t\t\t\t\t\tconst slen2 = vlen * ( s + 1 );\n\n\t\t\t\t\t\tconst a = layeroffset + j + slen1,\n\t\t\t\t\t\t\tb = layeroffset + k + slen1,\n\t\t\t\t\t\t\tc = layeroffset + k + slen2,\n\t\t\t\t\t\t\td = layeroffset + j + slen2;\n\n\t\t\t\t\t\tf4( a, b, c, d );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction v( x, y, z ) {\n\n\t\t\t\tplaceholder.push( x );\n\t\t\t\tplaceholder.push( y );\n\t\t\t\tplaceholder.push( z );\n\n\t\t\t}\n\n\n\t\t\tfunction f3( a, b, c ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\n\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\tconst uvs = uvgen.generateTopUV( scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\n\t\t\t}\n\n\t\t\tfunction f4( a, b, c, d ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( d );\n\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\t\t\t\taddVertex( d );\n\n\n\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\tconst uvs = uvgen.generateSideWallUV( scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t}\n\n\t\t\tfunction addVertex( index ) {\n\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 0 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 1 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 2 ] );\n\n\t\t\t}\n\n\n\t\t\tfunction addUV( vector2 ) {\n\n\t\t\t\tuvArray.push( vector2.x );\n\t\t\t\tuvArray.push( vector2.y );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tconst shapes = this.parameters.shapes;\n\t\tconst options = this.parameters.options;\n\n\t\treturn toJSON$1( shapes, options, data );\n\n\t}\n\n\tstatic fromJSON( data, shapes ) {\n\n\t\tconst geometryShapes = [];\n\n\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\tconst shape = shapes[ data.shapes[ j ] ];\n\n\t\t\tgeometryShapes.push( shape );\n\n\t\t}\n\n\t\tconst extrudePath = data.options.extrudePath;\n\n\t\tif ( extrudePath !== undefined ) {\n\n\t\t\tdata.options.extrudePath = new Curves[ extrudePath.type ]().fromJSON( extrudePath );\n\n\t\t}\n\n\t\treturn new ExtrudeGeometry( geometryShapes, data.options );\n\n\t}\n\n}\n\nconst WorldUVGenerator = {\n\n\tgenerateTopUV: function ( geometry, vertices, indexA, indexB, indexC ) {\n\n\t\tconst a_x = vertices[ indexA * 3 ];\n\t\tconst a_y = vertices[ indexA * 3 + 1 ];\n\t\tconst b_x = vertices[ indexB * 3 ];\n\t\tconst b_y = vertices[ indexB * 3 + 1 ];\n\t\tconst c_x = vertices[ indexC * 3 ];\n\t\tconst c_y = vertices[ indexC * 3 + 1 ];\n\n\t\treturn [\n\t\t\tnew Vector2( a_x, a_y ),\n\t\t\tnew Vector2( b_x, b_y ),\n\t\t\tnew Vector2( c_x, c_y )\n\t\t];\n\n\t},\n\n\tgenerateSideWallUV: function ( geometry, vertices, indexA, indexB, indexC, indexD ) {\n\n\t\tconst a_x = vertices[ indexA * 3 ];\n\t\tconst a_y = vertices[ indexA * 3 + 1 ];\n\t\tconst a_z = vertices[ indexA * 3 + 2 ];\n\t\tconst b_x = vertices[ indexB * 3 ];\n\t\tconst b_y = vertices[ indexB * 3 + 1 ];\n\t\tconst b_z = vertices[ indexB * 3 + 2 ];\n\t\tconst c_x = vertices[ indexC * 3 ];\n\t\tconst c_y = vertices[ indexC * 3 + 1 ];\n\t\tconst c_z = vertices[ indexC * 3 + 2 ];\n\t\tconst d_x = vertices[ indexD * 3 ];\n\t\tconst d_y = vertices[ indexD * 3 + 1 ];\n\t\tconst d_z = vertices[ indexD * 3 + 2 ];\n\n\t\tif ( Math.abs( a_y - b_y ) < Math.abs( a_x - b_x ) ) {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_x, 1 - a_z ),\n\t\t\t\tnew Vector2( b_x, 1 - b_z ),\n\t\t\t\tnew Vector2( c_x, 1 - c_z ),\n\t\t\t\tnew Vector2( d_x, 1 - d_z )\n\t\t\t];\n\n\t\t} else {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_y, 1 - a_z ),\n\t\t\t\tnew Vector2( b_y, 1 - b_z ),\n\t\t\t\tnew Vector2( c_y, 1 - c_z ),\n\t\t\t\tnew Vector2( d_y, 1 - d_z )\n\t\t\t];\n\n\t\t}\n\n\t}\n\n};\n\nfunction toJSON$1( shapes, options, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\tif ( options.extrudePath !== undefined ) data.options.extrudePath = options.extrudePath.toJSON();\n\n\treturn data;\n\n}\n\nclass IcosahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\n\t\tconst vertices = [\n\t\t\t- 1, t, 0, \t1, t, 0, \t- 1, - t, 0, \t1, - t, 0,\n\t\t\t0, - 1, t, \t0, 1, t,\t0, - 1, - t, \t0, 1, - t,\n\t\t\tt, 0, - 1, \tt, 0, 1, \t- t, 0, - 1, \t- t, 0, 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t0, 11, 5, \t0, 5, 1, \t0, 1, 7, \t0, 7, 10, \t0, 10, 11,\n\t\t\t1, 5, 9, \t5, 11, 4,\t11, 10, 2,\t10, 7, 6,\t7, 1, 8,\n\t\t\t3, 9, 4, \t3, 4, 2,\t3, 2, 6,\t3, 6, 8,\t3, 8, 9,\n\t\t\t4, 9, 5, \t2, 4, 11,\t6, 2, 10,\t8, 6, 7,\t9, 8, 1\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'IcosahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new IcosahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass OctahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst vertices = [\n\t\t\t1, 0, 0, \t- 1, 0, 0,\t0, 1, 0,\n\t\t\t0, - 1, 0, \t0, 0, 1,\t0, 0, - 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t0, 2, 4,\t0, 4, 3,\t0, 3, 5,\n\t\t\t0, 5, 2,\t1, 2, 5,\t1, 5, 3,\n\t\t\t1, 3, 4,\t1, 4, 2\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'OctahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new OctahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass RingGeometry extends BufferGeometry {\n\n\tconstructor( innerRadius = 0.5, outerRadius = 1, thetaSegments = 8, phiSegments = 1, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'RingGeometry';\n\n\t\tthis.parameters = {\n\t\t\tinnerRadius: innerRadius,\n\t\t\touterRadius: outerRadius,\n\t\t\tthetaSegments: thetaSegments,\n\t\t\tphiSegments: phiSegments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthetaSegments = Math.max( 3, thetaSegments );\n\t\tphiSegments = Math.max( 1, phiSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// some helper variables\n\n\t\tlet radius = innerRadius;\n\t\tconst radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let j = 0; j <= phiSegments; j ++ ) {\n\n\t\t\tfor ( let i = 0; i <= thetaSegments; i ++ ) {\n\n\t\t\t\t// values are generate from the inside of the ring to the outside\n\n\t\t\t\tconst segment = thetaStart + i / thetaSegments * thetaLength;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( vertex.x / outerRadius + 1 ) / 2;\n\t\t\t\tuv.y = ( vertex.y / outerRadius + 1 ) / 2;\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t}\n\n\t\t\t// increase the radius for next row of vertices\n\n\t\t\tradius += radiusStep;\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let j = 0; j < phiSegments; j ++ ) {\n\n\t\t\tconst thetaSegmentLevel = j * ( thetaSegments + 1 );\n\n\t\t\tfor ( let i = 0; i < thetaSegments; i ++ ) {\n\n\t\t\t\tconst segment = i + thetaSegmentLevel;\n\n\t\t\t\tconst a = segment;\n\t\t\t\tconst b = segment + thetaSegments + 1;\n\t\t\t\tconst c = segment + thetaSegments + 2;\n\t\t\t\tconst d = segment + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new RingGeometry( data.innerRadius, data.outerRadius, data.thetaSegments, data.phiSegments, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass ShapeGeometry extends BufferGeometry {\n\n\tconstructor( shapes = new Shape( [ new Vector2( 0, 0.5 ), new Vector2( - 0.5, - 0.5 ), new Vector2( 0.5, - 0.5 ) ] ), curveSegments = 12 ) {\n\n\t\tsuper();\n\t\tthis.type = 'ShapeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\tcurveSegments: curveSegments\n\t\t};\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet groupStart = 0;\n\t\tlet groupCount = 0;\n\n\t\t// allow single and array values for \"shapes\" parameter\n\n\t\tif ( Array.isArray( shapes ) === false ) {\n\n\t\t\taddShape( shapes );\n\n\t\t} else {\n\n\t\t\tfor ( let i = 0; i < shapes.length; i ++ ) {\n\n\t\t\t\taddShape( shapes[ i ] );\n\n\t\t\t\tthis.addGroup( groupStart, groupCount, i ); // enables MultiMaterial support\n\n\t\t\t\tgroupStart += groupCount;\n\t\t\t\tgroupCount = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\n\t\t// helper functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tconst indexOffset = vertices.length / 3;\n\t\t\tconst points = shape.extractPoints( curveSegments );\n\n\t\t\tlet shapeVertices = points.shape;\n\t\t\tconst shapeHoles = points.holes;\n\n\t\t\t// check direction of vertices\n\n\t\t\tif ( ShapeUtils.isClockWise( shapeVertices ) === false ) {\n\n\t\t\t\tshapeVertices = shapeVertices.reverse();\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tconst shapeHole = shapeHoles[ i ];\n\n\t\t\t\tif ( ShapeUtils.isClockWise( shapeHole ) === true ) {\n\n\t\t\t\t\tshapeHoles[ i ] = shapeHole.reverse();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst faces = ShapeUtils.triangulateShape( shapeVertices, shapeHoles );\n\n\t\t\t// join vertices of inner and outer paths to a single array\n\n\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tconst shapeHole = shapeHoles[ i ];\n\t\t\t\tshapeVertices = shapeVertices.concat( shapeHole );\n\n\t\t\t}\n\n\t\t\t// vertices, normals, uvs\n\n\t\t\tfor ( let i = 0, l = shapeVertices.length; i < l; i ++ ) {\n\n\t\t\t\tconst vertex = shapeVertices[ i ];\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, 0 );\n\t\t\t\tnormals.push( 0, 0, 1 );\n\t\t\t\tuvs.push( vertex.x, vertex.y ); // world uvs\n\n\t\t\t}\n\n\t\t\t// incides\n\n\t\t\tfor ( let i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tconst face = faces[ i ];\n\n\t\t\t\tconst a = face[ 0 ] + indexOffset;\n\t\t\t\tconst b = face[ 1 ] + indexOffset;\n\t\t\t\tconst c = face[ 2 ] + indexOffset;\n\n\t\t\t\tindices.push( a, b, c );\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tconst shapes = this.parameters.shapes;\n\n\t\treturn toJSON( shapes, data );\n\n\t}\n\n\tstatic fromJSON( data, shapes ) {\n\n\t\tconst geometryShapes = [];\n\n\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\tconst shape = shapes[ data.shapes[ j ] ];\n\n\t\t\tgeometryShapes.push( shape );\n\n\t\t}\n\n\t\treturn new ShapeGeometry( geometryShapes, data.curveSegments );\n\n\t}\n\n}\n\nfunction toJSON( shapes, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\treturn data;\n\n}\n\nclass SphereGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, widthSegments = 32, heightSegments = 16, phiStart = 0, phiLength = Math.PI * 2, thetaStart = 0, thetaLength = Math.PI ) {\n\n\t\tsuper();\n\t\tthis.type = 'SphereGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\twidthSegments = Math.max( 3, Math.floor( widthSegments ) );\n\t\theightSegments = Math.max( 2, Math.floor( heightSegments ) );\n\n\t\tconst thetaEnd = Math.min( thetaStart + thetaLength, Math.PI );\n\n\t\tlet index = 0;\n\t\tconst grid = [];\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let iy = 0; iy <= heightSegments; iy ++ ) {\n\n\t\t\tconst verticesRow = [];\n\n\t\t\tconst v = iy / heightSegments;\n\n\t\t\t// special case for the poles\n\n\t\t\tlet uOffset = 0;\n\n\t\t\tif ( iy == 0 && thetaStart == 0 ) {\n\n\t\t\t\tuOffset = 0.5 / widthSegments;\n\n\t\t\t} else if ( iy == heightSegments && thetaEnd == Math.PI ) {\n\n\t\t\t\tuOffset = - 0.5 / widthSegments;\n\n\t\t\t}\n\n\t\t\tfor ( let ix = 0; ix <= widthSegments; ix ++ ) {\n\n\t\t\t\tconst u = ix / widthSegments;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\t\t\t\tvertex.y = radius * Math.cos( thetaStart + v * thetaLength );\n\t\t\t\tvertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.copy( vertex ).normalize();\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( u + uOffset, 1 - v );\n\n\t\t\t\tverticesRow.push( index ++ );\n\n\t\t\t}\n\n\t\t\tgrid.push( verticesRow );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let iy = 0; iy < heightSegments; iy ++ ) {\n\n\t\t\tfor ( let ix = 0; ix < widthSegments; ix ++ ) {\n\n\t\t\t\tconst a = grid[ iy ][ ix + 1 ];\n\t\t\t\tconst b = grid[ iy ][ ix ];\n\t\t\t\tconst c = grid[ iy + 1 ][ ix ];\n\t\t\t\tconst d = grid[ iy + 1 ][ ix + 1 ];\n\n\t\t\t\tif ( iy !== 0 || thetaStart > 0 ) indices.push( a, b, d );\n\t\t\t\tif ( iy !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new SphereGeometry( data.radius, data.widthSegments, data.heightSegments, data.phiStart, data.phiLength, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass TetrahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst vertices = [\n\t\t\t1, 1, 1, \t- 1, - 1, 1, \t- 1, 1, - 1, \t1, - 1, - 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t2, 1, 0, \t0, 3, 2,\t1, 3, 0,\t2, 3, 1\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'TetrahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TetrahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass TorusGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, tube = 0.4, radialSegments = 8, tubularSegments = 6, arc = Math.PI * 2 ) {\n\n\t\tsuper();\n\t\tthis.type = 'TorusGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\tradialSegments: radialSegments,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tarc: arc\n\t\t};\n\n\t\tradialSegments = Math.floor( radialSegments );\n\t\ttubularSegments = Math.floor( tubularSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst center = new Vector3();\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tconst u = i / tubularSegments * arc;\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\n\t\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\n\t\t\t\tvertex.z = tube * Math.sin( v );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tcenter.x = radius * Math.cos( u );\n\t\t\t\tcenter.y = radius * Math.sin( u );\n\t\t\t\tnormal.subVectors( vertex, center ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( let j = 1; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( let i = 1; i <= tubularSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tconst a = ( tubularSegments + 1 ) * j + i - 1;\n\t\t\t\tconst b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\n\t\t\t\tconst c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\n\t\t\t\tconst d = ( tubularSegments + 1 ) * j + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TorusGeometry( data.radius, data.tube, data.radialSegments, data.tubularSegments, data.arc );\n\n\t}\n\n}\n\nclass TorusKnotGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, tube = 0.4, tubularSegments = 64, radialSegments = 8, p = 2, q = 3 ) {\n\n\t\tsuper();\n\t\tthis.type = 'TorusKnotGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t\tp: p,\n\t\t\tq: q\n\t\t};\n\n\t\ttubularSegments = Math.floor( tubularSegments );\n\t\tradialSegments = Math.floor( radialSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\tconst P1 = new Vector3();\n\t\tconst P2 = new Vector3();\n\n\t\tconst B = new Vector3();\n\t\tconst T = new Vector3();\n\t\tconst N = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let i = 0; i <= tubularSegments; ++ i ) {\n\n\t\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segment\n\n\t\t\tconst u = i / tubularSegments * p * Math.PI * 2;\n\n\t\t\t// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n\t\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n\t\t\tcalculatePositionOnCurve( u, p, q, radius, P1 );\n\t\t\tcalculatePositionOnCurve( u + 0.01, p, q, radius, P2 );\n\n\t\t\t// calculate orthonormal basis\n\n\t\t\tT.subVectors( P2, P1 );\n\t\t\tN.addVectors( P2, P1 );\n\t\t\tB.crossVectors( T, N );\n\t\t\tN.crossVectors( B, T );\n\n\t\t\t// normalize B, N. T can be ignored, we don't use it\n\n\t\t\tB.normalize();\n\t\t\tN.normalize();\n\n\t\t\tfor ( let j = 0; j <= radialSegments; ++ j ) {\n\n\t\t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n\t\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\t\t\t\tconst cx = - tube * Math.cos( v );\n\t\t\t\tconst cy = tube * Math.sin( v );\n\n\t\t\t\t// now calculate the final vertex position.\n\t\t\t\t// first we orient the extrusion with our basis vectors, then we add it to the current position on the curve\n\n\t\t\t\tvertex.x = P1.x + ( cx * N.x + cy * B.x );\n\t\t\t\tvertex.y = P1.y + ( cx * N.y + cy * B.y );\n\t\t\t\tvertex.z = P1.z + ( cx * N.z + cy * B.z );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\n\t\t\t\tnormal.subVectors( vertex, P1 ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\n\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// this function calculates the current position on the torus curve\n\n\t\tfunction calculatePositionOnCurve( u, p, q, radius, position ) {\n\n\t\t\tconst cu = Math.cos( u );\n\t\t\tconst su = Math.sin( u );\n\t\t\tconst quOverP = q / p * u;\n\t\t\tconst cs = Math.cos( quOverP );\n\n\t\t\tposition.x = radius * ( 2 + cs ) * 0.5 * cu;\n\t\t\tposition.y = radius * ( 2 + cs ) * su * 0.5;\n\t\t\tposition.z = radius * Math.sin( quOverP ) * 0.5;\n\n\t\t}\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TorusKnotGeometry( data.radius, data.tube, data.tubularSegments, data.radialSegments, data.p, data.q );\n\n\t}\n\n}\n\nclass TubeGeometry extends BufferGeometry {\n\n\tconstructor( path = new QuadraticBezierCurve3( new Vector3( - 1, - 1, 0 ), new Vector3( - 1, 1, 0 ), new Vector3( 1, 1, 0 ) ), tubularSegments = 64, radius = 1, radialSegments = 8, closed = false ) {\n\n\t\tsuper();\n\t\tthis.type = 'TubeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpath: path,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradius: radius,\n\t\t\tradialSegments: radialSegments,\n\t\t\tclosed: closed\n\t\t};\n\n\t\tconst frames = path.computeFrenetFrames( tubularSegments, closed );\n\n\t\t// expose internals\n\n\t\tthis.tangents = frames.tangents;\n\t\tthis.normals = frames.normals;\n\t\tthis.binormals = frames.binormals;\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\t\tconst uv = new Vector2();\n\t\tlet P = new Vector3();\n\n\t\t// buffer\n\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\t\tconst indices = [];\n\n\t\t// create buffer data\n\n\t\tgenerateBufferData();\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// functions\n\n\t\tfunction generateBufferData() {\n\n\t\t\tfor ( let i = 0; i < tubularSegments; i ++ ) {\n\n\t\t\t\tgenerateSegment( i );\n\n\t\t\t}\n\n\t\t\t// if the geometry is not closed, generate the last row of vertices and normals\n\t\t\t// at the regular position on the given path\n\t\t\t//\n\t\t\t// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n\n\t\t\tgenerateSegment( ( closed === false ) ? tubularSegments : 0 );\n\n\t\t\t// uvs are generated in a separate function.\n\t\t\t// this makes it easy compute correct values for closed geometries\n\n\t\t\tgenerateUVs();\n\n\t\t\t// finally create faces\n\n\t\t\tgenerateIndices();\n\n\t\t}\n\n\t\tfunction generateSegment( i ) {\n\n\t\t\t// we use getPointAt to sample evenly distributed points from the given path\n\n\t\t\tP = path.getPointAt( i / tubularSegments, P );\n\n\t\t\t// retrieve corresponding normal and binormal\n\n\t\t\tconst N = frames.normals[ i ];\n\t\t\tconst B = frames.binormals[ i ];\n\n\t\t\t// generate normals and vertices for the current segment\n\n\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\tconst sin = Math.sin( v );\n\t\t\t\tconst cos = - Math.cos( v );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.x = ( cos * N.x + sin * B.x );\n\t\t\t\tnormal.y = ( cos * N.y + sin * B.y );\n\t\t\t\tnormal.z = ( cos * N.z + sin * B.z );\n\t\t\t\tnormal.normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = P.x + radius * normal.x;\n\t\t\t\tvertex.y = P.y + radius * normal.y;\n\t\t\t\tvertex.z = P.z + radius * normal.z;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateIndices() {\n\n\t\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\n\t\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\t\tuv.x = i / tubularSegments;\n\t\t\t\t\tuv.y = j / radialSegments;\n\n\t\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.path = this.parameters.path.toJSON();\n\n\t\treturn data;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\t// This only works for built-in curves (e.g. CatmullRomCurve3).\n\t\t// User defined curves or instances of CurvePath will not be deserialized.\n\t\treturn new TubeGeometry(\n\t\t\tnew Curves[ data.path.type ]().fromJSON( data.path ),\n\t\t\tdata.tubularSegments,\n\t\t\tdata.radius,\n\t\t\tdata.radialSegments,\n\t\t\tdata.closed\n\t\t);\n\n\t}\n\n}\n\nclass WireframeGeometry extends BufferGeometry {\n\n\tconstructor( geometry = null ) {\n\n\t\tsuper();\n\t\tthis.type = 'WireframeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tgeometry: geometry\n\t\t};\n\n\t\tif ( geometry !== null ) {\n\n\t\t\t// buffer\n\n\t\t\tconst vertices = [];\n\t\t\tconst edges = new Set();\n\n\t\t\t// helper variables\n\n\t\t\tconst start = new Vector3();\n\t\t\tconst end = new Vector3();\n\n\t\t\tif ( geometry.index !== null ) {\n\n\t\t\t\t// indexed BufferGeometry\n\n\t\t\t\tconst position = geometry.attributes.position;\n\t\t\t\tconst indices = geometry.index;\n\t\t\t\tlet groups = geometry.groups;\n\n\t\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\t\tgroups = [ { start: 0, count: indices.count, materialIndex: 0 } ];\n\n\t\t\t\t}\n\n\t\t\t\t// create a data structure that contains all edges without duplicates\n\n\t\t\t\tfor ( let o = 0, ol = groups.length; o < ol; ++ o ) {\n\n\t\t\t\t\tconst group = groups[ o ];\n\n\t\t\t\t\tconst groupStart = group.start;\n\t\t\t\t\tconst groupCount = group.count;\n\n\t\t\t\t\tfor ( let i = groupStart, l = ( groupStart + groupCount ); i < l; i += 3 ) {\n\n\t\t\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t\tconst index1 = indices.getX( i + j );\n\t\t\t\t\t\t\tconst index2 = indices.getX( i + ( j + 1 ) % 3 );\n\n\t\t\t\t\t\t\tstart.fromBufferAttribute( position, index1 );\n\t\t\t\t\t\t\tend.fromBufferAttribute( position, index2 );\n\n\t\t\t\t\t\t\tif ( isUniqueEdge( start, end, edges ) === true ) {\n\n\t\t\t\t\t\t\t\tvertices.push( start.x, start.y, start.z );\n\t\t\t\t\t\t\t\tvertices.push( end.x, end.y, end.z );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed BufferGeometry\n\n\t\t\t\tconst position = geometry.attributes.position;\n\n\t\t\t\tfor ( let i = 0, l = ( position.count / 3 ); i < l; i ++ ) {\n\n\t\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t// three edges per triangle, an edge is represented as (index1, index2)\n\t\t\t\t\t\t// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\n\n\t\t\t\t\t\tconst index1 = 3 * i + j;\n\t\t\t\t\t\tconst index2 = 3 * i + ( ( j + 1 ) % 3 );\n\n\t\t\t\t\t\tstart.fromBufferAttribute( position, index1 );\n\t\t\t\t\t\tend.fromBufferAttribute( position, index2 );\n\n\t\t\t\t\t\tif ( isUniqueEdge( start, end, edges ) === true ) {\n\n\t\t\t\t\t\t\tvertices.push( start.x, start.y, start.z );\n\t\t\t\t\t\t\tvertices.push( end.x, end.y, end.z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// build geometry\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t\t}\n\n\t}\n\n}\n\nfunction isUniqueEdge( start, end, edges ) {\n\n\tconst hash1 = `${start.x},${start.y},${start.z}-${end.x},${end.y},${end.z}`;\n\tconst hash2 = `${end.x},${end.y},${end.z}-${start.x},${start.y},${start.z}`; // coincident edge\n\n\tif ( edges.has( hash1 ) === true || edges.has( hash2 ) === true ) {\n\n\t\treturn false;\n\n\t} else {\n\n\t\tedges.add( hash1 );\n\t\tedges.add( hash2 );\n\t\treturn true;\n\n\t}\n\n}\n\nvar Geometries = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tBoxGeometry: BoxGeometry,\n\tBoxBufferGeometry: BoxGeometry,\n\tCapsuleGeometry: CapsuleGeometry,\n\tCapsuleBufferGeometry: CapsuleGeometry,\n\tCircleGeometry: CircleGeometry,\n\tCircleBufferGeometry: CircleGeometry,\n\tConeGeometry: ConeGeometry,\n\tConeBufferGeometry: ConeGeometry,\n\tCylinderGeometry: CylinderGeometry,\n\tCylinderBufferGeometry: CylinderGeometry,\n\tDodecahedronGeometry: DodecahedronGeometry,\n\tDodecahedronBufferGeometry: DodecahedronGeometry,\n\tEdgesGeometry: EdgesGeometry,\n\tExtrudeGeometry: ExtrudeGeometry,\n\tExtrudeBufferGeometry: ExtrudeGeometry,\n\tIcosahedronGeometry: IcosahedronGeometry,\n\tIcosahedronBufferGeometry: IcosahedronGeometry,\n\tLatheGeometry: LatheGeometry,\n\tLatheBufferGeometry: LatheGeometry,\n\tOctahedronGeometry: OctahedronGeometry,\n\tOctahedronBufferGeometry: OctahedronGeometry,\n\tPlaneGeometry: PlaneGeometry,\n\tPlaneBufferGeometry: PlaneGeometry,\n\tPolyhedronGeometry: PolyhedronGeometry,\n\tPolyhedronBufferGeometry: PolyhedronGeometry,\n\tRingGeometry: RingGeometry,\n\tRingBufferGeometry: RingGeometry,\n\tShapeGeometry: ShapeGeometry,\n\tShapeBufferGeometry: ShapeGeometry,\n\tSphereGeometry: SphereGeometry,\n\tSphereBufferGeometry: SphereGeometry,\n\tTetrahedronGeometry: TetrahedronGeometry,\n\tTetrahedronBufferGeometry: TetrahedronGeometry,\n\tTorusGeometry: TorusGeometry,\n\tTorusBufferGeometry: TorusGeometry,\n\tTorusKnotGeometry: TorusKnotGeometry,\n\tTorusKnotBufferGeometry: TorusKnotGeometry,\n\tTubeGeometry: TubeGeometry,\n\tTubeBufferGeometry: TubeGeometry,\n\tWireframeGeometry: WireframeGeometry\n});\n\nclass ShadowMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ShadowMaterial';\n\n\t\tthis.color = new Color( 0x000000 );\n\t\tthis.transparent = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nShadowMaterial.prototype.isShadowMaterial = true;\n\nclass RawShaderMaterial extends ShaderMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper( parameters );\n\n\t\tthis.type = 'RawShaderMaterial';\n\n\t}\n\n}\n\nRawShaderMaterial.prototype.isRawShaderMaterial = true;\n\nclass MeshStandardMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.type = 'MeshStandardMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.roughness = 1.0;\n\t\tthis.metalness = 0.0;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.roughnessMap = null;\n\n\t\tthis.metalnessMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapIntensity = 1.0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.color.copy( source.color );\n\t\tthis.roughness = source.roughness;\n\t\tthis.metalness = source.metalness;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.roughnessMap = source.roughnessMap;\n\n\t\tthis.metalnessMap = source.metalnessMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapIntensity = source.envMapIntensity;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nMeshStandardMaterial.prototype.isMeshStandardMaterial = true;\n\nclass MeshPhysicalMaterial extends MeshStandardMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.type = 'MeshPhysicalMaterial';\n\n\t\tthis.clearcoatMap = null;\n\t\tthis.clearcoatRoughness = 0.0;\n\t\tthis.clearcoatRoughnessMap = null;\n\t\tthis.clearcoatNormalScale = new Vector2( 1, 1 );\n\t\tthis.clearcoatNormalMap = null;\n\n\t\tthis.ior = 1.5;\n\n\t\tObject.defineProperty( this, 'reflectivity', {\n\t\t\tget: function () {\n\n\t\t\t\treturn ( clamp( 2.5 * ( this.ior - 1 ) / ( this.ior + 1 ), 0, 1 ) );\n\n\t\t\t},\n\t\t\tset: function ( reflectivity ) {\n\n\t\t\t\tthis.ior = ( 1 + 0.4 * reflectivity ) / ( 1 - 0.4 * reflectivity );\n\n\t\t\t}\n\t\t} );\n\n\t\tthis.sheenColor = new Color( 0x000000 );\n\t\tthis.sheenColorMap = null;\n\t\tthis.sheenRoughness = 1.0;\n\t\tthis.sheenRoughnessMap = null;\n\n\t\tthis.transmissionMap = null;\n\n\t\tthis.thickness = 0;\n\t\tthis.thicknessMap = null;\n\t\tthis.attenuationDistance = 0.0;\n\t\tthis.attenuationColor = new Color( 1, 1, 1 );\n\n\t\tthis.specularIntensity = 1.0;\n\t\tthis.specularIntensityMap = null;\n\t\tthis.specularColor = new Color( 1, 1, 1 );\n\t\tthis.specularColorMap = null;\n\n\t\tthis._sheen = 0.0;\n\t\tthis._clearcoat = 0;\n\t\tthis._transmission = 0;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tget sheen() {\n\n\t\treturn this._sheen;\n\n\t}\n\n\tset sheen( value ) {\n\n\t\tif ( this._sheen > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._sheen = value;\n\n\t}\n\n\tget clearcoat() {\n\n\t\treturn this._clearcoat;\n\n\t}\n\n\tset clearcoat( value ) {\n\n\t\tif ( this._clearcoat > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._clearcoat = value;\n\n\t}\n\n\tget transmission() {\n\n\t\treturn this._transmission;\n\n\t}\n\n\tset transmission( value ) {\n\n\t\tif ( this._transmission > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._transmission = value;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.clearcoat = source.clearcoat;\n\t\tthis.clearcoatMap = source.clearcoatMap;\n\t\tthis.clearcoatRoughness = source.clearcoatRoughness;\n\t\tthis.clearcoatRoughnessMap = source.clearcoatRoughnessMap;\n\t\tthis.clearcoatNormalMap = source.clearcoatNormalMap;\n\t\tthis.clearcoatNormalScale.copy( source.clearcoatNormalScale );\n\n\t\tthis.ior = source.ior;\n\n\t\tthis.sheen = source.sheen;\n\t\tthis.sheenColor.copy( source.sheenColor );\n\t\tthis.sheenColorMap = source.sheenColorMap;\n\t\tthis.sheenRoughness = source.sheenRoughness;\n\t\tthis.sheenRoughnessMap = source.sheenRoughnessMap;\n\n\t\tthis.transmission = source.transmission;\n\t\tthis.transmissionMap = source.transmissionMap;\n\n\t\tthis.thickness = source.thickness;\n\t\tthis.thicknessMap = source.thicknessMap;\n\t\tthis.attenuationDistance = source.attenuationDistance;\n\t\tthis.attenuationColor.copy( source.attenuationColor );\n\n\t\tthis.specularIntensity = source.specularIntensity;\n\t\tthis.specularIntensityMap = source.specularIntensityMap;\n\t\tthis.specularColor.copy( source.specularColor );\n\t\tthis.specularColorMap = source.specularColorMap;\n\n\t\treturn this;\n\n\t}\n\n}\n\nMeshPhysicalMaterial.prototype.isMeshPhysicalMaterial = true;\n\nclass MeshPhongMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'MeshPhongMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.specular = new Color( 0x111111 );\n\t\tthis.shininess = 30;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.specular.copy( source.specular );\n\t\tthis.shininess = source.shininess;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nMeshPhongMaterial.prototype.isMeshPhongMaterial = true;\n\nclass MeshToonMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.defines = { 'TOON': '' };\n\n\t\tthis.type = 'MeshToonMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\t\tthis.gradientMap = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\t\tthis.gradientMap = source.gradientMap;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nMeshToonMaterial.prototype.isMeshToonMaterial = true;\n\nclass MeshNormalMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'MeshNormalMaterial';\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\treturn this;\n\n\t}\n\n}\n\nMeshNormalMaterial.prototype.isMeshNormalMaterial = true;\n\nclass MeshLambertMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'MeshLambertMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nMeshLambertMaterial.prototype.isMeshLambertMaterial = true;\n\nclass MeshMatcapMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.type = 'MeshMatcapMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.matcap = null;\n\n\t\tthis.map = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.matcap = source.matcap;\n\n\t\tthis.map = source.map;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nMeshMatcapMaterial.prototype.isMeshMatcapMaterial = true;\n\nclass LineDashedMaterial extends LineBasicMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'LineDashedMaterial';\n\n\t\tthis.scale = 1;\n\t\tthis.dashSize = 3;\n\t\tthis.gapSize = 1;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.scale = source.scale;\n\t\tthis.dashSize = source.dashSize;\n\t\tthis.gapSize = source.gapSize;\n\n\t\treturn this;\n\n\t}\n\n}\n\nLineDashedMaterial.prototype.isLineDashedMaterial = true;\n\nconst materialLib = {\n\tShadowMaterial,\n\tSpriteMaterial,\n\tRawShaderMaterial,\n\tShaderMaterial,\n\tPointsMaterial,\n\tMeshPhysicalMaterial,\n\tMeshStandardMaterial,\n\tMeshPhongMaterial,\n\tMeshToonMaterial,\n\tMeshNormalMaterial,\n\tMeshLambertMaterial,\n\tMeshDepthMaterial,\n\tMeshDistanceMaterial,\n\tMeshBasicMaterial,\n\tMeshMatcapMaterial,\n\tLineDashedMaterial,\n\tLineBasicMaterial,\n\tMaterial\n};\n\nMaterial.fromType = function ( type ) {\n\n\treturn new materialLib[ type ]();\n\n};\n\nconst AnimationUtils = {\n\n\t// same as Array.prototype.slice, but also works on typed arrays\n\tarraySlice: function ( array, from, to ) {\n\n\t\tif ( AnimationUtils.isTypedArray( array ) ) {\n\n\t\t\t// in ios9 array.subarray(from, undefined) will return empty array\n\t\t\t// but array.subarray(from) or array.subarray(from, len) is correct\n\t\t\treturn new array.constructor( array.subarray( from, to !== undefined ? to : array.length ) );\n\n\t\t}\n\n\t\treturn array.slice( from, to );\n\n\t},\n\n\t// converts an array to a specific type\n\tconvertArray: function ( array, type, forceClone ) {\n\n\t\tif ( ! array || // let 'undefined' and 'null' pass\n\t\t\t! forceClone && array.constructor === type ) return array;\n\n\t\tif ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\n\n\t\t\treturn new type( array ); // create typed array\n\n\t\t}\n\n\t\treturn Array.prototype.slice.call( array ); // create Array\n\n\t},\n\n\tisTypedArray: function ( object ) {\n\n\t\treturn ArrayBuffer.isView( object ) &&\n\t\t\t! ( object instanceof DataView );\n\n\t},\n\n\t// returns an array by which times and values can be sorted\n\tgetKeyframeOrder: function ( times ) {\n\n\t\tfunction compareTime( i, j ) {\n\n\t\t\treturn times[ i ] - times[ j ];\n\n\t\t}\n\n\t\tconst n = times.length;\n\t\tconst result = new Array( n );\n\t\tfor ( let i = 0; i !== n; ++ i ) result[ i ] = i;\n\n\t\tresult.sort( compareTime );\n\n\t\treturn result;\n\n\t},\n\n\t// uses the array previously returned by 'getKeyframeOrder' to sort data\n\tsortedArray: function ( values, stride, order ) {\n\n\t\tconst nValues = values.length;\n\t\tconst result = new values.constructor( nValues );\n\n\t\tfor ( let i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\n\n\t\t\tconst srcOffset = order[ i ] * stride;\n\n\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\tresult[ dstOffset ++ ] = values[ srcOffset + j ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn result;\n\n\t},\n\n\t// function for parsing AOS keyframe formats\n\tflattenJSON: function ( jsonKeys, times, values, valuePropertyName ) {\n\n\t\tlet i = 1, key = jsonKeys[ 0 ];\n\n\t\twhile ( key !== undefined && key[ valuePropertyName ] === undefined ) {\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t}\n\n\t\tif ( key === undefined ) return; // no data\n\n\t\tlet value = key[ valuePropertyName ];\n\t\tif ( value === undefined ) return; // no data\n\n\t\tif ( Array.isArray( value ) ) {\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalues.push.apply( values, value ); // push all elements\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t} else if ( value.toArray !== undefined ) {\n\n\t\t\t// ...assume THREE.Math-ish\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalue.toArray( values, values.length );\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t} else {\n\n\t\t\t// otherwise push as-is\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalues.push( value );\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t}\n\n\t},\n\n\tsubclip: function ( sourceClip, name, startFrame, endFrame, fps = 30 ) {\n\n\t\tconst clip = sourceClip.clone();\n\n\t\tclip.name = name;\n\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\t\tconst track = clip.tracks[ i ];\n\t\t\tconst valueSize = track.getValueSize();\n\n\t\t\tconst times = [];\n\t\t\tconst values = [];\n\n\t\t\tfor ( let j = 0; j < track.times.length; ++ j ) {\n\n\t\t\t\tconst frame = track.times[ j ] * fps;\n\n\t\t\t\tif ( frame < startFrame || frame >= endFrame ) continue;\n\n\t\t\t\ttimes.push( track.times[ j ] );\n\n\t\t\t\tfor ( let k = 0; k < valueSize; ++ k ) {\n\n\t\t\t\t\tvalues.push( track.values[ j * valueSize + k ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( times.length === 0 ) continue;\n\n\t\t\ttrack.times = AnimationUtils.convertArray( times, track.times.constructor );\n\t\t\ttrack.values = AnimationUtils.convertArray( values, track.values.constructor );\n\n\t\t\ttracks.push( track );\n\n\t\t}\n\n\t\tclip.tracks = tracks;\n\n\t\t// find minimum .times value across all tracks in the trimmed clip\n\n\t\tlet minStartTime = Infinity;\n\n\t\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\t\tif ( minStartTime > clip.tracks[ i ].times[ 0 ] ) {\n\n\t\t\t\tminStartTime = clip.tracks[ i ].times[ 0 ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// shift all tracks such that clip begins at t=0\n\n\t\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\t\tclip.tracks[ i ].shift( - 1 * minStartTime );\n\n\t\t}\n\n\t\tclip.resetDuration();\n\n\t\treturn clip;\n\n\t},\n\n\tmakeClipAdditive: function ( targetClip, referenceFrame = 0, referenceClip = targetClip, fps = 30 ) {\n\n\t\tif ( fps <= 0 ) fps = 30;\n\n\t\tconst numTracks = referenceClip.tracks.length;\n\t\tconst referenceTime = referenceFrame / fps;\n\n\t\t// Make each track's values relative to the values at the reference frame\n\t\tfor ( let i = 0; i < numTracks; ++ i ) {\n\n\t\t\tconst referenceTrack = referenceClip.tracks[ i ];\n\t\t\tconst referenceTrackType = referenceTrack.ValueTypeName;\n\n\t\t\t// Skip this track if it's non-numeric\n\t\t\tif ( referenceTrackType === 'bool' || referenceTrackType === 'string' ) continue;\n\n\t\t\t// Find the track in the target clip whose name and type matches the reference track\n\t\t\tconst targetTrack = targetClip.tracks.find( function ( track ) {\n\n\t\t\t\treturn track.name === referenceTrack.name\n\t\t\t\t\t&& track.ValueTypeName === referenceTrackType;\n\n\t\t\t} );\n\n\t\t\tif ( targetTrack === undefined ) continue;\n\n\t\t\tlet referenceOffset = 0;\n\t\t\tconst referenceValueSize = referenceTrack.getValueSize();\n\n\t\t\tif ( referenceTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\t\treferenceOffset = referenceValueSize / 3;\n\n\t\t\t}\n\n\t\t\tlet targetOffset = 0;\n\t\t\tconst targetValueSize = targetTrack.getValueSize();\n\n\t\t\tif ( targetTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\t\ttargetOffset = targetValueSize / 3;\n\n\t\t\t}\n\n\t\t\tconst lastIndex = referenceTrack.times.length - 1;\n\t\t\tlet referenceValue;\n\n\t\t\t// Find the value to subtract out of the track\n\t\t\tif ( referenceTime <= referenceTrack.times[ 0 ] ) {\n\n\t\t\t\t// Reference frame is earlier than the first keyframe, so just use the first keyframe\n\t\t\t\tconst startIndex = referenceOffset;\n\t\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\t\treferenceValue = AnimationUtils.arraySlice( referenceTrack.values, startIndex, endIndex );\n\n\t\t\t} else if ( referenceTime >= referenceTrack.times[ lastIndex ] ) {\n\n\t\t\t\t// Reference frame is after the last keyframe, so just use the last keyframe\n\t\t\t\tconst startIndex = lastIndex * referenceValueSize + referenceOffset;\n\t\t\t\tconst endIndex = startIndex + referenceValueSize - referenceOffset;\n\t\t\t\treferenceValue = AnimationUtils.arraySlice( referenceTrack.values, startIndex, endIndex );\n\n\t\t\t} else {\n\n\t\t\t\t// Interpolate to the reference value\n\t\t\t\tconst interpolant = referenceTrack.createInterpolant();\n\t\t\t\tconst startIndex = referenceOffset;\n\t\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\t\tinterpolant.evaluate( referenceTime );\n\t\t\t\treferenceValue = AnimationUtils.arraySlice( interpolant.resultBuffer, startIndex, endIndex );\n\n\t\t\t}\n\n\t\t\t// Conjugate the quaternion\n\t\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\t\tconst referenceQuat = new Quaternion().fromArray( referenceValue ).normalize().conjugate();\n\t\t\t\treferenceQuat.toArray( referenceValue );\n\n\t\t\t}\n\n\t\t\t// Subtract the reference value from all of the track values\n\n\t\t\tconst numTimes = targetTrack.times.length;\n\t\t\tfor ( let j = 0; j < numTimes; ++ j ) {\n\n\t\t\t\tconst valueStart = j * targetValueSize + targetOffset;\n\n\t\t\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\t\t\t// Multiply the conjugate for quaternion track types\n\t\t\t\t\tQuaternion.multiplyQuaternionsFlat(\n\t\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\t\tvalueStart,\n\t\t\t\t\t\treferenceValue,\n\t\t\t\t\t\t0,\n\t\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\t\tvalueStart\n\t\t\t\t\t);\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst valueEnd = targetValueSize - targetOffset * 2;\n\n\t\t\t\t\t// Subtract each value for all other numeric track types\n\t\t\t\t\tfor ( let k = 0; k < valueEnd; ++ k ) {\n\n\t\t\t\t\t\ttargetTrack.values[ valueStart + k ] -= referenceValue[ k ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\ttargetClip.blendMode = AdditiveAnimationBlendMode;\n\n\t\treturn targetClip;\n\n\t}\n\n};\n\n/**\n * Abstract base class of interpolants over parametric samples.\n *\n * The parameter domain is one dimensional, typically the time or a path\n * along a curve defined by the data.\n *\n * The sample values can have any dimensionality and derived classes may\n * apply special interpretations to the data.\n *\n * This class provides the interval seek in a Template Method, deferring\n * the actual interpolation to derived classes.\n *\n * Time complexity is O(1) for linear access crossing at most two points\n * and O(log N) for random access, where N is the number of positions.\n *\n * References:\n *\n * \t\thttp://www.oodesign.com/template-method-pattern.html\n *\n */\n\nclass Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tthis.parameterPositions = parameterPositions;\n\t\tthis._cachedIndex = 0;\n\n\t\tthis.resultBuffer = resultBuffer !== undefined ?\n\t\t\tresultBuffer : new sampleValues.constructor( sampleSize );\n\t\tthis.sampleValues = sampleValues;\n\t\tthis.valueSize = sampleSize;\n\n\t\tthis.settings = null;\n\t\tthis.DefaultSettings_ = {};\n\n\t}\n\n\tevaluate( t ) {\n\n\t\tconst pp = this.parameterPositions;\n\t\tlet i1 = this._cachedIndex,\n\t\t\tt1 = pp[ i1 ],\n\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\tvalidate_interval: {\n\n\t\t\tseek: {\n\n\t\t\t\tlet right;\n\n\t\t\t\tlinear_scan: {\n\n\t\t\t\t\t//- See http://jsperf.com/comparison-to-undefined/3\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\n\t\t\t\t\t//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n\t\t\t\t\tforward_scan: if ( ! ( t < t1 ) ) {\n\n\t\t\t\t\t\tfor ( let giveUpAt = i1 + 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\t\t\t\tif ( t < t0 ) break forward_scan;\n\n\t\t\t\t\t\t\t\t// after end\n\n\t\t\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\t\t\treturn this.afterEnd_( i1 - 1, t, t0 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt0 = t1;\n\t\t\t\t\t\t\tt1 = pp[ ++ i1 ];\n\n\t\t\t\t\t\t\tif ( t < t1 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the right side of the index\n\t\t\t\t\t\tright = pp.length;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\t\t\t\t\tif ( ! ( t >= t0 ) ) {\n\n\t\t\t\t\t\t// looping?\n\n\t\t\t\t\t\tconst t1global = pp[ 1 ];\n\n\t\t\t\t\t\tif ( t < t1global ) {\n\n\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\n\t\t\t\t\t\t\tt0 = t1global;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// linear reverse scan\n\n\t\t\t\t\t\tfor ( let giveUpAt = i1 - 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\t\t\t\t// before start\n\n\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt1 = t0;\n\t\t\t\t\t\t\tt0 = pp[ -- i1 - 1 ];\n\n\t\t\t\t\t\t\tif ( t >= t0 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the left side of the index\n\t\t\t\t\t\tright = i1;\n\t\t\t\t\t\ti1 = 0;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the interval is valid\n\n\t\t\t\t\tbreak validate_interval;\n\n\t\t\t\t} // linear scan\n\n\t\t\t\t// binary search\n\n\t\t\t\twhile ( i1 < right ) {\n\n\t\t\t\t\tconst mid = ( i1 + right ) >>> 1;\n\n\t\t\t\t\tif ( t < pp[ mid ] ) {\n\n\t\t\t\t\t\tright = mid;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ti1 = mid + 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tt1 = pp[ i1 ];\n\t\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\t\t\t// check boundary cases, again\n\n\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\treturn this.afterEnd_( i1 - 1, t0, t );\n\n\t\t\t\t}\n\n\t\t\t} // seek\n\n\t\t\tthis._cachedIndex = i1;\n\n\t\t\tthis.intervalChanged_( i1, t0, t1 );\n\n\t\t} // validate_interval\n\n\t\treturn this.interpolate_( i1, t0, t, t1 );\n\n\t}\n\n\tgetSettings_() {\n\n\t\treturn this.settings || this.DefaultSettings_;\n\n\t}\n\n\tcopySampleValue_( index ) {\n\n\t\t// copies a sample value to the result buffer\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = index * stride;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\t// Template methods for derived classes:\n\n\tinterpolate_( /* i1, t0, t, t1 */ ) {\n\n\t\tthrow new Error( 'call to abstract method' );\n\t\t// implementations shall return this.resultBuffer\n\n\t}\n\n\tintervalChanged_( /* i1, t0, t1 */ ) {\n\n\t\t// empty\n\n\t}\n\n}\n\n// ALIAS DEFINITIONS\n\nInterpolant.prototype.beforeStart_ = Interpolant.prototype.copySampleValue_;\nInterpolant.prototype.afterEnd_ = Interpolant.prototype.copySampleValue_;\n\n/**\n * Fast and simple cubic spline interpolant.\n *\n * It was derived from a Hermitian construction setting the first derivative\n * at each sample position to the linear slope between neighboring positions\n * over their parameter interval.\n */\n\nclass CubicInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t\tthis._weightPrev = - 0;\n\t\tthis._offsetPrev = - 0;\n\t\tthis._weightNext = - 0;\n\t\tthis._offsetNext = - 0;\n\n\t\tthis.DefaultSettings_ = {\n\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\n\t\t};\n\n\t}\n\n\tintervalChanged_( i1, t0, t1 ) {\n\n\t\tconst pp = this.parameterPositions;\n\t\tlet iPrev = i1 - 2,\n\t\t\tiNext = i1 + 1,\n\n\t\t\ttPrev = pp[ iPrev ],\n\t\t\ttNext = pp[ iNext ];\n\n\t\tif ( tPrev === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingStart ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(t0) = 0\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = 2 * t0 - t1;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiPrev = pp.length - 2;\n\t\t\t\t\ttPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = t1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tNext === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingEnd ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(tN) = 0\n\t\t\t\t\tiNext = i1;\n\t\t\t\t\ttNext = 2 * t1 - t0;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiNext = 1;\n\t\t\t\t\ttNext = t1 + pp[ 1 ] - pp[ 0 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\n\t\t\t\t\tiNext = i1 - 1;\n\t\t\t\t\ttNext = t0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst halfDt = ( t1 - t0 ) * 0.5,\n\t\t\tstride = this.valueSize;\n\n\t\tthis._weightPrev = halfDt / ( t0 - tPrev );\n\t\tthis._weightNext = halfDt / ( tNext - t1 );\n\t\tthis._offsetPrev = iPrev * stride;\n\t\tthis._offsetNext = iNext * stride;\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\to1 = i1 * stride,\t\to0 = o1 - stride,\n\t\t\toP = this._offsetPrev, \toN = this._offsetNext,\n\t\t\twP = this._weightPrev,\twN = this._weightNext,\n\n\t\t\tp = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tpp = p * p,\n\t\t\tppp = pp * p;\n\n\t\t// evaluate polynomials\n\n\t\tconst sP = - wP * ppp + 2 * wP * pp - wP * p;\n\t\tconst s0 = ( 1 + wP ) * ppp + ( - 1.5 - 2 * wP ) * pp + ( - 0.5 + wP ) * p + 1;\n\t\tconst s1 = ( - 1 - wN ) * ppp + ( 1.5 + wN ) * pp + 0.5 * p;\n\t\tconst sN = wN * ppp - wN * pp;\n\n\t\t// combine data linearly\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tsP * values[ oP + i ] +\n\t\t\t\t\ts0 * values[ o0 + i ] +\n\t\t\t\t\ts1 * values[ o1 + i ] +\n\t\t\t\t\tsN * values[ oN + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\nclass LinearInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\toffset1 = i1 * stride,\n\t\t\toffset0 = offset1 - stride,\n\n\t\t\tweight1 = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tweight0 = 1 - weight1;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tvalues[ offset0 + i ] * weight0 +\n\t\t\t\t\tvalues[ offset1 + i ] * weight1;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\n/**\n *\n * Interpolant that evaluates to the sample value at the position preceding\n * the parameter.\n */\n\nclass DiscreteInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1 /*, t0, t, t1 */ ) {\n\n\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t}\n\n}\n\nclass KeyframeTrack {\n\n\tconstructor( name, times, values, interpolation ) {\n\n\t\tif ( name === undefined ) throw new Error( 'THREE.KeyframeTrack: track name is undefined' );\n\t\tif ( times === undefined || times.length === 0 ) throw new Error( 'THREE.KeyframeTrack: no keyframes in track named ' + name );\n\n\t\tthis.name = name;\n\n\t\tthis.times = AnimationUtils.convertArray( times, this.TimeBufferType );\n\t\tthis.values = AnimationUtils.convertArray( values, this.ValueBufferType );\n\n\t\tthis.setInterpolation( interpolation || this.DefaultInterpolation );\n\n\t}\n\n\t// Serialization (in static context, because of constructor invocation\n\t// and automatic invocation of .toJSON):\n\n\tstatic toJSON( track ) {\n\n\t\tconst trackType = track.constructor;\n\n\t\tlet json;\n\n\t\t// derived classes can define a static toJSON method\n\t\tif ( trackType.toJSON !== this.toJSON ) {\n\n\t\t\tjson = trackType.toJSON( track );\n\n\t\t} else {\n\n\t\t\t// by default, we assume the data can be serialized as-is\n\t\t\tjson = {\n\n\t\t\t\t'name': track.name,\n\t\t\t\t'times': AnimationUtils.convertArray( track.times, Array ),\n\t\t\t\t'values': AnimationUtils.convertArray( track.values, Array )\n\n\t\t\t};\n\n\t\t\tconst interpolation = track.getInterpolation();\n\n\t\t\tif ( interpolation !== track.DefaultInterpolation ) {\n\n\t\t\t\tjson.interpolation = interpolation;\n\n\t\t\t}\n\n\t\t}\n\n\t\tjson.type = track.ValueTypeName; // mandatory\n\n\t\treturn json;\n\n\t}\n\n\tInterpolantFactoryMethodDiscrete( result ) {\n\n\t\treturn new DiscreteInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tInterpolantFactoryMethodLinear( result ) {\n\n\t\treturn new LinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tInterpolantFactoryMethodSmooth( result ) {\n\n\t\treturn new CubicInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tsetInterpolation( interpolation ) {\n\n\t\tlet factoryMethod;\n\n\t\tswitch ( interpolation ) {\n\n\t\t\tcase InterpolateDiscrete:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateLinear:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateSmooth:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( factoryMethod === undefined ) {\n\n\t\t\tconst message = 'unsupported interpolation for ' +\n\t\t\t\tthis.ValueTypeName + ' keyframe track named ' + this.name;\n\n\t\t\tif ( this.createInterpolant === undefined ) {\n\n\t\t\t\t// fall back to default, unless the default itself is messed up\n\t\t\t\tif ( interpolation !== this.DefaultInterpolation ) {\n\n\t\t\t\t\tthis.setInterpolation( this.DefaultInterpolation );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( message ); // fatal, in this case\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconsole.warn( 'THREE.KeyframeTrack:', message );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tthis.createInterpolant = factoryMethod;\n\n\t\treturn this;\n\n\t}\n\n\tgetInterpolation() {\n\n\t\tswitch ( this.createInterpolant ) {\n\n\t\t\tcase this.InterpolantFactoryMethodDiscrete:\n\n\t\t\t\treturn InterpolateDiscrete;\n\n\t\t\tcase this.InterpolantFactoryMethodLinear:\n\n\t\t\t\treturn InterpolateLinear;\n\n\t\t\tcase this.InterpolantFactoryMethodSmooth:\n\n\t\t\t\treturn InterpolateSmooth;\n\n\t\t}\n\n\t}\n\n\tgetValueSize() {\n\n\t\treturn this.values.length / this.times.length;\n\n\t}\n\n\t// move all keyframes either forwards or backwards in time\n\tshift( timeOffset ) {\n\n\t\tif ( timeOffset !== 0.0 ) {\n\n\t\t\tconst times = this.times;\n\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] += timeOffset;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n\tscale( timeScale ) {\n\n\t\tif ( timeScale !== 1.0 ) {\n\n\t\t\tconst times = this.times;\n\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] *= timeScale;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n\ttrim( startTime, endTime ) {\n\n\t\tconst times = this.times,\n\t\t\tnKeys = times.length;\n\n\t\tlet from = 0,\n\t\t\tto = nKeys - 1;\n\n\t\twhile ( from !== nKeys && times[ from ] < startTime ) {\n\n\t\t\t++ from;\n\n\t\t}\n\n\t\twhile ( to !== - 1 && times[ to ] > endTime ) {\n\n\t\t\t-- to;\n\n\t\t}\n\n\t\t++ to; // inclusive -> exclusive bound\n\n\t\tif ( from !== 0 || to !== nKeys ) {\n\n\t\t\t// empty tracks are forbidden, so keep at least one keyframe\n\t\t\tif ( from >= to ) {\n\n\t\t\t\tto = Math.max( to, 1 );\n\t\t\t\tfrom = to - 1;\n\n\t\t\t}\n\n\t\t\tconst stride = this.getValueSize();\n\t\t\tthis.times = AnimationUtils.arraySlice( times, from, to );\n\t\t\tthis.values = AnimationUtils.arraySlice( this.values, from * stride, to * stride );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n\tvalidate() {\n\n\t\tlet valid = true;\n\n\t\tconst valueSize = this.getValueSize();\n\t\tif ( valueSize - Math.floor( valueSize ) !== 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Invalid value size in track.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tconst times = this.times,\n\t\t\tvalues = this.values,\n\n\t\t\tnKeys = times.length;\n\n\t\tif ( nKeys === 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Track is empty.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tlet prevTime = null;\n\n\t\tfor ( let i = 0; i !== nKeys; i ++ ) {\n\n\t\t\tconst currTime = times[ i ];\n\n\t\t\tif ( typeof currTime === 'number' && isNaN( currTime ) ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Time is not a valid number.', this, i, currTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( prevTime !== null && prevTime > currTime ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Out of order keys.', this, i, currTime, prevTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tprevTime = currTime;\n\n\t\t}\n\n\t\tif ( values !== undefined ) {\n\n\t\t\tif ( AnimationUtils.isTypedArray( values ) ) {\n\n\t\t\t\tfor ( let i = 0, n = values.length; i !== n; ++ i ) {\n\n\t\t\t\t\tconst value = values[ i ];\n\n\t\t\t\t\tif ( isNaN( value ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Value is not a valid number.', this, i, value );\n\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn valid;\n\n\t}\n\n\t// removes equivalent sequential keys as common in morph target sequences\n\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n\toptimize() {\n\n\t\t// times or values may be shared with other tracks, so overwriting is unsafe\n\t\tconst times = AnimationUtils.arraySlice( this.times ),\n\t\t\tvalues = AnimationUtils.arraySlice( this.values ),\n\t\t\tstride = this.getValueSize(),\n\n\t\t\tsmoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n\n\t\t\tlastIndex = times.length - 1;\n\n\t\tlet writeIndex = 1;\n\n\t\tfor ( let i = 1; i < lastIndex; ++ i ) {\n\n\t\t\tlet keep = false;\n\n\t\t\tconst time = times[ i ];\n\t\t\tconst timeNext = times[ i + 1 ];\n\n\t\t\t// remove adjacent keyframes scheduled at the same time\n\n\t\t\tif ( time !== timeNext && ( i !== 1 || time !== times[ 0 ] ) ) {\n\n\t\t\t\tif ( ! smoothInterpolation ) {\n\n\t\t\t\t\t// remove unnecessary keyframes same as their neighbors\n\n\t\t\t\t\tconst offset = i * stride,\n\t\t\t\t\t\toffsetP = offset - stride,\n\t\t\t\t\t\toffsetN = offset + stride;\n\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tconst value = values[ offset + j ];\n\n\t\t\t\t\t\tif ( value !== values[ offsetP + j ] ||\n\t\t\t\t\t\t\tvalue !== values[ offsetN + j ] ) {\n\n\t\t\t\t\t\t\tkeep = true;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tkeep = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// in-place compaction\n\n\t\t\tif ( keep ) {\n\n\t\t\t\tif ( i !== writeIndex ) {\n\n\t\t\t\t\ttimes[ writeIndex ] = times[ i ];\n\n\t\t\t\t\tconst readOffset = i * stride,\n\t\t\t\t\t\twriteOffset = writeIndex * stride;\n\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t++ writeIndex;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// flush last keyframe (compaction looks ahead)\n\n\t\tif ( lastIndex > 0 ) {\n\n\t\t\ttimes[ writeIndex ] = times[ lastIndex ];\n\n\t\t\tfor ( let readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++ j ) {\n\n\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t}\n\n\t\t\t++ writeIndex;\n\n\t\t}\n\n\t\tif ( writeIndex !== times.length ) {\n\n\t\t\tthis.times = AnimationUtils.arraySlice( times, 0, writeIndex );\n\t\t\tthis.values = AnimationUtils.arraySlice( values, 0, writeIndex * stride );\n\n\t\t} else {\n\n\t\t\tthis.times = times;\n\t\t\tthis.values = values;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\tconst times = AnimationUtils.arraySlice( this.times, 0 );\n\t\tconst values = AnimationUtils.arraySlice( this.values, 0 );\n\n\t\tconst TypedKeyframeTrack = this.constructor;\n\t\tconst track = new TypedKeyframeTrack( this.name, times, values );\n\n\t\t// Interpolant argument to constructor is not saved, so copy the factory method directly.\n\t\ttrack.createInterpolant = this.createInterpolant;\n\n\t\treturn track;\n\n\t}\n\n}\n\nKeyframeTrack.prototype.TimeBufferType = Float32Array;\nKeyframeTrack.prototype.ValueBufferType = Float32Array;\nKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\n\n/**\n * A Track of Boolean keyframe values.\n */\nclass BooleanKeyframeTrack extends KeyframeTrack {}\n\nBooleanKeyframeTrack.prototype.ValueTypeName = 'bool';\nBooleanKeyframeTrack.prototype.ValueBufferType = Array;\nBooleanKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track of keyframe values that represent color.\n */\nclass ColorKeyframeTrack extends KeyframeTrack {}\n\nColorKeyframeTrack.prototype.ValueTypeName = 'color';\n\n/**\n * A Track of numeric keyframe values.\n */\nclass NumberKeyframeTrack extends KeyframeTrack {}\n\nNumberKeyframeTrack.prototype.ValueTypeName = 'number';\n\n/**\n * Spherical linear unit quaternion interpolant.\n */\n\nclass QuaternionLinearInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\talpha = ( t - t0 ) / ( t1 - t0 );\n\n\t\tlet offset = i1 * stride;\n\n\t\tfor ( let end = offset + stride; offset !== end; offset += 4 ) {\n\n\t\t\tQuaternion.slerpFlat( result, 0, values, offset - stride, values, offset, alpha );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\n/**\n * A Track of quaternion keyframe values.\n */\nclass QuaternionKeyframeTrack extends KeyframeTrack {\n\n\tInterpolantFactoryMethodLinear( result ) {\n\n\t\treturn new QuaternionLinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n}\n\nQuaternionKeyframeTrack.prototype.ValueTypeName = 'quaternion';\n// ValueBufferType is inherited\nQuaternionKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\nQuaternionKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track that interpolates Strings\n */\nclass StringKeyframeTrack extends KeyframeTrack {}\n\nStringKeyframeTrack.prototype.ValueTypeName = 'string';\nStringKeyframeTrack.prototype.ValueBufferType = Array;\nStringKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track of vectored keyframe values.\n */\nclass VectorKeyframeTrack extends KeyframeTrack {}\n\nVectorKeyframeTrack.prototype.ValueTypeName = 'vector';\n\nclass AnimationClip {\n\n\tconstructor( name, duration = - 1, tracks, blendMode = NormalAnimationBlendMode ) {\n\n\t\tthis.name = name;\n\t\tthis.tracks = tracks;\n\t\tthis.duration = duration;\n\t\tthis.blendMode = blendMode;\n\n\t\tthis.uuid = generateUUID();\n\n\t\t// this means it should figure out its duration by scanning the tracks\n\t\tif ( this.duration < 0 ) {\n\n\t\t\tthis.resetDuration();\n\n\t\t}\n\n\t}\n\n\n\tstatic parse( json ) {\n\n\t\tconst tracks = [],\n\t\t\tjsonTracks = json.tracks,\n\t\t\tframeTime = 1.0 / ( json.fps || 1.0 );\n\n\t\tfor ( let i = 0, n = jsonTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( parseKeyframeTrack( jsonTracks[ i ] ).scale( frameTime ) );\n\n\t\t}\n\n\t\tconst clip = new this( json.name, json.duration, tracks, json.blendMode );\n\t\tclip.uuid = json.uuid;\n\n\t\treturn clip;\n\n\t}\n\n\tstatic toJSON( clip ) {\n\n\t\tconst tracks = [],\n\t\t\tclipTracks = clip.tracks;\n\n\t\tconst json = {\n\n\t\t\t'name': clip.name,\n\t\t\t'duration': clip.duration,\n\t\t\t'tracks': tracks,\n\t\t\t'uuid': clip.uuid,\n\t\t\t'blendMode': clip.blendMode\n\n\t\t};\n\n\t\tfor ( let i = 0, n = clipTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( KeyframeTrack.toJSON( clipTracks[ i ] ) );\n\n\t\t}\n\n\t\treturn json;\n\n\t}\n\n\tstatic CreateFromMorphTargetSequence( name, morphTargetSequence, fps, noLoop ) {\n\n\t\tconst numMorphTargets = morphTargetSequence.length;\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < numMorphTargets; i ++ ) {\n\n\t\t\tlet times = [];\n\t\t\tlet values = [];\n\n\t\t\ttimes.push(\n\t\t\t\t( i + numMorphTargets - 1 ) % numMorphTargets,\n\t\t\t\ti,\n\t\t\t\t( i + 1 ) % numMorphTargets );\n\n\t\t\tvalues.push( 0, 1, 0 );\n\n\t\t\tconst order = AnimationUtils.getKeyframeOrder( times );\n\t\t\ttimes = AnimationUtils.sortedArray( times, 1, order );\n\t\t\tvalues = AnimationUtils.sortedArray( values, 1, order );\n\n\t\t\t// if there is a key at the first frame, duplicate it as the\n\t\t\t// last frame as well for perfect loop.\n\t\t\tif ( ! noLoop && times[ 0 ] === 0 ) {\n\n\t\t\t\ttimes.push( numMorphTargets );\n\t\t\t\tvalues.push( values[ 0 ] );\n\n\t\t\t}\n\n\t\t\ttracks.push(\n\t\t\t\tnew NumberKeyframeTrack(\n\t\t\t\t\t'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\n\t\t\t\t\ttimes, values\n\t\t\t\t).scale( 1.0 / fps ) );\n\n\t\t}\n\n\t\treturn new this( name, - 1, tracks );\n\n\t}\n\n\tstatic findByName( objectOrClipArray, name ) {\n\n\t\tlet clipArray = objectOrClipArray;\n\n\t\tif ( ! Array.isArray( objectOrClipArray ) ) {\n\n\t\t\tconst o = objectOrClipArray;\n\t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\n\n\t\t}\n\n\t\tfor ( let i = 0; i < clipArray.length; i ++ ) {\n\n\t\t\tif ( clipArray[ i ].name === name ) {\n\n\t\t\t\treturn clipArray[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\tstatic CreateClipsFromMorphTargetSequences( morphTargets, fps, noLoop ) {\n\n\t\tconst animationToMorphTargets = {};\n\n\t\t// tested with https://regex101.com/ on trick sequences\n\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\t\tconst pattern = /^([\\w-]*?)([\\d]+)$/;\n\n\t\t// sort morph target names into animation groups based\n\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\n\t\tfor ( let i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\tconst morphTarget = morphTargets[ i ];\n\t\t\tconst parts = morphTarget.name.match( pattern );\n\n\t\t\tif ( parts && parts.length > 1 ) {\n\n\t\t\t\tconst name = parts[ 1 ];\n\n\t\t\t\tlet animationMorphTargets = animationToMorphTargets[ name ];\n\n\t\t\t\tif ( ! animationMorphTargets ) {\n\n\t\t\t\t\tanimationToMorphTargets[ name ] = animationMorphTargets = [];\n\n\t\t\t\t}\n\n\t\t\t\tanimationMorphTargets.push( morphTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst clips = [];\n\n\t\tfor ( const name in animationToMorphTargets ) {\n\n\t\t\tclips.push( this.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );\n\n\t\t}\n\n\t\treturn clips;\n\n\t}\n\n\t// parse the animation.hierarchy format\n\tstatic parseAnimation( animation, bones ) {\n\n\t\tif ( ! animation ) {\n\n\t\t\tconsole.error( 'THREE.AnimationClip: No animation in JSONLoader data.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst addNonemptyTrack = function ( trackType, trackName, animationKeys, propertyName, destTracks ) {\n\n\t\t\t// only return track if there are actually keys.\n\t\t\tif ( animationKeys.length !== 0 ) {\n\n\t\t\t\tconst times = [];\n\t\t\t\tconst values = [];\n\n\t\t\t\tAnimationUtils.flattenJSON( animationKeys, times, values, propertyName );\n\n\t\t\t\t// empty keys are filtered out, so check again\n\t\t\t\tif ( times.length !== 0 ) {\n\n\t\t\t\t\tdestTracks.push( new trackType( trackName, times, values ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tconst tracks = [];\n\n\t\tconst clipName = animation.name || 'default';\n\t\tconst fps = animation.fps || 30;\n\t\tconst blendMode = animation.blendMode;\n\n\t\t// automatic length determination in AnimationClip.\n\t\tlet duration = animation.length || - 1;\n\n\t\tconst hierarchyTracks = animation.hierarchy || [];\n\n\t\tfor ( let h = 0; h < hierarchyTracks.length; h ++ ) {\n\n\t\t\tconst animationKeys = hierarchyTracks[ h ].keys;\n\n\t\t\t// skip empty tracks\n\t\t\tif ( ! animationKeys || animationKeys.length === 0 ) continue;\n\n\t\t\t// process morph targets\n\t\t\tif ( animationKeys[ 0 ].morphTargets ) {\n\n\t\t\t\t// figure out all morph targets used in this track\n\t\t\t\tconst morphTargetNames = {};\n\n\t\t\t\tlet k;\n\n\t\t\t\tfor ( k = 0; k < animationKeys.length; k ++ ) {\n\n\t\t\t\t\tif ( animationKeys[ k ].morphTargets ) {\n\n\t\t\t\t\t\tfor ( let m = 0; m < animationKeys[ k ].morphTargets.length; m ++ ) {\n\n\t\t\t\t\t\t\tmorphTargetNames[ animationKeys[ k ].morphTargets[ m ] ] = - 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// create a track for each morph target with all zero\n\t\t\t\t// morphTargetInfluences except for the keys in which\n\t\t\t\t// the morphTarget is named.\n\t\t\t\tfor ( const morphTargetName in morphTargetNames ) {\n\n\t\t\t\t\tconst times = [];\n\t\t\t\t\tconst values = [];\n\n\t\t\t\t\tfor ( let m = 0; m !== animationKeys[ k ].morphTargets.length; ++ m ) {\n\n\t\t\t\t\t\tconst animationKey = animationKeys[ k ];\n\n\t\t\t\t\t\ttimes.push( animationKey.time );\n\t\t\t\t\t\tvalues.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttracks.push( new NumberKeyframeTrack( '.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\n\n\t\t\t\t}\n\n\t\t\t\tduration = morphTargetNames.length * fps;\n\n\t\t\t} else {\n\n\t\t\t\t// ...assume skeletal animation\n\n\t\t\t\tconst boneName = '.bones[' + bones[ h ].name + ']';\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.position',\n\t\t\t\t\tanimationKeys, 'pos', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tQuaternionKeyframeTrack, boneName + '.quaternion',\n\t\t\t\t\tanimationKeys, 'rot', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.scale',\n\t\t\t\t\tanimationKeys, 'scl', tracks );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tracks.length === 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst clip = new this( clipName, duration, tracks, blendMode );\n\n\t\treturn clip;\n\n\t}\n\n\tresetDuration() {\n\n\t\tconst tracks = this.tracks;\n\t\tlet duration = 0;\n\n\t\tfor ( let i = 0, n = tracks.length; i !== n; ++ i ) {\n\n\t\t\tconst track = this.tracks[ i ];\n\n\t\t\tduration = Math.max( duration, track.times[ track.times.length - 1 ] );\n\n\t\t}\n\n\t\tthis.duration = duration;\n\n\t\treturn this;\n\n\t}\n\n\ttrim() {\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].trim( 0, this.duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tvalidate() {\n\n\t\tlet valid = true;\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tvalid = valid && this.tracks[ i ].validate();\n\n\t\t}\n\n\t\treturn valid;\n\n\t}\n\n\toptimize() {\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].optimize();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\ttracks.push( this.tracks[ i ].clone() );\n\n\t\t}\n\n\t\treturn new this.constructor( this.name, this.duration, tracks, this.blendMode );\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.constructor.toJSON( this );\n\n\t}\n\n}\n\nfunction getTrackTypeForValueTypeName( typeName ) {\n\n\tswitch ( typeName.toLowerCase() ) {\n\n\t\tcase 'scalar':\n\t\tcase 'double':\n\t\tcase 'float':\n\t\tcase 'number':\n\t\tcase 'integer':\n\n\t\t\treturn NumberKeyframeTrack;\n\n\t\tcase 'vector':\n\t\tcase 'vector2':\n\t\tcase 'vector3':\n\t\tcase 'vector4':\n\n\t\t\treturn VectorKeyframeTrack;\n\n\t\tcase 'color':\n\n\t\t\treturn ColorKeyframeTrack;\n\n\t\tcase 'quaternion':\n\n\t\t\treturn QuaternionKeyframeTrack;\n\n\t\tcase 'bool':\n\t\tcase 'boolean':\n\n\t\t\treturn BooleanKeyframeTrack;\n\n\t\tcase 'string':\n\n\t\t\treturn StringKeyframeTrack;\n\n\t}\n\n\tthrow new Error( 'THREE.KeyframeTrack: Unsupported typeName: ' + typeName );\n\n}\n\nfunction parseKeyframeTrack( json ) {\n\n\tif ( json.type === undefined ) {\n\n\t\tthrow new Error( 'THREE.KeyframeTrack: track type undefined, can not parse' );\n\n\t}\n\n\tconst trackType = getTrackTypeForValueTypeName( json.type );\n\n\tif ( json.times === undefined ) {\n\n\t\tconst times = [], values = [];\n\n\t\tAnimationUtils.flattenJSON( json.keys, times, values, 'value' );\n\n\t\tjson.times = times;\n\t\tjson.values = values;\n\n\t}\n\n\t// derived classes can define a static parse method\n\tif ( trackType.parse !== undefined ) {\n\n\t\treturn trackType.parse( json );\n\n\t} else {\n\n\t\t// by default, we assume a constructor compatible with the base\n\t\treturn new trackType( json.name, json.times, json.values, json.interpolation );\n\n\t}\n\n}\n\nconst Cache = {\n\n\tenabled: false,\n\n\tfiles: {},\n\n\tadd: function ( key, file ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\n\n\t\tthis.files[ key ] = file;\n\n\t},\n\n\tget: function ( key ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\n\n\t\treturn this.files[ key ];\n\n\t},\n\n\tremove: function ( key ) {\n\n\t\tdelete this.files[ key ];\n\n\t},\n\n\tclear: function () {\n\n\t\tthis.files = {};\n\n\t}\n\n};\n\nclass LoadingManager {\n\n\tconstructor( onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tlet isLoading = false;\n\t\tlet itemsLoaded = 0;\n\t\tlet itemsTotal = 0;\n\t\tlet urlModifier = undefined;\n\t\tconst handlers = [];\n\n\t\t// Refer to #5689 for the reason why we don't set .onStart\n\t\t// in the constructor\n\n\t\tthis.onStart = undefined;\n\t\tthis.onLoad = onLoad;\n\t\tthis.onProgress = onProgress;\n\t\tthis.onError = onError;\n\n\t\tthis.itemStart = function ( url ) {\n\n\t\t\titemsTotal ++;\n\n\t\t\tif ( isLoading === false ) {\n\n\t\t\t\tif ( scope.onStart !== undefined ) {\n\n\t\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tisLoading = true;\n\n\t\t};\n\n\t\tthis.itemEnd = function ( url ) {\n\n\t\t\titemsLoaded ++;\n\n\t\t\tif ( scope.onProgress !== undefined ) {\n\n\t\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\n\n\t\t\t}\n\n\t\t\tif ( itemsLoaded === itemsTotal ) {\n\n\t\t\t\tisLoading = false;\n\n\t\t\t\tif ( scope.onLoad !== undefined ) {\n\n\t\t\t\t\tscope.onLoad();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.itemError = function ( url ) {\n\n\t\t\tif ( scope.onError !== undefined ) {\n\n\t\t\t\tscope.onError( url );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.resolveURL = function ( url ) {\n\n\t\t\tif ( urlModifier ) {\n\n\t\t\t\treturn urlModifier( url );\n\n\t\t\t}\n\n\t\t\treturn url;\n\n\t\t};\n\n\t\tthis.setURLModifier = function ( transform ) {\n\n\t\t\turlModifier = transform;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.addHandler = function ( regex, loader ) {\n\n\t\t\thandlers.push( regex, loader );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.removeHandler = function ( regex ) {\n\n\t\t\tconst index = handlers.indexOf( regex );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\thandlers.splice( index, 2 );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.getHandler = function ( file ) {\n\n\t\t\tfor ( let i = 0, l = handlers.length; i < l; i += 2 ) {\n\n\t\t\t\tconst regex = handlers[ i ];\n\t\t\t\tconst loader = handlers[ i + 1 ];\n\n\t\t\t\tif ( regex.global ) regex.lastIndex = 0; // see #17920\n\n\t\t\t\tif ( regex.test( file ) ) {\n\n\t\t\t\t\treturn loader;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t};\n\n\t}\n\n}\n\nconst DefaultLoadingManager = new LoadingManager();\n\nclass Loader {\n\n\tconstructor( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t\tthis.crossOrigin = 'anonymous';\n\t\tthis.withCredentials = false;\n\t\tthis.path = '';\n\t\tthis.resourcePath = '';\n\t\tthis.requestHeader = {};\n\n\t}\n\n\tload( /* url, onLoad, onProgress, onError */ ) {}\n\n\tloadAsync( url, onProgress ) {\n\n\t\tconst scope = this;\n\n\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\tscope.load( url, resolve, onProgress, reject );\n\n\t\t} );\n\n\t}\n\n\tparse( /* data */ ) {}\n\n\tsetCrossOrigin( crossOrigin ) {\n\n\t\tthis.crossOrigin = crossOrigin;\n\t\treturn this;\n\n\t}\n\n\tsetWithCredentials( value ) {\n\n\t\tthis.withCredentials = value;\n\t\treturn this;\n\n\t}\n\n\tsetPath( path ) {\n\n\t\tthis.path = path;\n\t\treturn this;\n\n\t}\n\n\tsetResourcePath( resourcePath ) {\n\n\t\tthis.resourcePath = resourcePath;\n\t\treturn this;\n\n\t}\n\n\tsetRequestHeader( requestHeader ) {\n\n\t\tthis.requestHeader = requestHeader;\n\t\treturn this;\n\n\t}\n\n}\n\nconst loading = {};\n\nclass FileLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tthis.manager.itemStart( url );\n\n\t\t\tsetTimeout( () => {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tthis.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\t// Check if request is duplicate\n\n\t\tif ( loading[ url ] !== undefined ) {\n\n\t\t\tloading[ url ].push( {\n\n\t\t\t\tonLoad: onLoad,\n\t\t\t\tonProgress: onProgress,\n\t\t\t\tonError: onError\n\n\t\t\t} );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// Initialise array for duplicate requests\n\t\tloading[ url ] = [];\n\n\t\tloading[ url ].push( {\n\t\t\tonLoad: onLoad,\n\t\t\tonProgress: onProgress,\n\t\t\tonError: onError,\n\t\t} );\n\n\t\t// create request\n\t\tconst req = new Request( url, {\n\t\t\theaders: new Headers( this.requestHeader ),\n\t\t\tcredentials: this.withCredentials ? 'include' : 'same-origin',\n\t\t\t// An abort controller could be added within a future PR\n\t\t} );\n\n\t\t// record states ( avoid data race )\n\t\tconst mimeType = this.mimeType;\n\t\tconst responseType = this.responseType;\n\n\t\t// start the fetch\n\t\tfetch( req )\n\t\t\t.then( response => {\n\n\t\t\t\tif ( response.status === 200 || response.status === 0 ) {\n\n\t\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\n\t\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\n\n\t\t\t\t\tif ( response.status === 0 ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.FileLoader: HTTP Status 0 received.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Workaround: Checking if response.body === undefined for Alipay browser #23548\n\n\t\t\t\t\tif ( typeof ReadableStream === 'undefined' || response.body === undefined || response.body.getReader === undefined ) {\n\n\t\t\t\t\t\treturn response;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst callbacks = loading[ url ];\n\t\t\t\t\tconst reader = response.body.getReader();\n\t\t\t\t\tconst contentLength = response.headers.get( 'Content-Length' );\n\t\t\t\t\tconst total = contentLength ? parseInt( contentLength ) : 0;\n\t\t\t\t\tconst lengthComputable = total !== 0;\n\t\t\t\t\tlet loaded = 0;\n\n\t\t\t\t\t// periodically read data into the new stream tracking while download progress\n\t\t\t\t\tconst stream = new ReadableStream( {\n\t\t\t\t\t\tstart( controller ) {\n\n\t\t\t\t\t\t\treadData();\n\n\t\t\t\t\t\t\tfunction readData() {\n\n\t\t\t\t\t\t\t\treader.read().then( ( { done, value } ) => {\n\n\t\t\t\t\t\t\t\t\tif ( done ) {\n\n\t\t\t\t\t\t\t\t\t\tcontroller.close();\n\n\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\tloaded += value.byteLength;\n\n\t\t\t\t\t\t\t\t\t\tconst event = new ProgressEvent( 'progress', { lengthComputable, loaded, total } );\n\t\t\t\t\t\t\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\t\t\t\t\t\t\tif ( callback.onProgress ) callback.onProgress( event );\n\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tcontroller.enqueue( value );\n\t\t\t\t\t\t\t\t\t\treadData();\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t\treturn new Response( stream );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow Error( `fetch for \"${response.url}\" responded with ${response.status}: ${response.statusText}` );\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.then( response => {\n\n\t\t\t\tswitch ( responseType ) {\n\n\t\t\t\t\tcase 'arraybuffer':\n\n\t\t\t\t\t\treturn response.arrayBuffer();\n\n\t\t\t\t\tcase 'blob':\n\n\t\t\t\t\t\treturn response.blob();\n\n\t\t\t\t\tcase 'document':\n\n\t\t\t\t\t\treturn response.text()\n\t\t\t\t\t\t\t.then( text => {\n\n\t\t\t\t\t\t\t\tconst parser = new DOMParser();\n\t\t\t\t\t\t\t\treturn parser.parseFromString( text, mimeType );\n\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\tcase 'json':\n\n\t\t\t\t\t\treturn response.json();\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( mimeType === undefined ) {\n\n\t\t\t\t\t\t\treturn response.text();\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// sniff encoding\n\t\t\t\t\t\t\tconst re = /charset=\"?([^;\"\\s]*)\"?/i;\n\t\t\t\t\t\t\tconst exec = re.exec( mimeType );\n\t\t\t\t\t\t\tconst label = exec && exec[ 1 ] ? exec[ 1 ].toLowerCase() : undefined;\n\t\t\t\t\t\t\tconst decoder = new TextDecoder( label );\n\t\t\t\t\t\t\treturn response.arrayBuffer().then( ab => decoder.decode( ab ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.then( data => {\n\n\t\t\t\t// Add to cache only on HTTP success, so that we do not cache\n\t\t\t\t// error response bodies as proper responses to requests.\n\t\t\t\tCache.add( url, data );\n\n\t\t\t\tconst callbacks = loading[ url ];\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onLoad ) callback.onLoad( data );\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.catch( err => {\n\n\t\t\t\t// Abort errors and other errors are handled the same\n\n\t\t\t\tconst callbacks = loading[ url ];\n\n\t\t\t\tif ( callbacks === undefined ) {\n\n\t\t\t\t\t// When onLoad was called and url was deleted in `loading`\n\t\t\t\t\tthis.manager.itemError( url );\n\t\t\t\t\tthrow err;\n\n\t\t\t\t}\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onError ) callback.onError( err );\n\n\t\t\t\t}\n\n\t\t\t\tthis.manager.itemError( url );\n\n\t\t\t} )\n\t\t\t.finally( () => {\n\n\t\t\t\tthis.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\tthis.manager.itemStart( url );\n\n\t}\n\n\tsetResponseType( value ) {\n\n\t\tthis.responseType = value;\n\t\treturn this;\n\n\t}\n\n\tsetMimeType( value ) {\n\n\t\tthis.mimeType = value;\n\t\treturn this;\n\n\t}\n\n}\n\nclass AnimationLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst animations = [];\n\n\t\tfor ( let i = 0; i < json.length; i ++ ) {\n\n\t\t\tconst clip = AnimationClip.parse( json[ i ] );\n\n\t\t\tanimations.push( clip );\n\n\t\t}\n\n\t\treturn animations;\n\n\t}\n\n}\n\n/**\n * Abstract Base class to block based textures loader (dds, pvr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nclass CompressedTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst images = [];\n\n\t\tconst texture = new CompressedTexture();\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\n\t\tlet loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( url[ i ], function ( buffer ) {\n\n\t\t\t\tconst texDatas = scope.parse( buffer, true );\n\n\t\t\t\timages[ i ] = {\n\t\t\t\t\twidth: texDatas.width,\n\t\t\t\t\theight: texDatas.height,\n\t\t\t\t\tformat: texDatas.format,\n\t\t\t\t\tmipmaps: texDatas.mipmaps\n\t\t\t\t};\n\n\t\t\t\tloaded += 1;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\tif ( texDatas.mipmapCount === 1 ) texture.minFilter = LinearFilter;\n\n\t\t\t\t\ttexture.image = images;\n\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\tif ( Array.isArray( url ) ) {\n\n\t\t\tfor ( let i = 0, il = url.length; i < il; ++ i ) {\n\n\t\t\t\tloadTexture( i );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// compressed cubemap texture stored in a single DDS file\n\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\tconst texDatas = scope.parse( buffer, true );\n\n\t\t\t\tif ( texDatas.isCubemap ) {\n\n\t\t\t\t\tconst faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n\t\t\t\t\tfor ( let f = 0; f < faces; f ++ ) {\n\n\t\t\t\t\t\timages[ f ] = { mipmaps: [] };\n\n\t\t\t\t\t\tfor ( let i = 0; i < texDatas.mipmapCount; i ++ ) {\n\n\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\n\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\n\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\n\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.image = images;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttexture.image.width = texDatas.width;\n\t\t\t\t\ttexture.image.height = texDatas.height;\n\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\n\n\t\t\t\t}\n\n\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\n\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t}\n\n\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass ImageLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tconst image = createElementNS( 'img' );\n\n\t\tfunction onImageLoad() {\n\n\t\t\tremoveEventListeners();\n\n\t\t\tCache.add( url, this );\n\n\t\t\tif ( onLoad ) onLoad( this );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction onImageError( event ) {\n\n\t\t\tremoveEventListeners();\n\n\t\t\tif ( onError ) onError( event );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction removeEventListeners() {\n\n\t\t\timage.removeEventListener( 'load', onImageLoad, false );\n\t\t\timage.removeEventListener( 'error', onImageError, false );\n\n\t\t}\n\n\t\timage.addEventListener( 'load', onImageLoad, false );\n\t\timage.addEventListener( 'error', onImageError, false );\n\n\t\tif ( url.slice( 0, 5 ) !== 'data:' ) {\n\n\t\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\n\n\t\t}\n\n\t\tscope.manager.itemStart( url );\n\n\t\timage.src = url;\n\n\t\treturn image;\n\n\t}\n\n}\n\nclass CubeTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( urls, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new CubeTexture();\n\n\t\tconst loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tlet loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( urls[ i ], function ( image ) {\n\n\t\t\t\ttexture.images[ i ] = image;\n\n\t\t\t\tloaded ++;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, undefined, onError );\n\n\t\t}\n\n\t\tfor ( let i = 0; i < urls.length; ++ i ) {\n\n\t\t\tloadTexture( i );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n}\n\n/**\n * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nclass DataTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst texture = new DataTexture();\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setPath( this.path );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\tconst texData = scope.parse( buffer );\n\n\t\t\tif ( ! texData ) return;\n\n\t\t\tif ( texData.image !== undefined ) {\n\n\t\t\t\ttexture.image = texData.image;\n\n\t\t\t} else if ( texData.data !== undefined ) {\n\n\t\t\t\ttexture.image.width = texData.width;\n\t\t\t\ttexture.image.height = texData.height;\n\t\t\t\ttexture.image.data = texData.data;\n\n\t\t\t}\n\n\t\t\ttexture.wrapS = texData.wrapS !== undefined ? texData.wrapS : ClampToEdgeWrapping;\n\t\t\ttexture.wrapT = texData.wrapT !== undefined ? texData.wrapT : ClampToEdgeWrapping;\n\n\t\t\ttexture.magFilter = texData.magFilter !== undefined ? texData.magFilter : LinearFilter;\n\t\t\ttexture.minFilter = texData.minFilter !== undefined ? texData.minFilter : LinearFilter;\n\n\t\t\ttexture.anisotropy = texData.anisotropy !== undefined ? texData.anisotropy : 1;\n\n\t\t\tif ( texData.encoding !== undefined ) {\n\n\t\t\t\ttexture.encoding = texData.encoding;\n\n\t\t\t}\n\n\t\t\tif ( texData.flipY !== undefined ) {\n\n\t\t\t\ttexture.flipY = texData.flipY;\n\n\t\t\t}\n\n\t\t\tif ( texData.format !== undefined ) {\n\n\t\t\t\ttexture.format = texData.format;\n\n\t\t\t}\n\n\t\t\tif ( texData.type !== undefined ) {\n\n\t\t\t\ttexture.type = texData.type;\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmaps !== undefined ) {\n\n\t\t\t\ttexture.mipmaps = texData.mipmaps;\n\t\t\t\ttexture.minFilter = LinearMipmapLinearFilter; // presumably...\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmapCount === 1 ) {\n\n\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t}\n\n\t\t\tif ( texData.generateMipmaps !== undefined ) {\n\n\t\t\t\ttexture.generateMipmaps = texData.generateMipmaps;\n\n\t\t\t}\n\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad ) onLoad( texture, texData );\n\n\t\t}, onProgress, onError );\n\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass TextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new Texture();\n\n\t\tconst loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tloader.load( url, function ( image ) {\n\n\t\t\ttexture.image = image;\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad !== undefined ) {\n\n\t\t\t\tonLoad( texture );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass Light extends Object3D {\n\n\tconstructor( color, intensity = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Light';\n\n\t\tthis.color = new Color( color );\n\t\tthis.intensity = intensity;\n\n\t}\n\n\tdispose() {\n\n\t\t// Empty here in base class; some subclasses override.\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.intensity = source.intensity;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.color = this.color.getHex();\n\t\tdata.object.intensity = this.intensity;\n\n\t\tif ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\n\n\t\tif ( this.distance !== undefined ) data.object.distance = this.distance;\n\t\tif ( this.angle !== undefined ) data.object.angle = this.angle;\n\t\tif ( this.decay !== undefined ) data.object.decay = this.decay;\n\t\tif ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\n\n\t\tif ( this.shadow !== undefined ) data.object.shadow = this.shadow.toJSON();\n\n\t\treturn data;\n\n\t}\n\n}\n\nLight.prototype.isLight = true;\n\nclass HemisphereLight extends Light {\n\n\tconstructor( skyColor, groundColor, intensity ) {\n\n\t\tsuper( skyColor, intensity );\n\n\t\tthis.type = 'HemisphereLight';\n\n\t\tthis.position.copy( Object3D.DefaultUp );\n\t\tthis.updateMatrix();\n\n\t\tthis.groundColor = new Color( groundColor );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.groundColor.copy( source.groundColor );\n\n\t\treturn this;\n\n\t}\n\n}\n\nHemisphereLight.prototype.isHemisphereLight = true;\n\nconst _projScreenMatrix$1 = /*@__PURE__*/ new Matrix4();\nconst _lightPositionWorld$1 = /*@__PURE__*/ new Vector3();\nconst _lookTarget$1 = /*@__PURE__*/ new Vector3();\n\nclass LightShadow {\n\n\tconstructor( camera ) {\n\n\t\tthis.camera = camera;\n\n\t\tthis.bias = 0;\n\t\tthis.normalBias = 0;\n\t\tthis.radius = 1;\n\t\tthis.blurSamples = 8;\n\n\t\tthis.mapSize = new Vector2( 512, 512 );\n\n\t\tthis.map = null;\n\t\tthis.mapPass = null;\n\t\tthis.matrix = new Matrix4();\n\n\t\tthis.autoUpdate = true;\n\t\tthis.needsUpdate = false;\n\n\t\tthis._frustum = new Frustum();\n\t\tthis._frameExtents = new Vector2( 1, 1 );\n\n\t\tthis._viewportCount = 1;\n\n\t\tthis._viewports = [\n\n\t\t\tnew Vector4( 0, 0, 1, 1 )\n\n\t\t];\n\n\t}\n\n\tgetViewportCount() {\n\n\t\treturn this._viewportCount;\n\n\t}\n\n\tgetFrustum() {\n\n\t\treturn this._frustum;\n\n\t}\n\n\tupdateMatrices( light ) {\n\n\t\tconst shadowCamera = this.camera;\n\t\tconst shadowMatrix = this.matrix;\n\n\t\t_lightPositionWorld$1.setFromMatrixPosition( light.matrixWorld );\n\t\tshadowCamera.position.copy( _lightPositionWorld$1 );\n\n\t\t_lookTarget$1.setFromMatrixPosition( light.target.matrixWorld );\n\t\tshadowCamera.lookAt( _lookTarget$1 );\n\t\tshadowCamera.updateMatrixWorld();\n\n\t\t_projScreenMatrix$1.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix$1 );\n\n\t\tshadowMatrix.set(\n\t\t\t0.5, 0.0, 0.0, 0.5,\n\t\t\t0.0, 0.5, 0.0, 0.5,\n\t\t\t0.0, 0.0, 0.5, 0.5,\n\t\t\t0.0, 0.0, 0.0, 1.0\n\t\t);\n\n\t\tshadowMatrix.multiply( shadowCamera.projectionMatrix );\n\t\tshadowMatrix.multiply( shadowCamera.matrixWorldInverse );\n\n\t}\n\n\tgetViewport( viewportIndex ) {\n\n\t\treturn this._viewports[ viewportIndex ];\n\n\t}\n\n\tgetFrameExtents() {\n\n\t\treturn this._frameExtents;\n\n\t}\n\n\tdispose() {\n\n\t\tif ( this.map ) {\n\n\t\t\tthis.map.dispose();\n\n\t\t}\n\n\t\tif ( this.mapPass ) {\n\n\t\t\tthis.mapPass.dispose();\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.camera = source.camera.clone();\n\n\t\tthis.bias = source.bias;\n\t\tthis.radius = source.radius;\n\n\t\tthis.mapSize.copy( source.mapSize );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst object = {};\n\n\t\tif ( this.bias !== 0 ) object.bias = this.bias;\n\t\tif ( this.normalBias !== 0 ) object.normalBias = this.normalBias;\n\t\tif ( this.radius !== 1 ) object.radius = this.radius;\n\t\tif ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) object.mapSize = this.mapSize.toArray();\n\n\t\tobject.camera = this.camera.toJSON( false ).object;\n\t\tdelete object.camera.matrix;\n\n\t\treturn object;\n\n\t}\n\n}\n\nclass SpotLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new PerspectiveCamera( 50, 1, 0.5, 500 ) );\n\n\t\tthis.focus = 1;\n\n\t}\n\n\tupdateMatrices( light ) {\n\n\t\tconst camera = this.camera;\n\n\t\tconst fov = RAD2DEG * 2 * light.angle * this.focus;\n\t\tconst aspect = this.mapSize.width / this.mapSize.height;\n\t\tconst far = light.distance || camera.far;\n\n\t\tif ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\n\n\t\t\tcamera.fov = fov;\n\t\t\tcamera.aspect = aspect;\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\tsuper.updateMatrices( light );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.focus = source.focus;\n\n\t\treturn this;\n\n\t}\n\n}\n\nSpotLightShadow.prototype.isSpotLightShadow = true;\n\nclass SpotLight extends Light {\n\n\tconstructor( color, intensity, distance = 0, angle = Math.PI / 3, penumbra = 0, decay = 1 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.type = 'SpotLight';\n\n\t\tthis.position.copy( Object3D.DefaultUp );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.distance = distance;\n\t\tthis.angle = angle;\n\t\tthis.penumbra = penumbra;\n\t\tthis.decay = decay; // for physically correct lights, should be 2.\n\n\t\tthis.shadow = new SpotLightShadow();\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in candela)\n\t\t// by convention for a spotlight, luminous power (lm) = π * luminous intensity (cd)\n\t\treturn this.intensity * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in candela) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / Math.PI;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.distance = source.distance;\n\t\tthis.angle = source.angle;\n\t\tthis.penumbra = source.penumbra;\n\t\tthis.decay = source.decay;\n\n\t\tthis.target = source.target.clone();\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nSpotLight.prototype.isSpotLight = true;\n\nconst _projScreenMatrix = /*@__PURE__*/ new Matrix4();\nconst _lightPositionWorld = /*@__PURE__*/ new Vector3();\nconst _lookTarget = /*@__PURE__*/ new Vector3();\n\nclass PointLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new PerspectiveCamera( 90, 1, 0.5, 500 ) );\n\n\t\tthis._frameExtents = new Vector2( 4, 2 );\n\n\t\tthis._viewportCount = 6;\n\n\t\tthis._viewports = [\n\t\t\t// These viewports map a cube-map onto a 2D texture with the\n\t\t\t// following orientation:\n\t\t\t//\n\t\t\t//  xzXZ\n\t\t\t//   y Y\n\t\t\t//\n\t\t\t// X - Positive x direction\n\t\t\t// x - Negative x direction\n\t\t\t// Y - Positive y direction\n\t\t\t// y - Negative y direction\n\t\t\t// Z - Positive z direction\n\t\t\t// z - Negative z direction\n\n\t\t\t// positive X\n\t\t\tnew Vector4( 2, 1, 1, 1 ),\n\t\t\t// negative X\n\t\t\tnew Vector4( 0, 1, 1, 1 ),\n\t\t\t// positive Z\n\t\t\tnew Vector4( 3, 1, 1, 1 ),\n\t\t\t// negative Z\n\t\t\tnew Vector4( 1, 1, 1, 1 ),\n\t\t\t// positive Y\n\t\t\tnew Vector4( 3, 0, 1, 1 ),\n\t\t\t// negative Y\n\t\t\tnew Vector4( 1, 0, 1, 1 )\n\t\t];\n\n\t\tthis._cubeDirections = [\n\t\t\tnew Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ),\n\t\t\tnew Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 )\n\t\t];\n\n\t\tthis._cubeUps = [\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ),\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ),\tnew Vector3( 0, 0, - 1 )\n\t\t];\n\n\t}\n\n\tupdateMatrices( light, viewportIndex = 0 ) {\n\n\t\tconst camera = this.camera;\n\t\tconst shadowMatrix = this.matrix;\n\n\t\tconst far = light.distance || camera.far;\n\n\t\tif ( far !== camera.far ) {\n\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\t_lightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n\t\tcamera.position.copy( _lightPositionWorld );\n\n\t\t_lookTarget.copy( camera.position );\n\t\t_lookTarget.add( this._cubeDirections[ viewportIndex ] );\n\t\tcamera.up.copy( this._cubeUps[ viewportIndex ] );\n\t\tcamera.lookAt( _lookTarget );\n\t\tcamera.updateMatrixWorld();\n\n\t\tshadowMatrix.makeTranslation( - _lightPositionWorld.x, - _lightPositionWorld.y, - _lightPositionWorld.z );\n\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t}\n\n}\n\nPointLightShadow.prototype.isPointLightShadow = true;\n\nclass PointLight extends Light {\n\n\tconstructor( color, intensity, distance = 0, decay = 1 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.type = 'PointLight';\n\n\t\tthis.distance = distance;\n\t\tthis.decay = decay; // for physically correct lights, should be 2.\n\n\t\tthis.shadow = new PointLightShadow();\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in candela)\n\t\t// for an isotropic light source, luminous power (lm) = 4 π luminous intensity (cd)\n\t\treturn this.intensity * 4 * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in candela) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / ( 4 * Math.PI );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.distance = source.distance;\n\t\tthis.decay = source.decay;\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nPointLight.prototype.isPointLight = true;\n\nclass DirectionalLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\n\n\t}\n\n}\n\nDirectionalLightShadow.prototype.isDirectionalLightShadow = true;\n\nclass DirectionalLight extends Light {\n\n\tconstructor( color, intensity ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.type = 'DirectionalLight';\n\n\t\tthis.position.copy( Object3D.DefaultUp );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.shadow = new DirectionalLightShadow();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.target = source.target.clone();\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nDirectionalLight.prototype.isDirectionalLight = true;\n\nclass AmbientLight extends Light {\n\n\tconstructor( color, intensity ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.type = 'AmbientLight';\n\n\t}\n\n}\n\nAmbientLight.prototype.isAmbientLight = true;\n\nclass RectAreaLight extends Light {\n\n\tconstructor( color, intensity, width = 10, height = 10 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.type = 'RectAreaLight';\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in nits)\n\t\treturn this.intensity * this.width * this.height * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in nits) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / ( this.width * this.height * Math.PI );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.width = this.width;\n\t\tdata.object.height = this.height;\n\n\t\treturn data;\n\n\t}\n\n}\n\nRectAreaLight.prototype.isRectAreaLight = true;\n\n/**\n * Primary reference:\n *   https://graphics.stanford.edu/papers/envmap/envmap.pdf\n *\n * Secondary reference:\n *   https://www.ppsloan.org/publications/StupidSH36.pdf\n */\n\n// 3-band SH defined by 9 coefficients\n\nclass SphericalHarmonics3 {\n\n\tconstructor() {\n\n\t\tthis.coefficients = [];\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients.push( new Vector3() );\n\n\t\t}\n\n\t}\n\n\tset( coefficients ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].copy( coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tzero() {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].set( 0, 0, 0 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// get the radiance in the direction of the normal\n\t// target is a Vector3\n\tgetAt( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\tconst coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.282095 );\n\n\t\t// band 1\n\t\ttarget.addScaledVector( coeff[ 1 ], 0.488603 * y );\n\t\ttarget.addScaledVector( coeff[ 2 ], 0.488603 * z );\n\t\ttarget.addScaledVector( coeff[ 3 ], 0.488603 * x );\n\n\t\t// band 2\n\t\ttarget.addScaledVector( coeff[ 4 ], 1.092548 * ( x * y ) );\n\t\ttarget.addScaledVector( coeff[ 5 ], 1.092548 * ( y * z ) );\n\t\ttarget.addScaledVector( coeff[ 6 ], 0.315392 * ( 3.0 * z * z - 1.0 ) );\n\t\ttarget.addScaledVector( coeff[ 7 ], 1.092548 * ( x * z ) );\n\t\ttarget.addScaledVector( coeff[ 8 ], 0.546274 * ( x * x - y * y ) );\n\n\t\treturn target;\n\n\t}\n\n\t// get the irradiance (radiance convolved with cosine lobe) in the direction of the normal\n\t// target is a Vector3\n\t// https://graphics.stanford.edu/papers/envmap/envmap.pdf\n\tgetIrradianceAt( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\tconst coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.886227 ); // π * 0.282095\n\n\t\t// band 1\n\t\ttarget.addScaledVector( coeff[ 1 ], 2.0 * 0.511664 * y ); // ( 2 * π / 3 ) * 0.488603\n\t\ttarget.addScaledVector( coeff[ 2 ], 2.0 * 0.511664 * z );\n\t\ttarget.addScaledVector( coeff[ 3 ], 2.0 * 0.511664 * x );\n\n\t\t// band 2\n\t\ttarget.addScaledVector( coeff[ 4 ], 2.0 * 0.429043 * x * y ); // ( π / 4 ) * 1.092548\n\t\ttarget.addScaledVector( coeff[ 5 ], 2.0 * 0.429043 * y * z );\n\t\ttarget.addScaledVector( coeff[ 6 ], 0.743125 * z * z - 0.247708 ); // ( π / 4 ) * 0.315392 * 3\n\t\ttarget.addScaledVector( coeff[ 7 ], 2.0 * 0.429043 * x * z );\n\t\ttarget.addScaledVector( coeff[ 8 ], 0.429043 * ( x * x - y * y ) ); // ( π / 4 ) * 0.546274\n\n\t\treturn target;\n\n\t}\n\n\tadd( sh ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].add( sh.coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\taddScaledSH( sh, s ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].addScaledVector( sh.coefficients[ i ], s );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tscale( s ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].multiplyScalar( s );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tlerp( sh, alpha ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].lerp( sh.coefficients[ i ], alpha );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tequals( sh ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( ! this.coefficients[ i ].equals( sh.coefficients[ i ] ) ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tcopy( sh ) {\n\n\t\treturn this.set( sh.coefficients );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tconst coefficients = this.coefficients;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].fromArray( array, offset + ( i * 3 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst coefficients = this.coefficients;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].toArray( array, offset + ( i * 3 ) );\n\n\t\t}\n\n\t\treturn array;\n\n\t}\n\n\t// evaluate the basis functions\n\t// shBasis is an Array[ 9 ]\n\tstatic getBasisAt( normal, shBasis ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\t// band 0\n\t\tshBasis[ 0 ] = 0.282095;\n\n\t\t// band 1\n\t\tshBasis[ 1 ] = 0.488603 * y;\n\t\tshBasis[ 2 ] = 0.488603 * z;\n\t\tshBasis[ 3 ] = 0.488603 * x;\n\n\t\t// band 2\n\t\tshBasis[ 4 ] = 1.092548 * x * y;\n\t\tshBasis[ 5 ] = 1.092548 * y * z;\n\t\tshBasis[ 6 ] = 0.315392 * ( 3 * z * z - 1 );\n\t\tshBasis[ 7 ] = 1.092548 * x * z;\n\t\tshBasis[ 8 ] = 0.546274 * ( x * x - y * y );\n\n\t}\n\n}\n\nSphericalHarmonics3.prototype.isSphericalHarmonics3 = true;\n\nclass LightProbe extends Light {\n\n\tconstructor( sh = new SphericalHarmonics3(), intensity = 1 ) {\n\n\t\tsuper( undefined, intensity );\n\n\t\tthis.sh = sh;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.sh.copy( source.sh );\n\n\t\treturn this;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tthis.intensity = json.intensity; // TODO: Move this bit to Light.fromJSON();\n\t\tthis.sh.fromArray( json.sh );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.sh = this.sh.toArray();\n\n\t\treturn data;\n\n\t}\n\n}\n\nLightProbe.prototype.isLightProbe = true;\n\nclass MaterialLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\t\tthis.textures = {};\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst textures = this.textures;\n\n\t\tfunction getTexture( name ) {\n\n\t\t\tif ( textures[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\n\n\t\t\t}\n\n\t\t\treturn textures[ name ];\n\n\t\t}\n\n\t\tconst material = Material.fromType( json.type );\n\n\t\tif ( json.uuid !== undefined ) material.uuid = json.uuid;\n\t\tif ( json.name !== undefined ) material.name = json.name;\n\t\tif ( json.color !== undefined && material.color !== undefined ) material.color.setHex( json.color );\n\t\tif ( json.roughness !== undefined ) material.roughness = json.roughness;\n\t\tif ( json.metalness !== undefined ) material.metalness = json.metalness;\n\t\tif ( json.sheen !== undefined ) material.sheen = json.sheen;\n\t\tif ( json.sheenColor !== undefined ) material.sheenColor = new Color().setHex( json.sheenColor );\n\t\tif ( json.sheenRoughness !== undefined ) material.sheenRoughness = json.sheenRoughness;\n\t\tif ( json.emissive !== undefined && material.emissive !== undefined ) material.emissive.setHex( json.emissive );\n\t\tif ( json.specular !== undefined && material.specular !== undefined ) material.specular.setHex( json.specular );\n\t\tif ( json.specularIntensity !== undefined ) material.specularIntensity = json.specularIntensity;\n\t\tif ( json.specularColor !== undefined && material.specularColor !== undefined ) material.specularColor.setHex( json.specularColor );\n\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\n\t\tif ( json.clearcoat !== undefined ) material.clearcoat = json.clearcoat;\n\t\tif ( json.clearcoatRoughness !== undefined ) material.clearcoatRoughness = json.clearcoatRoughness;\n\t\tif ( json.transmission !== undefined ) material.transmission = json.transmission;\n\t\tif ( json.thickness !== undefined ) material.thickness = json.thickness;\n\t\tif ( json.attenuationDistance !== undefined ) material.attenuationDistance = json.attenuationDistance;\n\t\tif ( json.attenuationColor !== undefined && material.attenuationColor !== undefined ) material.attenuationColor.setHex( json.attenuationColor );\n\t\tif ( json.fog !== undefined ) material.fog = json.fog;\n\t\tif ( json.flatShading !== undefined ) material.flatShading = json.flatShading;\n\t\tif ( json.blending !== undefined ) material.blending = json.blending;\n\t\tif ( json.combine !== undefined ) material.combine = json.combine;\n\t\tif ( json.side !== undefined ) material.side = json.side;\n\t\tif ( json.shadowSide !== undefined ) material.shadowSide = json.shadowSide;\n\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\n\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\n\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\n\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\n\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\n\t\tif ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;\n\n\t\tif ( json.stencilWrite !== undefined ) material.stencilWrite = json.stencilWrite;\n\t\tif ( json.stencilWriteMask !== undefined ) material.stencilWriteMask = json.stencilWriteMask;\n\t\tif ( json.stencilFunc !== undefined ) material.stencilFunc = json.stencilFunc;\n\t\tif ( json.stencilRef !== undefined ) material.stencilRef = json.stencilRef;\n\t\tif ( json.stencilFuncMask !== undefined ) material.stencilFuncMask = json.stencilFuncMask;\n\t\tif ( json.stencilFail !== undefined ) material.stencilFail = json.stencilFail;\n\t\tif ( json.stencilZFail !== undefined ) material.stencilZFail = json.stencilZFail;\n\t\tif ( json.stencilZPass !== undefined ) material.stencilZPass = json.stencilZPass;\n\n\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\n\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\n\t\tif ( json.wireframeLinecap !== undefined ) material.wireframeLinecap = json.wireframeLinecap;\n\t\tif ( json.wireframeLinejoin !== undefined ) material.wireframeLinejoin = json.wireframeLinejoin;\n\n\t\tif ( json.rotation !== undefined ) material.rotation = json.rotation;\n\n\t\tif ( json.linewidth !== 1 ) material.linewidth = json.linewidth;\n\t\tif ( json.dashSize !== undefined ) material.dashSize = json.dashSize;\n\t\tif ( json.gapSize !== undefined ) material.gapSize = json.gapSize;\n\t\tif ( json.scale !== undefined ) material.scale = json.scale;\n\n\t\tif ( json.polygonOffset !== undefined ) material.polygonOffset = json.polygonOffset;\n\t\tif ( json.polygonOffsetFactor !== undefined ) material.polygonOffsetFactor = json.polygonOffsetFactor;\n\t\tif ( json.polygonOffsetUnits !== undefined ) material.polygonOffsetUnits = json.polygonOffsetUnits;\n\n\t\tif ( json.dithering !== undefined ) material.dithering = json.dithering;\n\n\t\tif ( json.alphaToCoverage !== undefined ) material.alphaToCoverage = json.alphaToCoverage;\n\t\tif ( json.premultipliedAlpha !== undefined ) material.premultipliedAlpha = json.premultipliedAlpha;\n\n\t\tif ( json.visible !== undefined ) material.visible = json.visible;\n\n\t\tif ( json.toneMapped !== undefined ) material.toneMapped = json.toneMapped;\n\n\t\tif ( json.userData !== undefined ) material.userData = json.userData;\n\n\t\tif ( json.vertexColors !== undefined ) {\n\n\t\t\tif ( typeof json.vertexColors === 'number' ) {\n\n\t\t\t\tmaterial.vertexColors = ( json.vertexColors > 0 ) ? true : false;\n\n\t\t\t} else {\n\n\t\t\t\tmaterial.vertexColors = json.vertexColors;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Shader Material\n\n\t\tif ( json.uniforms !== undefined ) {\n\n\t\t\tfor ( const name in json.uniforms ) {\n\n\t\t\t\tconst uniform = json.uniforms[ name ];\n\n\t\t\t\tmaterial.uniforms[ name ] = {};\n\n\t\t\t\tswitch ( uniform.type ) {\n\n\t\t\t\t\tcase 't':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = getTexture( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'c':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Color().setHex( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v2':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector2().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = uniform.value;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json.defines !== undefined ) material.defines = json.defines;\n\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\n\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\n\n\t\tif ( json.extensions !== undefined ) {\n\n\t\t\tfor ( const key in json.extensions ) {\n\n\t\t\t\tmaterial.extensions[ key ] = json.extensions[ key ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Deprecated\n\n\t\tif ( json.shading !== undefined ) material.flatShading = json.shading === 1; // THREE.FlatShading\n\n\t\t// for PointsMaterial\n\n\t\tif ( json.size !== undefined ) material.size = json.size;\n\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\n\n\t\t// maps\n\n\t\tif ( json.map !== undefined ) material.map = getTexture( json.map );\n\t\tif ( json.matcap !== undefined ) material.matcap = getTexture( json.matcap );\n\n\t\tif ( json.alphaMap !== undefined ) material.alphaMap = getTexture( json.alphaMap );\n\n\t\tif ( json.bumpMap !== undefined ) material.bumpMap = getTexture( json.bumpMap );\n\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\n\n\t\tif ( json.normalMap !== undefined ) material.normalMap = getTexture( json.normalMap );\n\t\tif ( json.normalMapType !== undefined ) material.normalMapType = json.normalMapType;\n\t\tif ( json.normalScale !== undefined ) {\n\n\t\t\tlet normalScale = json.normalScale;\n\n\t\t\tif ( Array.isArray( normalScale ) === false ) {\n\n\t\t\t\t// Blender exporter used to export a scalar. See #7459\n\n\t\t\t\tnormalScale = [ normalScale, normalScale ];\n\n\t\t\t}\n\n\t\t\tmaterial.normalScale = new Vector2().fromArray( normalScale );\n\n\t\t}\n\n\t\tif ( json.displacementMap !== undefined ) material.displacementMap = getTexture( json.displacementMap );\n\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\n\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\n\n\t\tif ( json.roughnessMap !== undefined ) material.roughnessMap = getTexture( json.roughnessMap );\n\t\tif ( json.metalnessMap !== undefined ) material.metalnessMap = getTexture( json.metalnessMap );\n\n\t\tif ( json.emissiveMap !== undefined ) material.emissiveMap = getTexture( json.emissiveMap );\n\t\tif ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;\n\n\t\tif ( json.specularMap !== undefined ) material.specularMap = getTexture( json.specularMap );\n\t\tif ( json.specularIntensityMap !== undefined ) material.specularIntensityMap = getTexture( json.specularIntensityMap );\n\t\tif ( json.specularColorMap !== undefined ) material.specularColorMap = getTexture( json.specularColorMap );\n\n\t\tif ( json.envMap !== undefined ) material.envMap = getTexture( json.envMap );\n\t\tif ( json.envMapIntensity !== undefined ) material.envMapIntensity = json.envMapIntensity;\n\n\t\tif ( json.reflectivity !== undefined ) material.reflectivity = json.reflectivity;\n\t\tif ( json.refractionRatio !== undefined ) material.refractionRatio = json.refractionRatio;\n\n\t\tif ( json.lightMap !== undefined ) material.lightMap = getTexture( json.lightMap );\n\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\n\n\t\tif ( json.aoMap !== undefined ) material.aoMap = getTexture( json.aoMap );\n\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\n\n\t\tif ( json.gradientMap !== undefined ) material.gradientMap = getTexture( json.gradientMap );\n\n\t\tif ( json.clearcoatMap !== undefined ) material.clearcoatMap = getTexture( json.clearcoatMap );\n\t\tif ( json.clearcoatRoughnessMap !== undefined ) material.clearcoatRoughnessMap = getTexture( json.clearcoatRoughnessMap );\n\t\tif ( json.clearcoatNormalMap !== undefined ) material.clearcoatNormalMap = getTexture( json.clearcoatNormalMap );\n\t\tif ( json.clearcoatNormalScale !== undefined ) material.clearcoatNormalScale = new Vector2().fromArray( json.clearcoatNormalScale );\n\n\t\tif ( json.transmissionMap !== undefined ) material.transmissionMap = getTexture( json.transmissionMap );\n\t\tif ( json.thicknessMap !== undefined ) material.thicknessMap = getTexture( json.thicknessMap );\n\n\t\tif ( json.sheenColorMap !== undefined ) material.sheenColorMap = getTexture( json.sheenColorMap );\n\t\tif ( json.sheenRoughnessMap !== undefined ) material.sheenRoughnessMap = getTexture( json.sheenRoughnessMap );\n\n\t\treturn material;\n\n\t}\n\n\tsetTextures( value ) {\n\n\t\tthis.textures = value;\n\t\treturn this;\n\n\t}\n\n}\n\nclass LoaderUtils {\n\n\tstatic decodeText( array ) {\n\n\t\tif ( typeof TextDecoder !== 'undefined' ) {\n\n\t\t\treturn new TextDecoder().decode( array );\n\n\t\t}\n\n\t\t// Avoid the String.fromCharCode.apply(null, array) shortcut, which\n\t\t// throws a \"maximum call stack size exceeded\" error for large arrays.\n\n\t\tlet s = '';\n\n\t\tfor ( let i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t// Implicitly assumes little-endian.\n\t\t\ts += String.fromCharCode( array[ i ] );\n\n\t\t}\n\n\t\ttry {\n\n\t\t\t// merges multi-byte utf-8 characters.\n\n\t\t\treturn decodeURIComponent( escape( s ) );\n\n\t\t} catch ( e ) { // see #16358\n\n\t\t\treturn s;\n\n\t\t}\n\n\t}\n\n\tstatic extractUrlBase( url ) {\n\n\t\tconst index = url.lastIndexOf( '/' );\n\n\t\tif ( index === - 1 ) return './';\n\n\t\treturn url.slice( 0, index + 1 );\n\n\t}\n\n\tstatic resolveURL( url, path ) {\n\n\t\t// Invalid URL\n\t\tif ( typeof url !== 'string' || url === '' ) return '';\n\n\t\t// Host Relative URL\n\t\tif ( /^https?:\\/\\//i.test( path ) && /^\\//.test( url ) ) {\n\n\t\t\tpath = path.replace( /(^https?:\\/\\/[^\\/]+).*/i, '$1' );\n\n\t\t}\n\n\t\t// Absolute URL http://,https://,//\n\t\tif ( /^(https?:)?\\/\\//i.test( url ) ) return url;\n\n\t\t// Data URI\n\t\tif ( /^data:.*,.*$/i.test( url ) ) return url;\n\n\t\t// Blob URL\n\t\tif ( /^blob:.*$/i.test( url ) ) return url;\n\n\t\t// Relative URL\n\t\treturn path + url;\n\n\t}\n\n}\n\nclass InstancedBufferGeometry extends BufferGeometry {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'InstancedBufferGeometry';\n\t\tthis.instanceCount = Infinity;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.instanceCount = source.instanceCount;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON( this );\n\n\t\tdata.instanceCount = this.instanceCount;\n\n\t\tdata.isInstancedBufferGeometry = true;\n\n\t\treturn data;\n\n\t}\n\n}\n\nInstancedBufferGeometry.prototype.isInstancedBufferGeometry = true;\n\nclass BufferGeometryLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst interleavedBufferMap = {};\n\t\tconst arrayBufferMap = {};\n\n\t\tfunction getInterleavedBuffer( json, uuid ) {\n\n\t\t\tif ( interleavedBufferMap[ uuid ] !== undefined ) return interleavedBufferMap[ uuid ];\n\n\t\t\tconst interleavedBuffers = json.interleavedBuffers;\n\t\t\tconst interleavedBuffer = interleavedBuffers[ uuid ];\n\n\t\t\tconst buffer = getArrayBuffer( json, interleavedBuffer.buffer );\n\n\t\t\tconst array = getTypedArray( interleavedBuffer.type, buffer );\n\t\t\tconst ib = new InterleavedBuffer( array, interleavedBuffer.stride );\n\t\t\tib.uuid = interleavedBuffer.uuid;\n\n\t\t\tinterleavedBufferMap[ uuid ] = ib;\n\n\t\t\treturn ib;\n\n\t\t}\n\n\t\tfunction getArrayBuffer( json, uuid ) {\n\n\t\t\tif ( arrayBufferMap[ uuid ] !== undefined ) return arrayBufferMap[ uuid ];\n\n\t\t\tconst arrayBuffers = json.arrayBuffers;\n\t\t\tconst arrayBuffer = arrayBuffers[ uuid ];\n\n\t\t\tconst ab = new Uint32Array( arrayBuffer ).buffer;\n\n\t\t\tarrayBufferMap[ uuid ] = ab;\n\n\t\t\treturn ab;\n\n\t\t}\n\n\t\tconst geometry = json.isInstancedBufferGeometry ? new InstancedBufferGeometry() : new BufferGeometry();\n\n\t\tconst index = json.data.index;\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tconst typedArray = getTypedArray( index.type, index.array );\n\t\t\tgeometry.setIndex( new BufferAttribute( typedArray, 1 ) );\n\n\t\t}\n\n\t\tconst attributes = json.data.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\t\t\tlet bufferAttribute;\n\n\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t} else {\n\n\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\n\t\t\t\tconst bufferAttributeConstr = attribute.isInstancedBufferAttribute ? InstancedBufferAttribute : BufferAttribute;\n\t\t\t\tbufferAttribute = new bufferAttributeConstr( typedArray, attribute.itemSize, attribute.normalized );\n\n\t\t\t}\n\n\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\tif ( attribute.usage !== undefined ) bufferAttribute.setUsage( attribute.usage );\n\n\t\t\tif ( attribute.updateRange !== undefined ) {\n\n\t\t\t\tbufferAttribute.updateRange.offset = attribute.updateRange.offset;\n\t\t\t\tbufferAttribute.updateRange.count = attribute.updateRange.count;\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( key, bufferAttribute );\n\n\t\t}\n\n\t\tconst morphAttributes = json.data.morphAttributes;\n\n\t\tif ( morphAttributes ) {\n\n\t\t\tfor ( const key in morphAttributes ) {\n\n\t\t\t\tconst attributeArray = morphAttributes[ key ];\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst attribute = attributeArray[ i ];\n\t\t\t\t\tlet bufferAttribute;\n\n\t\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\n\t\t\t\t\t\tbufferAttribute = new BufferAttribute( typedArray, attribute.itemSize, attribute.normalized );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\t\t\tarray.push( bufferAttribute );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.morphAttributes[ key ] = array;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst morphTargetsRelative = json.data.morphTargetsRelative;\n\n\t\tif ( morphTargetsRelative ) {\n\n\t\t\tgeometry.morphTargetsRelative = true;\n\n\t\t}\n\n\t\tconst groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n\t\tif ( groups !== undefined ) {\n\n\t\t\tfor ( let i = 0, n = groups.length; i !== n; ++ i ) {\n\n\t\t\t\tconst group = groups[ i ];\n\n\t\t\t\tgeometry.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst boundingSphere = json.data.boundingSphere;\n\n\t\tif ( boundingSphere !== undefined ) {\n\n\t\t\tconst center = new Vector3();\n\n\t\t\tif ( boundingSphere.center !== undefined ) {\n\n\t\t\t\tcenter.fromArray( boundingSphere.center );\n\n\t\t\t}\n\n\t\t\tgeometry.boundingSphere = new Sphere( center, boundingSphere.radius );\n\n\t\t}\n\n\t\tif ( json.name ) geometry.name = json.name;\n\t\tif ( json.userData ) geometry.userData = json.userData;\n\n\t\treturn geometry;\n\n\t}\n\n}\n\nclass ObjectLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tlet json = null;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( error );\n\n\t\t\t\tconsole.error( 'THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst metadata = json.metadata;\n\n\t\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\t\tconsole.error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tscope.parse( json, onLoad );\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tasync loadAsync( url, onProgress ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\n\t\tconst text = await loader.loadAsync( url, onProgress );\n\n\t\tconst json = JSON.parse( text );\n\n\t\tconst metadata = json.metadata;\n\n\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\tthrow new Error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\n\t\t}\n\n\t\treturn await scope.parseAsync( json );\n\n\t}\n\n\tparse( json, onLoad ) {\n\n\t\tconst animations = this.parseAnimations( json.animations );\n\t\tconst shapes = this.parseShapes( json.shapes );\n\t\tconst geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tconst images = this.parseImages( json.images, function () {\n\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t} );\n\n\t\tconst textures = this.parseTextures( json.textures, images );\n\t\tconst materials = this.parseMaterials( json.materials, textures );\n\n\t\tconst object = this.parseObject( json.object, geometries, materials, textures, animations );\n\t\tconst skeletons = this.parseSkeletons( json.skeletons, object );\n\n\t\tthis.bindSkeletons( object, skeletons );\n\n\t\t//\n\n\t\tif ( onLoad !== undefined ) {\n\n\t\t\tlet hasImages = false;\n\n\t\t\tfor ( const uuid in images ) {\n\n\t\t\t\tif ( images[ uuid ] instanceof HTMLImageElement ) {\n\n\t\t\t\t\thasImages = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( hasImages === false ) onLoad( object );\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\tasync parseAsync( json ) {\n\n\t\tconst animations = this.parseAnimations( json.animations );\n\t\tconst shapes = this.parseShapes( json.shapes );\n\t\tconst geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tconst images = await this.parseImagesAsync( json.images );\n\n\t\tconst textures = this.parseTextures( json.textures, images );\n\t\tconst materials = this.parseMaterials( json.materials, textures );\n\n\t\tconst object = this.parseObject( json.object, geometries, materials, textures, animations );\n\t\tconst skeletons = this.parseSkeletons( json.skeletons, object );\n\n\t\tthis.bindSkeletons( object, skeletons );\n\n\t\treturn object;\n\n\t}\n\n\tparseShapes( json ) {\n\n\t\tconst shapes = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst shape = new Shape().fromJSON( json[ i ] );\n\n\t\t\t\tshapes[ shape.uuid ] = shape;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn shapes;\n\n\t}\n\n\tparseSkeletons( json, object ) {\n\n\t\tconst skeletons = {};\n\t\tconst bones = {};\n\n\t\t// generate bone lookup table\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isBone ) bones[ child.uuid ] = child;\n\n\t\t} );\n\n\t\t// create skeletons\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst skeleton = new Skeleton().fromJSON( json[ i ], bones );\n\n\t\t\t\tskeletons[ skeleton.uuid ] = skeleton;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn skeletons;\n\n\t}\n\n\tparseGeometries( json, shapes ) {\n\n\t\tconst geometries = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst bufferGeometryLoader = new BufferGeometryLoader();\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tlet geometry;\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tswitch ( data.type ) {\n\n\t\t\t\t\tcase 'BufferGeometry':\n\t\t\t\t\tcase 'InstancedBufferGeometry':\n\n\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Geometry':\n\n\t\t\t\t\t\tconsole.error( 'THREE.ObjectLoader: The legacy Geometry type is no longer supported.' );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( data.type in Geometries ) {\n\n\t\t\t\t\t\t\tgeometry = Geometries[ data.type ].fromJSON( data, shapes );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconsole.warn( `THREE.ObjectLoader: Unsupported geometry type \"${ data.type }\"` );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\n\t\t\t\tif ( geometry.isBufferGeometry === true && data.userData !== undefined ) geometry.userData = data.userData;\n\n\t\t\t\tgeometries[ data.uuid ] = geometry;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn geometries;\n\n\t}\n\n\tparseMaterials( json, textures ) {\n\n\t\tconst cache = {}; // MultiMaterial\n\t\tconst materials = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst loader = new MaterialLoader();\n\t\t\tloader.setTextures( textures );\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tif ( data.type === 'MultiMaterial' ) {\n\n\t\t\t\t\t// Deprecated\n\n\t\t\t\t\tconst array = [];\n\n\t\t\t\t\tfor ( let j = 0; j < data.materials.length; j ++ ) {\n\n\t\t\t\t\t\tconst material = data.materials[ j ];\n\n\t\t\t\t\t\tif ( cache[ material.uuid ] === undefined ) {\n\n\t\t\t\t\t\t\tcache[ material.uuid ] = loader.parse( material );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tarray.push( cache[ material.uuid ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmaterials[ data.uuid ] = array;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( cache[ data.uuid ] === undefined ) {\n\n\t\t\t\t\t\tcache[ data.uuid ] = loader.parse( data );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmaterials[ data.uuid ] = cache[ data.uuid ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn materials;\n\n\t}\n\n\tparseAnimations( json ) {\n\n\t\tconst animations = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0; i < json.length; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tconst clip = AnimationClip.parse( data );\n\n\t\t\t\tanimations[ clip.uuid ] = clip;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn animations;\n\n\t}\n\n\tparseImages( json, onLoad ) {\n\n\t\tconst scope = this;\n\t\tconst images = {};\n\n\t\tlet loader;\n\n\t\tfunction loadImage( url ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\treturn loader.load( url, function () {\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, undefined, function () {\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\t}\n\n\t\tfunction deserializeImage( image ) {\n\n\t\t\tif ( typeof image === 'string' ) {\n\n\t\t\t\tconst url = image;\n\n\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\n\n\t\t\t\treturn loadImage( path );\n\n\t\t\t} else {\n\n\t\t\t\tif ( image.data ) {\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdata: getTypedArray( image.type, image.data ),\n\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\theight: image.height\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tconst manager = new LoadingManager( onLoad );\n\n\t\t\tloader = new ImageLoader( manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( let i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tconst image = json[ i ];\n\t\t\t\tconst url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\tconst imageArray = [];\n\n\t\t\t\t\tfor ( let j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tconst currentUrl = url[ j ];\n\n\t\t\t\t\t\tconst deserializedImage = deserializeImage( currentUrl );\n\n\t\t\t\t\t\tif ( deserializedImage !== null ) {\n\n\t\t\t\t\t\t\tif ( deserializedImage instanceof HTMLImageElement ) {\n\n\t\t\t\t\t\t\t\timageArray.push( deserializedImage );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\n\t\t\t\t\t\t\t\timageArray.push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\timages[ image.uuid ] = new Source( imageArray );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tconst deserializedImage = deserializeImage( image.url );\n\t\t\t\t\timages[ image.uuid ] = new Source( deserializedImage );\n\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\tasync parseImagesAsync( json ) {\n\n\t\tconst scope = this;\n\t\tconst images = {};\n\n\t\tlet loader;\n\n\t\tasync function deserializeImage( image ) {\n\n\t\t\tif ( typeof image === 'string' ) {\n\n\t\t\t\tconst url = image;\n\n\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\n\n\t\t\t\treturn await loader.loadAsync( path );\n\n\t\t\t} else {\n\n\t\t\t\tif ( image.data ) {\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdata: getTypedArray( image.type, image.data ),\n\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\theight: image.height\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tloader = new ImageLoader( this.manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( let i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tconst image = json[ i ];\n\t\t\t\tconst url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\tconst imageArray = [];\n\n\t\t\t\t\tfor ( let j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tconst currentUrl = url[ j ];\n\n\t\t\t\t\t\tconst deserializedImage = await deserializeImage( currentUrl );\n\n\t\t\t\t\t\tif ( deserializedImage !== null ) {\n\n\t\t\t\t\t\t\tif ( deserializedImage instanceof HTMLImageElement ) {\n\n\t\t\t\t\t\t\t\timageArray.push( deserializedImage );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\n\t\t\t\t\t\t\t\timageArray.push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\timages[ image.uuid ] = new Source( imageArray );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tconst deserializedImage = await deserializeImage( image.url );\n\t\t\t\t\timages[ image.uuid ] = new Source( deserializedImage );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\tparseTextures( json, images ) {\n\n\t\tfunction parseConstant( value, type ) {\n\n\t\t\tif ( typeof value === 'number' ) return value;\n\n\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\n\n\t\t\treturn type[ value ];\n\n\t\t}\n\n\t\tconst textures = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tif ( data.image === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\n\n\t\t\t\t}\n\n\t\t\t\tif ( images[ data.image ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\n\n\t\t\t\t}\n\n\t\t\t\tconst source = images[ data.image ];\n\t\t\t\tconst image = source.data;\n\n\t\t\t\tlet texture;\n\n\t\t\t\tif ( Array.isArray( image ) ) {\n\n\t\t\t\t\ttexture = new CubeTexture();\n\n\t\t\t\t\tif ( image.length === 6 ) texture.needsUpdate = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( image && image.data ) {\n\n\t\t\t\t\t\ttexture = new DataTexture();\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttexture = new Texture();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( image ) texture.needsUpdate = true; // textures can have undefined image data\n\n\t\t\t\t}\n\n\t\t\t\ttexture.source = source;\n\n\t\t\t\ttexture.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\n\n\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping, TEXTURE_MAPPING );\n\n\t\t\t\tif ( data.offset !== undefined ) texture.offset.fromArray( data.offset );\n\t\t\t\tif ( data.repeat !== undefined ) texture.repeat.fromArray( data.repeat );\n\t\t\t\tif ( data.center !== undefined ) texture.center.fromArray( data.center );\n\t\t\t\tif ( data.rotation !== undefined ) texture.rotation = data.rotation;\n\n\t\t\t\tif ( data.wrap !== undefined ) {\n\n\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ], TEXTURE_WRAPPING );\n\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ], TEXTURE_WRAPPING );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.format !== undefined ) texture.format = data.format;\n\t\t\t\tif ( data.type !== undefined ) texture.type = data.type;\n\t\t\t\tif ( data.encoding !== undefined ) texture.encoding = data.encoding;\n\n\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\n\n\t\t\t\tif ( data.flipY !== undefined ) texture.flipY = data.flipY;\n\n\t\t\t\tif ( data.premultiplyAlpha !== undefined ) texture.premultiplyAlpha = data.premultiplyAlpha;\n\t\t\t\tif ( data.unpackAlignment !== undefined ) texture.unpackAlignment = data.unpackAlignment;\n\n\t\t\t\tif ( data.userData !== undefined ) texture.userData = data.userData;\n\n\t\t\t\ttextures[ data.uuid ] = texture;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn textures;\n\n\t}\n\n\tparseObject( data, geometries, materials, textures, animations ) {\n\n\t\tlet object;\n\n\t\tfunction getGeometry( name ) {\n\n\t\t\tif ( geometries[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\n\n\t\t\t}\n\n\t\t\treturn geometries[ name ];\n\n\t\t}\n\n\t\tfunction getMaterial( name ) {\n\n\t\t\tif ( name === undefined ) return undefined;\n\n\t\t\tif ( Array.isArray( name ) ) {\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0, l = name.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst uuid = name[ i ];\n\n\t\t\t\t\tif ( materials[ uuid ] === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', uuid );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tarray.push( materials[ uuid ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn array;\n\n\t\t\t}\n\n\t\t\tif ( materials[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\n\n\t\t\t}\n\n\t\t\treturn materials[ name ];\n\n\t\t}\n\n\t\tfunction getTexture( uuid ) {\n\n\t\t\tif ( textures[ uuid ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined texture', uuid );\n\n\t\t\t}\n\n\t\t\treturn textures[ uuid ];\n\n\t\t}\n\n\t\tlet geometry, material;\n\n\t\tswitch ( data.type ) {\n\n\t\t\tcase 'Scene':\n\n\t\t\t\tobject = new Scene();\n\n\t\t\t\tif ( data.background !== undefined ) {\n\n\t\t\t\t\tif ( Number.isInteger( data.background ) ) {\n\n\t\t\t\t\t\tobject.background = new Color( data.background );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tobject.background = getTexture( data.background );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.environment !== undefined ) {\n\n\t\t\t\t\tobject.environment = getTexture( data.environment );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.fog !== undefined ) {\n\n\t\t\t\t\tif ( data.fog.type === 'Fog' ) {\n\n\t\t\t\t\t\tobject.fog = new Fog( data.fog.color, data.fog.near, data.fog.far );\n\n\t\t\t\t\t} else if ( data.fog.type === 'FogExp2' ) {\n\n\t\t\t\t\t\tobject.fog = new FogExp2( data.fog.color, data.fog.density );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PerspectiveCamera':\n\n\t\t\t\tobject = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\n\n\t\t\t\tif ( data.focus !== undefined ) object.focus = data.focus;\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;\n\t\t\t\tif ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'OrthographicCamera':\n\n\t\t\t\tobject = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\n\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'AmbientLight':\n\n\t\t\t\tobject = new AmbientLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'DirectionalLight':\n\n\t\t\t\tobject = new DirectionalLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointLight':\n\n\t\t\t\tobject = new PointLight( data.color, data.intensity, data.distance, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'RectAreaLight':\n\n\t\t\t\tobject = new RectAreaLight( data.color, data.intensity, data.width, data.height );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SpotLight':\n\n\t\t\t\tobject = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'HemisphereLight':\n\n\t\t\t\tobject = new HemisphereLight( data.color, data.groundColor, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LightProbe':\n\n\t\t\t\tobject = new LightProbe().fromJSON( data );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SkinnedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t \tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new SkinnedMesh( geometry, material );\n\n\t\t\t\tif ( data.bindMode !== undefined ) object.bindMode = data.bindMode;\n\t\t\t\tif ( data.bindMatrix !== undefined ) object.bindMatrix.fromArray( data.bindMatrix );\n\t\t\t\tif ( data.skeleton !== undefined ) object.skeleton = data.skeleton;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Mesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new Mesh( geometry, material );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'InstancedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\t\t\t\tconst count = data.count;\n\t\t\t\tconst instanceMatrix = data.instanceMatrix;\n\t\t\t\tconst instanceColor = data.instanceColor;\n\n\t\t\t\tobject = new InstancedMesh( geometry, material, count );\n\t\t\t\tobject.instanceMatrix = new InstancedBufferAttribute( new Float32Array( instanceMatrix.array ), 16 );\n\t\t\t\tif ( instanceColor !== undefined ) object.instanceColor = new InstancedBufferAttribute( new Float32Array( instanceColor.array ), instanceColor.itemSize );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LOD':\n\n\t\t\t\tobject = new LOD();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Line':\n\n\t\t\t\tobject = new Line( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineLoop':\n\n\t\t\t\tobject = new LineLoop( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineSegments':\n\n\t\t\t\tobject = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointCloud':\n\t\t\tcase 'Points':\n\n\t\t\t\tobject = new Points( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Sprite':\n\n\t\t\t\tobject = new Sprite( getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Group':\n\n\t\t\t\tobject = new Group();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Bone':\n\n\t\t\t\tobject = new Bone();\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tobject = new Object3D();\n\n\t\t}\n\n\t\tobject.uuid = data.uuid;\n\n\t\tif ( data.name !== undefined ) object.name = data.name;\n\n\t\tif ( data.matrix !== undefined ) {\n\n\t\t\tobject.matrix.fromArray( data.matrix );\n\n\t\t\tif ( data.matrixAutoUpdate !== undefined ) object.matrixAutoUpdate = data.matrixAutoUpdate;\n\t\t\tif ( object.matrixAutoUpdate ) object.matrix.decompose( object.position, object.quaternion, object.scale );\n\n\t\t} else {\n\n\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\n\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\n\t\t\tif ( data.quaternion !== undefined ) object.quaternion.fromArray( data.quaternion );\n\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\n\n\t\t}\n\n\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\n\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\n\n\t\tif ( data.shadow ) {\n\n\t\t\tif ( data.shadow.bias !== undefined ) object.shadow.bias = data.shadow.bias;\n\t\t\tif ( data.shadow.normalBias !== undefined ) object.shadow.normalBias = data.shadow.normalBias;\n\t\t\tif ( data.shadow.radius !== undefined ) object.shadow.radius = data.shadow.radius;\n\t\t\tif ( data.shadow.mapSize !== undefined ) object.shadow.mapSize.fromArray( data.shadow.mapSize );\n\t\t\tif ( data.shadow.camera !== undefined ) object.shadow.camera = this.parseObject( data.shadow.camera );\n\n\t\t}\n\n\t\tif ( data.visible !== undefined ) object.visible = data.visible;\n\t\tif ( data.frustumCulled !== undefined ) object.frustumCulled = data.frustumCulled;\n\t\tif ( data.renderOrder !== undefined ) object.renderOrder = data.renderOrder;\n\t\tif ( data.userData !== undefined ) object.userData = data.userData;\n\t\tif ( data.layers !== undefined ) object.layers.mask = data.layers;\n\n\t\tif ( data.children !== undefined ) {\n\n\t\t\tconst children = data.children;\n\n\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\tobject.add( this.parseObject( children[ i ], geometries, materials, textures, animations ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.animations !== undefined ) {\n\n\t\t\tconst objectAnimations = data.animations;\n\n\t\t\tfor ( let i = 0; i < objectAnimations.length; i ++ ) {\n\n\t\t\t\tconst uuid = objectAnimations[ i ];\n\n\t\t\t\tobject.animations.push( animations[ uuid ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.type === 'LOD' ) {\n\n\t\t\tif ( data.autoUpdate !== undefined ) object.autoUpdate = data.autoUpdate;\n\n\t\t\tconst levels = data.levels;\n\n\t\t\tfor ( let l = 0; l < levels.length; l ++ ) {\n\n\t\t\t\tconst level = levels[ l ];\n\t\t\t\tconst child = object.getObjectByProperty( 'uuid', level.object );\n\n\t\t\t\tif ( child !== undefined ) {\n\n\t\t\t\t\tobject.addLevel( child, level.distance );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\tbindSkeletons( object, skeletons ) {\n\n\t\tif ( Object.keys( skeletons ).length === 0 ) return;\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isSkinnedMesh === true && child.skeleton !== undefined ) {\n\n\t\t\t\tconst skeleton = skeletons[ child.skeleton ];\n\n\t\t\t\tif ( skeleton === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No skeleton found with UUID:', child.skeleton );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tchild.bind( skeleton, child.bindMatrix );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\t/* DEPRECATED */\n\n\tsetTexturePath( value ) {\n\n\t\tconsole.warn( 'THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath().' );\n\t\treturn this.setResourcePath( value );\n\n\t}\n\n}\n\nconst TEXTURE_MAPPING = {\n\tUVMapping: UVMapping,\n\tCubeReflectionMapping: CubeReflectionMapping,\n\tCubeRefractionMapping: CubeRefractionMapping,\n\tEquirectangularReflectionMapping: EquirectangularReflectionMapping,\n\tEquirectangularRefractionMapping: EquirectangularRefractionMapping,\n\tCubeUVReflectionMapping: CubeUVReflectionMapping\n};\n\nconst TEXTURE_WRAPPING = {\n\tRepeatWrapping: RepeatWrapping,\n\tClampToEdgeWrapping: ClampToEdgeWrapping,\n\tMirroredRepeatWrapping: MirroredRepeatWrapping\n};\n\nconst TEXTURE_FILTER = {\n\tNearestFilter: NearestFilter,\n\tNearestMipmapNearestFilter: NearestMipmapNearestFilter,\n\tNearestMipmapLinearFilter: NearestMipmapLinearFilter,\n\tLinearFilter: LinearFilter,\n\tLinearMipmapNearestFilter: LinearMipmapNearestFilter,\n\tLinearMipmapLinearFilter: LinearMipmapLinearFilter\n};\n\nclass ImageBitmapLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t\tif ( typeof createImageBitmap === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: createImageBitmap() not supported.' );\n\n\t\t}\n\n\t\tif ( typeof fetch === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: fetch() not supported.' );\n\n\t\t}\n\n\t\tthis.options = { premultiplyAlpha: 'none' };\n\n\t}\n\n\tsetOptions( options ) {\n\n\t\tthis.options = options;\n\n\t\treturn this;\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tconst fetchOptions = {};\n\t\tfetchOptions.credentials = ( this.crossOrigin === 'anonymous' ) ? 'same-origin' : 'include';\n\t\tfetchOptions.headers = this.requestHeader;\n\n\t\tfetch( url, fetchOptions ).then( function ( res ) {\n\n\t\t\treturn res.blob();\n\n\t\t} ).then( function ( blob ) {\n\n\t\t\treturn createImageBitmap( blob, Object.assign( scope.options, { colorSpaceConversion: 'none' } ) );\n\n\t\t} ).then( function ( imageBitmap ) {\n\n\t\t\tCache.add( url, imageBitmap );\n\n\t\t\tif ( onLoad ) onLoad( imageBitmap );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} ).catch( function ( e ) {\n\n\t\t\tif ( onError ) onError( e );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} );\n\n\t\tscope.manager.itemStart( url );\n\n\t}\n\n}\n\nImageBitmapLoader.prototype.isImageBitmapLoader = true;\n\nlet _context;\n\nconst AudioContext = {\n\n\tgetContext: function () {\n\n\t\tif ( _context === undefined ) {\n\n\t\t\t_context = new ( window.AudioContext || window.webkitAudioContext )();\n\n\t\t}\n\n\t\treturn _context;\n\n\t},\n\n\tsetContext: function ( value ) {\n\n\t\t_context = value;\n\n\t}\n\n};\n\nclass AudioLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\ttry {\n\n\t\t\t\t// Create a copy of the buffer. The `decodeAudioData` method\n\t\t\t\t// detaches the buffer when complete, preventing reuse.\n\t\t\t\tconst bufferCopy = buffer.slice( 0 );\n\n\t\t\t\tconst context = AudioContext.getContext();\n\t\t\t\tcontext.decodeAudioData( bufferCopy, function ( audioBuffer ) {\n\n\t\t\t\t\tonLoad( audioBuffer );\n\n\t\t\t\t} );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n}\n\nclass HemisphereLightProbe extends LightProbe {\n\n\tconstructor( skyColor, groundColor, intensity = 1 ) {\n\n\t\tsuper( undefined, intensity );\n\n\t\tconst color1 = new Color().set( skyColor );\n\t\tconst color2 = new Color().set( groundColor );\n\n\t\tconst sky = new Vector3( color1.r, color1.g, color1.b );\n\t\tconst ground = new Vector3( color2.r, color2.g, color2.b );\n\n\t\t// without extra factor of PI in the shader, should = 1 / Math.sqrt( Math.PI );\n\t\tconst c0 = Math.sqrt( Math.PI );\n\t\tconst c1 = c0 * Math.sqrt( 0.75 );\n\n\t\tthis.sh.coefficients[ 0 ].copy( sky ).add( ground ).multiplyScalar( c0 );\n\t\tthis.sh.coefficients[ 1 ].copy( sky ).sub( ground ).multiplyScalar( c1 );\n\n\t}\n\n}\n\nHemisphereLightProbe.prototype.isHemisphereLightProbe = true;\n\nclass AmbientLightProbe extends LightProbe {\n\n\tconstructor( color, intensity = 1 ) {\n\n\t\tsuper( undefined, intensity );\n\n\t\tconst color1 = new Color().set( color );\n\n\t\t// without extra factor of PI in the shader, would be 2 / Math.sqrt( Math.PI );\n\t\tthis.sh.coefficients[ 0 ].set( color1.r, color1.g, color1.b ).multiplyScalar( 2 * Math.sqrt( Math.PI ) );\n\n\t}\n\n}\n\nAmbientLightProbe.prototype.isAmbientLightProbe = true;\n\nconst _eyeRight = /*@__PURE__*/ new Matrix4();\nconst _eyeLeft = /*@__PURE__*/ new Matrix4();\nconst _projectionMatrix = /*@__PURE__*/ new Matrix4();\n\nclass StereoCamera {\n\n\tconstructor() {\n\n\t\tthis.type = 'StereoCamera';\n\n\t\tthis.aspect = 1;\n\n\t\tthis.eyeSep = 0.064;\n\n\t\tthis.cameraL = new PerspectiveCamera();\n\t\tthis.cameraL.layers.enable( 1 );\n\t\tthis.cameraL.matrixAutoUpdate = false;\n\n\t\tthis.cameraR = new PerspectiveCamera();\n\t\tthis.cameraR.layers.enable( 2 );\n\t\tthis.cameraR.matrixAutoUpdate = false;\n\n\t\tthis._cache = {\n\t\t\tfocus: null,\n\t\t\tfov: null,\n\t\t\taspect: null,\n\t\t\tnear: null,\n\t\t\tfar: null,\n\t\t\tzoom: null,\n\t\t\teyeSep: null\n\t\t};\n\n\t}\n\n\tupdate( camera ) {\n\n\t\tconst cache = this._cache;\n\n\t\tconst needsUpdate = cache.focus !== camera.focus || cache.fov !== camera.fov ||\n\t\t\tcache.aspect !== camera.aspect * this.aspect || cache.near !== camera.near ||\n\t\t\tcache.far !== camera.far || cache.zoom !== camera.zoom || cache.eyeSep !== this.eyeSep;\n\n\t\tif ( needsUpdate ) {\n\n\t\t\tcache.focus = camera.focus;\n\t\t\tcache.fov = camera.fov;\n\t\t\tcache.aspect = camera.aspect * this.aspect;\n\t\t\tcache.near = camera.near;\n\t\t\tcache.far = camera.far;\n\t\t\tcache.zoom = camera.zoom;\n\t\t\tcache.eyeSep = this.eyeSep;\n\n\t\t\t// Off-axis stereoscopic effect based on\n\t\t\t// http://paulbourke.net/stereographics/stereorender/\n\n\t\t\t_projectionMatrix.copy( camera.projectionMatrix );\n\t\t\tconst eyeSepHalf = cache.eyeSep / 2;\n\t\t\tconst eyeSepOnProjection = eyeSepHalf * cache.near / cache.focus;\n\t\t\tconst ymax = ( cache.near * Math.tan( DEG2RAD * cache.fov * 0.5 ) ) / cache.zoom;\n\t\t\tlet xmin, xmax;\n\n\t\t\t// translate xOffset\n\n\t\t\t_eyeLeft.elements[ 12 ] = - eyeSepHalf;\n\t\t\t_eyeRight.elements[ 12 ] = eyeSepHalf;\n\n\t\t\t// for left eye\n\n\t\t\txmin = - ymax * cache.aspect + eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect + eyeSepOnProjection;\n\n\t\t\t_projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t_projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraL.projectionMatrix.copy( _projectionMatrix );\n\n\t\t\t// for right eye\n\n\t\t\txmin = - ymax * cache.aspect - eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect - eyeSepOnProjection;\n\n\t\t\t_projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t_projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraR.projectionMatrix.copy( _projectionMatrix );\n\n\t\t}\n\n\t\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeLeft );\n\t\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeRight );\n\n\t}\n\n}\n\nclass Clock {\n\n\tconstructor( autoStart = true ) {\n\n\t\tthis.autoStart = autoStart;\n\n\t\tthis.startTime = 0;\n\t\tthis.oldTime = 0;\n\t\tthis.elapsedTime = 0;\n\n\t\tthis.running = false;\n\n\t}\n\n\tstart() {\n\n\t\tthis.startTime = now();\n\n\t\tthis.oldTime = this.startTime;\n\t\tthis.elapsedTime = 0;\n\t\tthis.running = true;\n\n\t}\n\n\tstop() {\n\n\t\tthis.getElapsedTime();\n\t\tthis.running = false;\n\t\tthis.autoStart = false;\n\n\t}\n\n\tgetElapsedTime() {\n\n\t\tthis.getDelta();\n\t\treturn this.elapsedTime;\n\n\t}\n\n\tgetDelta() {\n\n\t\tlet diff = 0;\n\n\t\tif ( this.autoStart && ! this.running ) {\n\n\t\t\tthis.start();\n\t\t\treturn 0;\n\n\t\t}\n\n\t\tif ( this.running ) {\n\n\t\t\tconst newTime = now();\n\n\t\t\tdiff = ( newTime - this.oldTime ) / 1000;\n\t\t\tthis.oldTime = newTime;\n\n\t\t\tthis.elapsedTime += diff;\n\n\t\t}\n\n\t\treturn diff;\n\n\t}\n\n}\n\nfunction now() {\n\n\treturn ( typeof performance === 'undefined' ? Date : performance ).now(); // see #10732\n\n}\n\nconst _position$1 = /*@__PURE__*/ new Vector3();\nconst _quaternion$1 = /*@__PURE__*/ new Quaternion();\nconst _scale$1 = /*@__PURE__*/ new Vector3();\nconst _orientation$1 = /*@__PURE__*/ new Vector3();\n\nclass AudioListener extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'AudioListener';\n\n\t\tthis.context = AudioContext.getContext();\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( this.context.destination );\n\n\t\tthis.filter = null;\n\n\t\tthis.timeDelta = 0;\n\n\t\t// private\n\n\t\tthis._clock = new Clock();\n\n\t}\n\n\tgetInput() {\n\n\t\treturn this.gain;\n\n\t}\n\n\tremoveFilter() {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\t\t\tthis.gain.connect( this.context.destination );\n\t\t\tthis.filter = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetFilter() {\n\n\t\treturn this.filter;\n\n\t}\n\n\tsetFilter( value ) {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\n\t\t} else {\n\n\t\t\tthis.gain.disconnect( this.context.destination );\n\n\t\t}\n\n\t\tthis.filter = value;\n\t\tthis.gain.connect( this.filter );\n\t\tthis.filter.connect( this.context.destination );\n\n\t\treturn this;\n\n\t}\n\n\tgetMasterVolume() {\n\n\t\treturn this.gain.gain.value;\n\n\t}\n\n\tsetMasterVolume( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tconst listener = this.context.listener;\n\t\tconst up = this.up;\n\n\t\tthis.timeDelta = this._clock.getDelta();\n\n\t\tthis.matrixWorld.decompose( _position$1, _quaternion$1, _scale$1 );\n\n\t\t_orientation$1.set( 0, 0, - 1 ).applyQuaternion( _quaternion$1 );\n\n\t\tif ( listener.positionX ) {\n\n\t\t\t// code path for Chrome (see #14393)\n\n\t\t\tconst endTime = this.context.currentTime + this.timeDelta;\n\n\t\t\tlistener.positionX.linearRampToValueAtTime( _position$1.x, endTime );\n\t\t\tlistener.positionY.linearRampToValueAtTime( _position$1.y, endTime );\n\t\t\tlistener.positionZ.linearRampToValueAtTime( _position$1.z, endTime );\n\t\t\tlistener.forwardX.linearRampToValueAtTime( _orientation$1.x, endTime );\n\t\t\tlistener.forwardY.linearRampToValueAtTime( _orientation$1.y, endTime );\n\t\t\tlistener.forwardZ.linearRampToValueAtTime( _orientation$1.z, endTime );\n\t\t\tlistener.upX.linearRampToValueAtTime( up.x, endTime );\n\t\t\tlistener.upY.linearRampToValueAtTime( up.y, endTime );\n\t\t\tlistener.upZ.linearRampToValueAtTime( up.z, endTime );\n\n\t\t} else {\n\n\t\t\tlistener.setPosition( _position$1.x, _position$1.y, _position$1.z );\n\t\t\tlistener.setOrientation( _orientation$1.x, _orientation$1.y, _orientation$1.z, up.x, up.y, up.z );\n\n\t\t}\n\n\t}\n\n}\n\nclass Audio extends Object3D {\n\n\tconstructor( listener ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Audio';\n\n\t\tthis.listener = listener;\n\t\tthis.context = listener.context;\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( listener.getInput() );\n\n\t\tthis.autoplay = false;\n\n\t\tthis.buffer = null;\n\t\tthis.detune = 0;\n\t\tthis.loop = false;\n\t\tthis.loopStart = 0;\n\t\tthis.loopEnd = 0;\n\t\tthis.offset = 0;\n\t\tthis.duration = undefined;\n\t\tthis.playbackRate = 1;\n\t\tthis.isPlaying = false;\n\t\tthis.hasPlaybackControl = true;\n\t\tthis.source = null;\n\t\tthis.sourceType = 'empty';\n\n\t\tthis._startedAt = 0;\n\t\tthis._progress = 0;\n\t\tthis._connected = false;\n\n\t\tthis.filters = [];\n\n\t}\n\n\tgetOutput() {\n\n\t\treturn this.gain;\n\n\t}\n\n\tsetNodeSource( audioNode ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'audioNode';\n\t\tthis.source = audioNode;\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetMediaElementSource( mediaElement ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaNode';\n\t\tthis.source = this.context.createMediaElementSource( mediaElement );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetMediaStreamSource( mediaStream ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaStreamNode';\n\t\tthis.source = this.context.createMediaStreamSource( mediaStream );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetBuffer( audioBuffer ) {\n\n\t\tthis.buffer = audioBuffer;\n\t\tthis.sourceType = 'buffer';\n\n\t\tif ( this.autoplay ) this.play();\n\n\t\treturn this;\n\n\t}\n\n\tplay( delay = 0 ) {\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._startedAt = this.context.currentTime + delay;\n\n\t\tconst source = this.context.createBufferSource();\n\t\tsource.buffer = this.buffer;\n\t\tsource.loop = this.loop;\n\t\tsource.loopStart = this.loopStart;\n\t\tsource.loopEnd = this.loopEnd;\n\t\tsource.onended = this.onEnded.bind( this );\n\t\tsource.start( this._startedAt, this._progress + this.offset, this.duration );\n\n\t\tthis.isPlaying = true;\n\n\t\tthis.source = source;\n\n\t\tthis.setDetune( this.detune );\n\t\tthis.setPlaybackRate( this.playbackRate );\n\n\t\treturn this.connect();\n\n\t}\n\n\tpause() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\t// update current progress\n\n\t\t\tthis._progress += Math.max( this.context.currentTime - this._startedAt, 0 ) * this.playbackRate;\n\n\t\t\tif ( this.loop === true ) {\n\n\t\t\t\t// ensure _progress does not exceed duration with looped audios\n\n\t\t\t\tthis._progress = this._progress % ( this.duration || this.buffer.duration );\n\n\t\t\t}\n\n\t\t\tthis.source.stop();\n\t\t\tthis.source.onended = null;\n\n\t\t\tthis.isPlaying = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tstop() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._progress = 0;\n\n\t\tthis.source.stop();\n\t\tthis.source.onended = null;\n\t\tthis.isPlaying = false;\n\n\t\treturn this;\n\n\t}\n\n\tconnect() {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.connect( this.filters[ 0 ] );\n\n\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].connect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].connect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.connect( this.getOutput() );\n\n\t\t}\n\n\t\tthis._connected = true;\n\n\t\treturn this;\n\n\t}\n\n\tdisconnect() {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.disconnect( this.filters[ 0 ] );\n\n\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].disconnect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.disconnect( this.getOutput() );\n\n\t\t}\n\n\t\tthis._connected = false;\n\n\t\treturn this;\n\n\t}\n\n\tgetFilters() {\n\n\t\treturn this.filters;\n\n\t}\n\n\tsetFilters( value ) {\n\n\t\tif ( ! value ) value = [];\n\n\t\tif ( this._connected === true ) {\n\n\t\t\tthis.disconnect();\n\t\t\tthis.filters = value.slice();\n\t\t\tthis.connect();\n\n\t\t} else {\n\n\t\t\tthis.filters = value.slice();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetDetune( value ) {\n\n\t\tthis.detune = value;\n\n\t\tif ( this.source.detune === undefined ) return; // only set detune when available\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.detune.setTargetAtTime( this.detune, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetDetune() {\n\n\t\treturn this.detune;\n\n\t}\n\n\tgetFilter() {\n\n\t\treturn this.getFilters()[ 0 ];\n\n\t}\n\n\tsetFilter( filter ) {\n\n\t\treturn this.setFilters( filter ? [ filter ] : [] );\n\n\t}\n\n\tsetPlaybackRate( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.playbackRate = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.playbackRate.setTargetAtTime( this.playbackRate, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetPlaybackRate() {\n\n\t\treturn this.playbackRate;\n\n\t}\n\n\tonEnded() {\n\n\t\tthis.isPlaying = false;\n\n\t}\n\n\tgetLoop() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn this.loop;\n\n\t}\n\n\tsetLoop( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.loop = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.loop = this.loop;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetLoopStart( value ) {\n\n\t\tthis.loopStart = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetLoopEnd( value ) {\n\n\t\tthis.loopEnd = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetVolume() {\n\n\t\treturn this.gain.gain.value;\n\n\t}\n\n\tsetVolume( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _position = /*@__PURE__*/ new Vector3();\nconst _quaternion = /*@__PURE__*/ new Quaternion();\nconst _scale = /*@__PURE__*/ new Vector3();\nconst _orientation = /*@__PURE__*/ new Vector3();\n\nclass PositionalAudio extends Audio {\n\n\tconstructor( listener ) {\n\n\t\tsuper( listener );\n\n\t\tthis.panner = this.context.createPanner();\n\t\tthis.panner.panningModel = 'HRTF';\n\t\tthis.panner.connect( this.gain );\n\n\t}\n\n\tdisconnect() {\n\n\t\tsuper.disconnect();\n\n\t\tthis.panner.disconnect( this.gain );\n\n\t}\n\n\tgetOutput() {\n\n\t\treturn this.panner;\n\n\t}\n\n\tgetRefDistance() {\n\n\t\treturn this.panner.refDistance;\n\n\t}\n\n\tsetRefDistance( value ) {\n\n\t\tthis.panner.refDistance = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetRolloffFactor() {\n\n\t\treturn this.panner.rolloffFactor;\n\n\t}\n\n\tsetRolloffFactor( value ) {\n\n\t\tthis.panner.rolloffFactor = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetDistanceModel() {\n\n\t\treturn this.panner.distanceModel;\n\n\t}\n\n\tsetDistanceModel( value ) {\n\n\t\tthis.panner.distanceModel = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxDistance() {\n\n\t\treturn this.panner.maxDistance;\n\n\t}\n\n\tsetMaxDistance( value ) {\n\n\t\tthis.panner.maxDistance = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetDirectionalCone( coneInnerAngle, coneOuterAngle, coneOuterGain ) {\n\n\t\tthis.panner.coneInnerAngle = coneInnerAngle;\n\t\tthis.panner.coneOuterAngle = coneOuterAngle;\n\t\tthis.panner.coneOuterGain = coneOuterGain;\n\n\t\treturn this;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tif ( this.hasPlaybackControl === true && this.isPlaying === false ) return;\n\n\t\tthis.matrixWorld.decompose( _position, _quaternion, _scale );\n\n\t\t_orientation.set( 0, 0, 1 ).applyQuaternion( _quaternion );\n\n\t\tconst panner = this.panner;\n\n\t\tif ( panner.positionX ) {\n\n\t\t\t// code path for Chrome and Firefox (see #14393)\n\n\t\t\tconst endTime = this.context.currentTime + this.listener.timeDelta;\n\n\t\t\tpanner.positionX.linearRampToValueAtTime( _position.x, endTime );\n\t\t\tpanner.positionY.linearRampToValueAtTime( _position.y, endTime );\n\t\t\tpanner.positionZ.linearRampToValueAtTime( _position.z, endTime );\n\t\t\tpanner.orientationX.linearRampToValueAtTime( _orientation.x, endTime );\n\t\t\tpanner.orientationY.linearRampToValueAtTime( _orientation.y, endTime );\n\t\t\tpanner.orientationZ.linearRampToValueAtTime( _orientation.z, endTime );\n\n\t\t} else {\n\n\t\t\tpanner.setPosition( _position.x, _position.y, _position.z );\n\t\t\tpanner.setOrientation( _orientation.x, _orientation.y, _orientation.z );\n\n\t\t}\n\n\t}\n\n}\n\nclass AudioAnalyser {\n\n\tconstructor( audio, fftSize = 2048 ) {\n\n\t\tthis.analyser = audio.context.createAnalyser();\n\t\tthis.analyser.fftSize = fftSize;\n\n\t\tthis.data = new Uint8Array( this.analyser.frequencyBinCount );\n\n\t\taudio.getOutput().connect( this.analyser );\n\n\t}\n\n\n\tgetFrequencyData() {\n\n\t\tthis.analyser.getByteFrequencyData( this.data );\n\n\t\treturn this.data;\n\n\t}\n\n\tgetAverageFrequency() {\n\n\t\tlet value = 0;\n\t\tconst data = this.getFrequencyData();\n\n\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\tvalue += data[ i ];\n\n\t\t}\n\n\t\treturn value / data.length;\n\n\t}\n\n}\n\nclass PropertyMixer {\n\n\tconstructor( binding, typeName, valueSize ) {\n\n\t\tthis.binding = binding;\n\t\tthis.valueSize = valueSize;\n\n\t\tlet mixFunction,\n\t\t\tmixFunctionAdditive,\n\t\t\tsetIdentity;\n\n\t\t// buffer layout: [ incoming | accu0 | accu1 | orig | addAccu | (optional work) ]\n\t\t//\n\t\t// interpolators can use .buffer as their .result\n\t\t// the data then goes to 'incoming'\n\t\t//\n\t\t// 'accu0' and 'accu1' are used frame-interleaved for\n\t\t// the cumulative result and are compared to detect\n\t\t// changes\n\t\t//\n\t\t// 'orig' stores the original state of the property\n\t\t//\n\t\t// 'add' is used for additive cumulative results\n\t\t//\n\t\t// 'work' is optional and is only present for quaternion types. It is used\n\t\t// to store intermediate quaternion multiplication results\n\n\t\tswitch ( typeName ) {\n\n\t\t\tcase 'quaternion':\n\t\t\t\tmixFunction = this._slerp;\n\t\t\t\tmixFunctionAdditive = this._slerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityQuaternion;\n\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 6 );\n\t\t\t\tthis._workIndex = 5;\n\t\t\t\tbreak;\n\n\t\t\tcase 'string':\n\t\t\tcase 'bool':\n\t\t\t\tmixFunction = this._select;\n\n\t\t\t\t// Use the regular mix function and for additive on these types,\n\t\t\t\t// additive is not relevant for non-numeric types\n\t\t\t\tmixFunctionAdditive = this._select;\n\n\t\t\t\tsetIdentity = this._setAdditiveIdentityOther;\n\n\t\t\t\tthis.buffer = new Array( valueSize * 5 );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tmixFunction = this._lerp;\n\t\t\t\tmixFunctionAdditive = this._lerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityNumeric;\n\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 5 );\n\n\t\t}\n\n\t\tthis._mixBufferRegion = mixFunction;\n\t\tthis._mixBufferRegionAdditive = mixFunctionAdditive;\n\t\tthis._setIdentity = setIdentity;\n\t\tthis._origIndex = 3;\n\t\tthis._addIndex = 4;\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\tthis.useCount = 0;\n\t\tthis.referenceCount = 0;\n\n\t}\n\n\t// accumulate data in the 'incoming' region into 'accu<i>'\n\taccumulate( accuIndex, weight ) {\n\n\t\t// note: happily accumulating nothing when weight = 0, the caller knows\n\t\t// the weight and shouldn't have made the call in the first place\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = accuIndex * stride + stride;\n\n\t\tlet currentWeight = this.cumulativeWeight;\n\n\t\tif ( currentWeight === 0 ) {\n\n\t\t\t// accuN := incoming * weight\n\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ offset + i ] = buffer[ i ];\n\n\t\t\t}\n\n\t\t\tcurrentWeight = weight;\n\n\t\t} else {\n\n\t\t\t// accuN := accuN + incoming * weight\n\n\t\t\tcurrentWeight += weight;\n\t\t\tconst mix = weight / currentWeight;\n\t\t\tthis._mixBufferRegion( buffer, offset, 0, mix, stride );\n\n\t\t}\n\n\t\tthis.cumulativeWeight = currentWeight;\n\n\t}\n\n\t// accumulate data in the 'incoming' region into 'add'\n\taccumulateAdditive( weight ) {\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = stride * this._addIndex;\n\n\t\tif ( this.cumulativeWeightAdditive === 0 ) {\n\n\t\t\t// add = identity\n\n\t\t\tthis._setIdentity();\n\n\t\t}\n\n\t\t// add := add + incoming * weight\n\n\t\tthis._mixBufferRegionAdditive( buffer, offset, 0, weight, stride );\n\t\tthis.cumulativeWeightAdditive += weight;\n\n\t}\n\n\t// apply the state of 'accu<i>' to the binding when accus differ\n\tapply( accuIndex ) {\n\n\t\tconst stride = this.valueSize,\n\t\t\tbuffer = this.buffer,\n\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\tweight = this.cumulativeWeight,\n\t\t\tweightAdditive = this.cumulativeWeightAdditive,\n\n\t\t\tbinding = this.binding;\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\tif ( weight < 1 ) {\n\n\t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\n\n\t\t\tconst originalValueOffset = stride * this._origIndex;\n\n\t\t\tthis._mixBufferRegion(\n\t\t\t\tbuffer, offset, originalValueOffset, 1 - weight, stride );\n\n\t\t}\n\n\t\tif ( weightAdditive > 0 ) {\n\n\t\t\t// accuN := accuN + additive accuN\n\n\t\t\tthis._mixBufferRegionAdditive( buffer, offset, this._addIndex * stride, 1, stride );\n\n\t\t}\n\n\t\tfor ( let i = stride, e = stride + stride; i !== e; ++ i ) {\n\n\t\t\tif ( buffer[ i ] !== buffer[ i + stride ] ) {\n\n\t\t\t\t// value has changed -> update scene graph\n\n\t\t\t\tbinding.setValue( buffer, offset );\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// remember the state of the bound property and copy it to both accus\n\tsaveOriginalState() {\n\n\t\tconst binding = this.binding;\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\n\t\t\toriginalValueOffset = stride * this._origIndex;\n\n\t\tbinding.getValue( buffer, originalValueOffset );\n\n\t\t// accu[0..1] := orig -- initially detect changes against the original\n\t\tfor ( let i = stride, e = originalValueOffset; i !== e; ++ i ) {\n\n\t\t\tbuffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];\n\n\t\t}\n\n\t\t// Add to identity for additive\n\t\tthis._setIdentity();\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t}\n\n\t// apply the state previously taken via 'saveOriginalState' to the binding\n\trestoreOriginalState() {\n\n\t\tconst originalValueOffset = this.valueSize * 3;\n\t\tthis.binding.setValue( this.buffer, originalValueOffset );\n\n\t}\n\n\t_setAdditiveIdentityNumeric() {\n\n\t\tconst startIndex = this._addIndex * this.valueSize;\n\t\tconst endIndex = startIndex + this.valueSize;\n\n\t\tfor ( let i = startIndex; i < endIndex; i ++ ) {\n\n\t\t\tthis.buffer[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\t_setAdditiveIdentityQuaternion() {\n\n\t\tthis._setAdditiveIdentityNumeric();\n\t\tthis.buffer[ this._addIndex * this.valueSize + 3 ] = 1;\n\n\t}\n\n\t_setAdditiveIdentityOther() {\n\n\t\tconst startIndex = this._origIndex * this.valueSize;\n\t\tconst targetIndex = this._addIndex * this.valueSize;\n\n\t\tfor ( let i = 0; i < this.valueSize; i ++ ) {\n\n\t\t\tthis.buffer[ targetIndex + i ] = this.buffer[ startIndex + i ];\n\n\t\t}\n\n\t}\n\n\n\t// mix functions\n\n\t_select( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tif ( t >= 0.5 ) {\n\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ dstOffset + i ] = buffer[ srcOffset + i ];\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_slerp( buffer, dstOffset, srcOffset, t ) {\n\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t );\n\n\t}\n\n\t_slerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tconst workOffset = this._workIndex * stride;\n\n\t\t// Store result in intermediate buffer offset\n\t\tQuaternion.multiplyQuaternionsFlat( buffer, workOffset, buffer, dstOffset, buffer, srcOffset );\n\n\t\t// Slerp to the intermediate result\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, workOffset, t );\n\n\t}\n\n\t_lerp( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tconst s = 1 - t;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tconst j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n\t_lerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tconst j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n}\n\n// Characters [].:/ are reserved for track binding syntax.\nconst _RESERVED_CHARS_RE = '\\\\[\\\\]\\\\.:\\\\/';\nconst _reservedRe = new RegExp( '[' + _RESERVED_CHARS_RE + ']', 'g' );\n\n// Attempts to allow node names from any language. ES5's `\\w` regexp matches\n// only latin characters, and the unicode \\p{L} is not yet supported. So\n// instead, we exclude reserved characters and match everything else.\nconst _wordChar = '[^' + _RESERVED_CHARS_RE + ']';\nconst _wordCharOrDot = '[^' + _RESERVED_CHARS_RE.replace( '\\\\.', '' ) + ']';\n\n// Parent directories, delimited by '/' or ':'. Currently unused, but must\n// be matched to parse the rest of the track name.\nconst _directoryRe = /((?:WC+[\\/:])*)/.source.replace( 'WC', _wordChar );\n\n// Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\nconst _nodeRe = /(WCOD+)?/.source.replace( 'WCOD', _wordCharOrDot );\n\n// Object on target node, and accessor. May not contain reserved\n// characters. Accessor may contain any character except closing bracket.\nconst _objectRe = /(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace( 'WC', _wordChar );\n\n// Property and accessor. May not contain reserved characters. Accessor may\n// contain any non-bracket characters.\nconst _propertyRe = /\\.(WC+)(?:\\[(.+)\\])?/.source.replace( 'WC', _wordChar );\n\nconst _trackRe = new RegExp( ''\n\t+ '^'\n\t+ _directoryRe\n\t+ _nodeRe\n\t+ _objectRe\n\t+ _propertyRe\n\t+ '$'\n);\n\nconst _supportedObjectNames = [ 'material', 'materials', 'bones' ];\n\nclass Composite {\n\n\tconstructor( targetGroup, path, optionalParsedPath ) {\n\n\t\tconst parsedPath = optionalParsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis._targetGroup = targetGroup;\n\t\tthis._bindings = targetGroup.subscribe_( path, parsedPath );\n\n\t}\n\n\tgetValue( array, offset ) {\n\n\t\tthis.bind(); // bind all binding\n\n\t\tconst firstValidIndex = this._targetGroup.nCachedObjects_,\n\t\t\tbinding = this._bindings[ firstValidIndex ];\n\n\t\t// and only call .getValue on the first\n\t\tif ( binding !== undefined ) binding.getValue( array, offset );\n\n\t}\n\n\tsetValue( array, offset ) {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].setValue( array, offset );\n\n\t\t}\n\n\t}\n\n\tbind() {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].bind();\n\n\t\t}\n\n\t}\n\n\tunbind() {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].unbind();\n\n\t\t}\n\n\t}\n\n}\n\n// Note: This class uses a State pattern on a per-method basis:\n// 'bind' sets 'this.getValue' / 'setValue' and shadows the\n// prototype version of these methods with one that represents\n// the bound state. When the property is not found, the methods\n// become no-ops.\nclass PropertyBinding {\n\n\tconstructor( rootNode, path, parsedPath ) {\n\n\t\tthis.path = path;\n\t\tthis.parsedPath = parsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis.node = PropertyBinding.findNode( rootNode, this.parsedPath.nodeName ) || rootNode;\n\n\t\tthis.rootNode = rootNode;\n\n\t\t// initial state of these methods that calls 'bind'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n\n\tstatic create( root, path, parsedPath ) {\n\n\t\tif ( ! ( root && root.isAnimationObjectGroup ) ) {\n\n\t\t\treturn new PropertyBinding( root, path, parsedPath );\n\n\t\t} else {\n\n\t\t\treturn new PropertyBinding.Composite( root, path, parsedPath );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Replaces spaces with underscores and removes unsupported characters from\n\t * node names, to ensure compatibility with parseTrackName().\n\t *\n\t * @param {string} name Node name to be sanitized.\n\t * @return {string}\n\t */\n\tstatic sanitizeNodeName( name ) {\n\n\t\treturn name.replace( /\\s/g, '_' ).replace( _reservedRe, '' );\n\n\t}\n\n\tstatic parseTrackName( trackName ) {\n\n\t\tconst matches = _trackRe.exec( trackName );\n\n\t\tif ( matches === null ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: Cannot parse trackName: ' + trackName );\n\n\t\t}\n\n\t\tconst results = {\n\t\t\t// directoryName: matches[ 1 ], // (tschw) currently unused\n\t\t\tnodeName: matches[ 2 ],\n\t\t\tobjectName: matches[ 3 ],\n\t\t\tobjectIndex: matches[ 4 ],\n\t\t\tpropertyName: matches[ 5 ], // required\n\t\t\tpropertyIndex: matches[ 6 ]\n\t\t};\n\n\t\tconst lastDot = results.nodeName && results.nodeName.lastIndexOf( '.' );\n\n\t\tif ( lastDot !== undefined && lastDot !== - 1 ) {\n\n\t\t\tconst objectName = results.nodeName.substring( lastDot + 1 );\n\n\t\t\t// Object names must be checked against an allowlist. Otherwise, there\n\t\t\t// is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n\t\t\t// 'bar' could be the objectName, or part of a nodeName (which can\n\t\t\t// include '.' characters).\n\t\t\tif ( _supportedObjectNames.indexOf( objectName ) !== - 1 ) {\n\n\t\t\t\tresults.nodeName = results.nodeName.substring( 0, lastDot );\n\t\t\t\tresults.objectName = objectName;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( results.propertyName === null || results.propertyName.length === 0 ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: can not parse propertyName from trackName: ' + trackName );\n\n\t\t}\n\n\t\treturn results;\n\n\t}\n\n\tstatic findNode( root, nodeName ) {\n\n\t\tif ( nodeName === undefined || nodeName === '' || nodeName === '.' || nodeName === - 1 || nodeName === root.name || nodeName === root.uuid ) {\n\n\t\t\treturn root;\n\n\t\t}\n\n\t\t// search into skeleton bones.\n\t\tif ( root.skeleton ) {\n\n\t\t\tconst bone = root.skeleton.getBoneByName( nodeName );\n\n\t\t\tif ( bone !== undefined ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// search into node subtree.\n\t\tif ( root.children ) {\n\n\t\t\tconst searchNodeSubtree = function ( children ) {\n\n\t\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\t\tconst childNode = children[ i ];\n\n\t\t\t\t\tif ( childNode.name === nodeName || childNode.uuid === nodeName ) {\n\n\t\t\t\t\t\treturn childNode;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst result = searchNodeSubtree( childNode.children );\n\n\t\t\t\t\tif ( result ) return result;\n\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\n\t\t\t};\n\n\t\t\tconst subTreeNode = searchNodeSubtree( root.children );\n\n\t\t\tif ( subTreeNode ) {\n\n\t\t\t\treturn subTreeNode;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t// these are used to \"bind\" a nonexistent property\n\t_getValue_unavailable() {}\n\t_setValue_unavailable() {}\n\n\t// Getters\n\n\t_getValue_direct( buffer, offset ) {\n\n\t\tbuffer[ offset ] = this.targetObject[ this.propertyName ];\n\n\t}\n\n\t_getValue_array( buffer, offset ) {\n\n\t\tconst source = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = source.length; i !== n; ++ i ) {\n\n\t\t\tbuffer[ offset ++ ] = source[ i ];\n\n\t\t}\n\n\t}\n\n\t_getValue_arrayElement( buffer, offset ) {\n\n\t\tbuffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\n\n\t}\n\n\t_getValue_toArray( buffer, offset ) {\n\n\t\tthis.resolvedProperty.toArray( buffer, offset );\n\n\t}\n\n\t// Direct\n\n\t_setValue_direct( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\n\t}\n\n\t_setValue_direct_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// EntireArray\n\n\t_setValue_array( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t}\n\n\t_setValue_array_setNeedsUpdate( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// ArrayElement\n\n\t_setValue_arrayElement( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\n\t}\n\n\t_setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// HasToFromArray\n\n\t_setValue_fromArray( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\n\t}\n\n\t_setValue_fromArray_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t_getValue_unbound( targetArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.getValue( targetArray, offset );\n\n\t}\n\n\t_setValue_unbound( sourceArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.setValue( sourceArray, offset );\n\n\t}\n\n\t// create getter / setter pair for a property in the scene graph\n\tbind() {\n\n\t\tlet targetObject = this.node;\n\t\tconst parsedPath = this.parsedPath;\n\n\t\tconst objectName = parsedPath.objectName;\n\t\tconst propertyName = parsedPath.propertyName;\n\t\tlet propertyIndex = parsedPath.propertyIndex;\n\n\t\tif ( ! targetObject ) {\n\n\t\t\ttargetObject = PropertyBinding.findNode( this.rootNode, parsedPath.nodeName ) || this.rootNode;\n\n\t\t\tthis.node = targetObject;\n\n\t\t}\n\n\t\t// set fail state so we can just 'return' on error\n\t\tthis.getValue = this._getValue_unavailable;\n\t\tthis.setValue = this._setValue_unavailable;\n\n\t\t// ensure there is a value node\n\t\tif ( ! targetObject ) {\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update node for track: ' + this.path + ' but it wasn\\'t found.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( objectName ) {\n\n\t\t\tlet objectIndex = parsedPath.objectIndex;\n\n\t\t\t// special cases were we need to reach deeper into the hierarchy to get the face materials....\n\t\t\tswitch ( objectName ) {\n\n\t\t\t\tcase 'materials':\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.materials ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.materials;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bones':\n\n\t\t\t\t\tif ( ! targetObject.skeleton ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// potential future optimization: skip this if propertyIndex is already an integer\n\t\t\t\t\t// and convert the integer string to a true integer.\n\n\t\t\t\t\ttargetObject = targetObject.skeleton.bones;\n\n\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\tfor ( let i = 0; i < targetObject.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject[ i ].name === objectIndex ) {\n\n\t\t\t\t\t\t\tobjectIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tif ( targetObject[ objectName ] === undefined ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to objectName of node undefined.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject[ objectName ];\n\n\t\t\t}\n\n\n\t\t\tif ( objectIndex !== undefined ) {\n\n\t\t\t\tif ( targetObject[ objectIndex ] === undefined ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\ttargetObject = targetObject[ objectIndex ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// resolve property\n\t\tconst nodeProperty = targetObject[ propertyName ];\n\n\t\tif ( nodeProperty === undefined ) {\n\n\t\t\tconst nodeName = parsedPath.nodeName;\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update property for track: ' + nodeName +\n\t\t\t\t'.' + propertyName + ' but it wasn\\'t found.', targetObject );\n\t\t\treturn;\n\n\t\t}\n\n\t\t// determine versioning scheme\n\t\tlet versioning = this.Versioning.None;\n\n\t\tthis.targetObject = targetObject;\n\n\t\tif ( targetObject.needsUpdate !== undefined ) { // material\n\n\t\t\tversioning = this.Versioning.NeedsUpdate;\n\n\t\t} else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform\n\n\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\n\n\t\t}\n\n\t\t// determine how the property gets bound\n\t\tlet bindingType = this.BindingType.Direct;\n\n\t\tif ( propertyIndex !== undefined ) {\n\n\t\t\t// access a sub element of the property array (only primitives are supported right now)\n\n\t\t\tif ( propertyName === 'morphTargetInfluences' ) {\n\n\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n\n\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\tif ( ! targetObject.geometry ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( targetObject.geometry.isBufferGeometry ) {\n\n\t\t\t\t\tif ( ! targetObject.geometry.morphAttributes ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( targetObject.morphTargetDictionary[ propertyIndex ] !== undefined ) {\n\n\t\t\t\t\t\tpropertyIndex = targetObject.morphTargetDictionary[ propertyIndex ];\n\n\t\t\t\t\t}\n\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tbindingType = this.BindingType.ArrayElement;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\tthis.propertyIndex = propertyIndex;\n\n\t\t} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\n\n\t\t\t// must use copy for Object3D.Euler/Quaternion\n\n\t\t\tbindingType = this.BindingType.HasFromToArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else if ( Array.isArray( nodeProperty ) ) {\n\n\t\t\tbindingType = this.BindingType.EntireArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else {\n\n\t\t\tthis.propertyName = propertyName;\n\n\t\t}\n\n\t\t// select getter / setter\n\t\tthis.getValue = this.GetterByBindingType[ bindingType ];\n\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\n\n\t}\n\n\tunbind() {\n\n\t\tthis.node = null;\n\n\t\t// back to the prototype version of getValue / setValue\n\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n}\n\nPropertyBinding.Composite = Composite;\n\nPropertyBinding.prototype.BindingType = {\n\tDirect: 0,\n\tEntireArray: 1,\n\tArrayElement: 2,\n\tHasFromToArray: 3\n};\n\nPropertyBinding.prototype.Versioning = {\n\tNone: 0,\n\tNeedsUpdate: 1,\n\tMatrixWorldNeedsUpdate: 2\n};\n\nPropertyBinding.prototype.GetterByBindingType = [\n\n\tPropertyBinding.prototype._getValue_direct,\n\tPropertyBinding.prototype._getValue_array,\n\tPropertyBinding.prototype._getValue_arrayElement,\n\tPropertyBinding.prototype._getValue_toArray,\n\n];\n\nPropertyBinding.prototype.SetterByBindingTypeAndVersioning = [\n\n\t[\n\t\t// Direct\n\t\tPropertyBinding.prototype._setValue_direct,\n\t\tPropertyBinding.prototype._setValue_direct_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_direct_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// EntireArray\n\n\t\tPropertyBinding.prototype._setValue_array,\n\t\tPropertyBinding.prototype._setValue_array_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_array_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// ArrayElement\n\t\tPropertyBinding.prototype._setValue_arrayElement,\n\t\tPropertyBinding.prototype._setValue_arrayElement_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// HasToFromArray\n\t\tPropertyBinding.prototype._setValue_fromArray,\n\t\tPropertyBinding.prototype._setValue_fromArray_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate,\n\n\t]\n\n];\n\n/**\n *\n * A group of objects that receives a shared animation state.\n *\n * Usage:\n *\n *  - Add objects you would otherwise pass as 'root' to the\n *    constructor or the .clipAction method of AnimationMixer.\n *\n *  - Instead pass this object as 'root'.\n *\n *  - You can also add and remove objects later when the mixer\n *    is running.\n *\n * Note:\n *\n *    Objects of this class appear as one object to the mixer,\n *    so cache control of the individual objects must be done\n *    on the group.\n *\n * Limitation:\n *\n *  - The animated properties must be compatible among the\n *    all objects in the group.\n *\n *  - A single property can either be controlled through a\n *    target group or directly, but not both.\n */\n\nclass AnimationObjectGroup {\n\n\tconstructor() {\n\n\t\tthis.uuid = generateUUID();\n\n\t\t// cached objects followed by the active ones\n\t\tthis._objects = Array.prototype.slice.call( arguments );\n\n\t\tthis.nCachedObjects_ = 0; // threshold\n\t\t// note: read by PropertyBinding.Composite\n\n\t\tconst indices = {};\n\t\tthis._indicesByUUID = indices; // for bookkeeping\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tindices[ arguments[ i ].uuid ] = i;\n\n\t\t}\n\n\t\tthis._paths = []; // inside: string\n\t\tthis._parsedPaths = []; // inside: { we don't care, here }\n\t\tthis._bindings = []; // inside: Array< PropertyBinding >\n\t\tthis._bindingsIndicesByPath = {}; // inside: indices in these arrays\n\n\t\tconst scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tobjects: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._objects.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn this.total - scope.nCachedObjects_;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tget bindingsPerObject() {\n\n\t\t\t\treturn scope._bindings.length;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tadd() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tpaths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet knownObject = undefined,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid;\n\t\t\tlet index = indicesByUUID[ uuid ];\n\n\t\t\tif ( index === undefined ) {\n\n\t\t\t\t// unknown object -> add it to the ACTIVE region\n\n\t\t\t\tindex = nObjects ++;\n\t\t\t\tindicesByUUID[ uuid ] = index;\n\t\t\t\tobjects.push( object );\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tbindings[ j ].push( new PropertyBinding( object, paths[ j ], parsedPaths[ j ] ) );\n\n\t\t\t\t}\n\n\t\t\t} else if ( index < nCachedObjects ) {\n\n\t\t\t\tknownObject = objects[ index ];\n\n\t\t\t\t// move existing object to the ACTIVE region\n\n\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ];\n\n\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = firstActiveIndex;\n\t\t\t\tobjects[ firstActiveIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ];\n\n\t\t\t\t\tlet binding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\n\t\t\t\t\tif ( binding === undefined ) {\n\n\t\t\t\t\t\t// since we do not bother to create new bindings\n\t\t\t\t\t\t// for objects that are cached, the binding may\n\t\t\t\t\t\t// or may not exist\n\n\t\t\t\t\t\tbinding = new PropertyBinding( object, paths[ j ], parsedPaths[ j ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t} else if ( objects[ index ] !== knownObject ) {\n\n\t\t\t\tconsole.error( 'THREE.AnimationObjectGroup: Different objects with the same UUID ' +\n\t\t\t\t\t'detected. Clean the caches or recreate your infrastructure when reloading scenes.' );\n\n\t\t\t} // else the object is already where we want it to be\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\tremove() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet nCachedObjects = this.nCachedObjects_;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined && index >= nCachedObjects ) {\n\n\t\t\t\t// move existing object into the CACHED region\n\n\t\t\t\tconst lastCachedIndex = nCachedObjects ++,\n\t\t\t\t\tfirstActiveObject = objects[ lastCachedIndex ];\n\n\t\t\t\tindicesByUUID[ firstActiveObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = firstActiveObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = lastCachedIndex;\n\t\t\t\tobjects[ lastCachedIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tfirstActive = bindingsForPath[ lastCachedIndex ],\n\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = firstActive;\n\t\t\t\t\tbindingsForPath[ lastCachedIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\t// remove & forget\n\tuncache() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet nCachedObjects = this.nCachedObjects_,\n\t\t\tnObjects = objects.length;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tdelete indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index < nCachedObjects ) {\n\n\t\t\t\t\t// object is cached, shrink the CACHED region\n\n\t\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ],\n\t\t\t\t\t\tlastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\t// last cached object takes this object's place\n\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\t\t// last object goes to the activated slot and pop\n\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = firstActiveIndex;\n\t\t\t\t\tobjects[ firstActiveIndex ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\t\tlast = bindingsForPath[ lastIndex ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = last;\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// object is active, just swap with the last and pop\n\n\t\t\t\t\tconst lastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\tif ( lastIndex > 0 ) {\n\n\t\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = index;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tobjects[ index ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = bindingsForPath[ lastIndex ];\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} // cached or active\n\n\t\t\t} // if object is known\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\t// Internal interface used by befriended PropertyBinding.Composite:\n\n\tsubscribe_( path, parsedPath ) {\n\n\t\t// returns an array of bindings for the given path that is changed\n\t\t// according to the contained objects in the group\n\n\t\tconst indicesByPath = this._bindingsIndicesByPath;\n\t\tlet index = indicesByPath[ path ];\n\t\tconst bindings = this._bindings;\n\n\t\tif ( index !== undefined ) return bindings[ index ];\n\n\t\tconst paths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tobjects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tbindingsForPath = new Array( nObjects );\n\n\t\tindex = bindings.length;\n\n\t\tindicesByPath[ path ] = index;\n\n\t\tpaths.push( path );\n\t\tparsedPaths.push( parsedPath );\n\t\tbindings.push( bindingsForPath );\n\n\t\tfor ( let i = nCachedObjects, n = objects.length; i !== n; ++ i ) {\n\n\t\t\tconst object = objects[ i ];\n\t\t\tbindingsForPath[ i ] = new PropertyBinding( object, path, parsedPath );\n\n\t\t}\n\n\t\treturn bindingsForPath;\n\n\t}\n\n\tunsubscribe_( path ) {\n\n\t\t// tells the group to forget about a property path and no longer\n\t\t// update the array previously obtained with 'subscribe_'\n\n\t\tconst indicesByPath = this._bindingsIndicesByPath,\n\t\t\tindex = indicesByPath[ path ];\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tconst paths = this._paths,\n\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tlastBindingsIndex = bindings.length - 1,\n\t\t\t\tlastBindings = bindings[ lastBindingsIndex ],\n\t\t\t\tlastBindingsPath = path[ lastBindingsIndex ];\n\n\t\t\tindicesByPath[ lastBindingsPath ] = index;\n\n\t\t\tbindings[ index ] = lastBindings;\n\t\t\tbindings.pop();\n\n\t\t\tparsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\n\t\t\tparsedPaths.pop();\n\n\t\t\tpaths[ index ] = paths[ lastBindingsIndex ];\n\t\t\tpaths.pop();\n\n\t\t}\n\n\t}\n\n}\n\nAnimationObjectGroup.prototype.isAnimationObjectGroup = true;\n\nclass AnimationAction {\n\n\tconstructor( mixer, clip, localRoot = null, blendMode = clip.blendMode ) {\n\n\t\tthis._mixer = mixer;\n\t\tthis._clip = clip;\n\t\tthis._localRoot = localRoot;\n\t\tthis.blendMode = blendMode;\n\n\t\tconst tracks = clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tinterpolants = new Array( nTracks );\n\n\t\tconst interpolantSettings = {\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\t\t};\n\n\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tconst interpolant = tracks[ i ].createInterpolant( null );\n\t\t\tinterpolants[ i ] = interpolant;\n\t\t\tinterpolant.settings = interpolantSettings;\n\n\t\t}\n\n\t\tthis._interpolantSettings = interpolantSettings;\n\n\t\tthis._interpolants = interpolants; // bound by the mixer\n\n\t\t// inside: PropertyMixer (managed by the mixer)\n\t\tthis._propertyBindings = new Array( nTracks );\n\n\t\tthis._cacheIndex = null; // for the memory manager\n\t\tthis._byClipCacheIndex = null; // for the memory manager\n\n\t\tthis._timeScaleInterpolant = null;\n\t\tthis._weightInterpolant = null;\n\n\t\tthis.loop = LoopRepeat;\n\t\tthis._loopCount = - 1;\n\n\t\t// global mixer time when the action is to be started\n\t\t// it's set back to 'null' upon start of the action\n\t\tthis._startTime = null;\n\n\t\t// scaled local time of the action\n\t\t// gets clamped or wrapped to 0..clip.duration according to loop\n\t\tthis.time = 0;\n\n\t\tthis.timeScale = 1;\n\t\tthis._effectiveTimeScale = 1;\n\n\t\tthis.weight = 1;\n\t\tthis._effectiveWeight = 1;\n\n\t\tthis.repetitions = Infinity; // no. of repetitions when looping\n\n\t\tthis.paused = false; // true -> zero effective time scale\n\t\tthis.enabled = true; // false -> zero effective weight\n\n\t\tthis.clampWhenFinished = false;// keep feeding the last frame?\n\n\t\tthis.zeroSlopeAtStart = true;// for smooth interpolation w/o separate\n\t\tthis.zeroSlopeAtEnd = true;// clips for start, loop and end\n\n\t}\n\n\t// State & Scheduling\n\n\tplay() {\n\n\t\tthis._mixer._activateAction( this );\n\n\t\treturn this;\n\n\t}\n\n\tstop() {\n\n\t\tthis._mixer._deactivateAction( this );\n\n\t\treturn this.reset();\n\n\t}\n\n\treset() {\n\n\t\tthis.paused = false;\n\t\tthis.enabled = true;\n\n\t\tthis.time = 0; // restart clip\n\t\tthis._loopCount = - 1;// forget previous loops\n\t\tthis._startTime = null;// forget scheduling\n\n\t\treturn this.stopFading().stopWarping();\n\n\t}\n\n\tisRunning() {\n\n\t\treturn this.enabled && ! this.paused && this.timeScale !== 0 &&\n\t\t\tthis._startTime === null && this._mixer._isActiveAction( this );\n\n\t}\n\n\t// return true when play has been called\n\tisScheduled() {\n\n\t\treturn this._mixer._isActiveAction( this );\n\n\t}\n\n\tstartAt( time ) {\n\n\t\tthis._startTime = time;\n\n\t\treturn this;\n\n\t}\n\n\tsetLoop( mode, repetitions ) {\n\n\t\tthis.loop = mode;\n\t\tthis.repetitions = repetitions;\n\n\t\treturn this;\n\n\t}\n\n\t// Weight\n\n\t// set the weight stopping any scheduled fading\n\t// although .enabled = false yields an effective weight of zero, this\n\t// method does *not* change .enabled, because it would be confusing\n\tsetEffectiveWeight( weight ) {\n\n\t\tthis.weight = weight;\n\n\t\t// note: same logic as when updated at runtime\n\t\tthis._effectiveWeight = this.enabled ? weight : 0;\n\n\t\treturn this.stopFading();\n\n\t}\n\n\t// return the weight considering fading and .enabled\n\tgetEffectiveWeight() {\n\n\t\treturn this._effectiveWeight;\n\n\t}\n\n\tfadeIn( duration ) {\n\n\t\treturn this._scheduleFading( duration, 0, 1 );\n\n\t}\n\n\tfadeOut( duration ) {\n\n\t\treturn this._scheduleFading( duration, 1, 0 );\n\n\t}\n\n\tcrossFadeFrom( fadeOutAction, duration, warp ) {\n\n\t\tfadeOutAction.fadeOut( duration );\n\t\tthis.fadeIn( duration );\n\n\t\tif ( warp ) {\n\n\t\t\tconst fadeInDuration = this._clip.duration,\n\t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\n\n\t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\n\t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\n\n\t\t\tfadeOutAction.warp( 1.0, startEndRatio, duration );\n\t\t\tthis.warp( endStartRatio, 1.0, duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcrossFadeTo( fadeInAction, duration, warp ) {\n\n\t\treturn fadeInAction.crossFadeFrom( this, duration, warp );\n\n\t}\n\n\tstopFading() {\n\n\t\tconst weightInterpolant = this._weightInterpolant;\n\n\t\tif ( weightInterpolant !== null ) {\n\n\t\t\tthis._weightInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( weightInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Time Scale Control\n\n\t// set the time scale stopping any scheduled warping\n\t// although .paused = true yields an effective time scale of zero, this\n\t// method does *not* change .paused, because it would be confusing\n\tsetEffectiveTimeScale( timeScale ) {\n\n\t\tthis.timeScale = timeScale;\n\t\tthis._effectiveTimeScale = this.paused ? 0 : timeScale;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\t// return the time scale considering warping and .paused\n\tgetEffectiveTimeScale() {\n\n\t\treturn this._effectiveTimeScale;\n\n\t}\n\n\tsetDuration( duration ) {\n\n\t\tthis.timeScale = this._clip.duration / duration;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\tsyncWith( action ) {\n\n\t\tthis.time = action.time;\n\t\tthis.timeScale = action.timeScale;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\thalt( duration ) {\n\n\t\treturn this.warp( this._effectiveTimeScale, 0, duration );\n\n\t}\n\n\twarp( startTimeScale, endTimeScale, duration ) {\n\n\t\tconst mixer = this._mixer,\n\t\t\tnow = mixer.time,\n\t\t\ttimeScale = this.timeScale;\n\n\t\tlet interpolant = this._timeScaleInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._timeScaleInterpolant = interpolant;\n\n\t\t}\n\n\t\tconst times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\ttimes[ 1 ] = now + duration;\n\n\t\tvalues[ 0 ] = startTimeScale / timeScale;\n\t\tvalues[ 1 ] = endTimeScale / timeScale;\n\n\t\treturn this;\n\n\t}\n\n\tstopWarping() {\n\n\t\tconst timeScaleInterpolant = this._timeScaleInterpolant;\n\n\t\tif ( timeScaleInterpolant !== null ) {\n\n\t\t\tthis._timeScaleInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( timeScaleInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Object Accessors\n\n\tgetMixer() {\n\n\t\treturn this._mixer;\n\n\t}\n\n\tgetClip() {\n\n\t\treturn this._clip;\n\n\t}\n\n\tgetRoot() {\n\n\t\treturn this._localRoot || this._mixer._root;\n\n\t}\n\n\t// Interna\n\n\t_update( time, deltaTime, timeDirection, accuIndex ) {\n\n\t\t// called by the mixer\n\n\t\tif ( ! this.enabled ) {\n\n\t\t\t// call ._updateWeight() to update ._effectiveWeight\n\n\t\t\tthis._updateWeight( time );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst startTime = this._startTime;\n\n\t\tif ( startTime !== null ) {\n\n\t\t\t// check for scheduled start of action\n\n\t\t\tconst timeRunning = ( time - startTime ) * timeDirection;\n\t\t\tif ( timeRunning < 0 || timeDirection === 0 ) {\n\n\t\t\t\treturn; // yet to come / don't decide when delta = 0\n\n\t\t\t}\n\n\t\t\t// start\n\n\t\t\tthis._startTime = null; // unschedule\n\t\t\tdeltaTime = timeDirection * timeRunning;\n\n\t\t}\n\n\t\t// apply time scale and advance time\n\n\t\tdeltaTime *= this._updateTimeScale( time );\n\t\tconst clipTime = this._updateTime( deltaTime );\n\n\t\t// note: _updateTime may disable the action resulting in\n\t\t// an effective weight of 0\n\n\t\tconst weight = this._updateWeight( time );\n\n\t\tif ( weight > 0 ) {\n\n\t\t\tconst interpolants = this._interpolants;\n\t\t\tconst propertyMixers = this._propertyBindings;\n\n\t\t\tswitch ( this.blendMode ) {\n\n\t\t\t\tcase AdditiveAnimationBlendMode:\n\n\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\tpropertyMixers[ j ].accumulateAdditive( weight );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase NormalAnimationBlendMode:\n\t\t\t\tdefault:\n\n\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\tpropertyMixers[ j ].accumulate( accuIndex, weight );\n\n\t\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_updateWeight( time ) {\n\n\t\tlet weight = 0;\n\n\t\tif ( this.enabled ) {\n\n\t\t\tweight = this.weight;\n\t\t\tconst interpolant = this._weightInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\tweight *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopFading();\n\n\t\t\t\t\tif ( interpolantValue === 0 ) {\n\n\t\t\t\t\t\t// faded out, disable\n\t\t\t\t\t\tthis.enabled = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveWeight = weight;\n\t\treturn weight;\n\n\t}\n\n\t_updateTimeScale( time ) {\n\n\t\tlet timeScale = 0;\n\n\t\tif ( ! this.paused ) {\n\n\t\t\ttimeScale = this.timeScale;\n\n\t\t\tconst interpolant = this._timeScaleInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\ttimeScale *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopWarping();\n\n\t\t\t\t\tif ( timeScale === 0 ) {\n\n\t\t\t\t\t\t// motion has halted, pause\n\t\t\t\t\t\tthis.paused = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// warp done - apply final time scale\n\t\t\t\t\t\tthis.timeScale = timeScale;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveTimeScale = timeScale;\n\t\treturn timeScale;\n\n\t}\n\n\t_updateTime( deltaTime ) {\n\n\t\tconst duration = this._clip.duration;\n\t\tconst loop = this.loop;\n\n\t\tlet time = this.time + deltaTime;\n\t\tlet loopCount = this._loopCount;\n\n\t\tconst pingPong = ( loop === LoopPingPong );\n\n\t\tif ( deltaTime === 0 ) {\n\n\t\t\tif ( loopCount === - 1 ) return time;\n\n\t\t\treturn ( pingPong && ( loopCount & 1 ) === 1 ) ? duration - time : time;\n\n\t\t}\n\n\t\tif ( loop === LoopOnce ) {\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tthis._loopCount = 0;\n\t\t\t\tthis._setEndings( true, true, false );\n\n\t\t\t}\n\n\t\t\thandle_stop: {\n\n\t\t\t\tif ( time >= duration ) {\n\n\t\t\t\t\ttime = duration;\n\n\t\t\t\t} else if ( time < 0 ) {\n\n\t\t\t\t\ttime = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tbreak handle_stop;\n\n\t\t\t\t}\n\n\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\telse this.enabled = false;\n\n\t\t\t\tthis.time = time;\n\n\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\tdirection: deltaTime < 0 ? - 1 : 1\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} else { // repetitive Repeat or PingPong\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tif ( deltaTime >= 0 ) {\n\n\t\t\t\t\tloopCount = 0;\n\n\t\t\t\t\tthis._setEndings( true, this.repetitions === 0, pingPong );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// when looping in reverse direction, the initial\n\t\t\t\t\t// transition through zero counts as a repetition,\n\t\t\t\t\t// so leave loopCount at -1\n\n\t\t\t\t\tthis._setEndings( this.repetitions === 0, true, pingPong );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( time >= duration || time < 0 ) {\n\n\t\t\t\t// wrap around\n\n\t\t\t\tconst loopDelta = Math.floor( time / duration ); // signed\n\t\t\t\ttime -= duration * loopDelta;\n\n\t\t\t\tloopCount += Math.abs( loopDelta );\n\n\t\t\t\tconst pending = this.repetitions - loopCount;\n\n\t\t\t\tif ( pending <= 0 ) {\n\n\t\t\t\t\t// have to stop (switch state, clamp time, fire event)\n\n\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\t\telse this.enabled = false;\n\n\t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : - 1\n\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// keep running\n\n\t\t\t\t\tif ( pending === 1 ) {\n\n\t\t\t\t\t\t// entering the last round\n\n\t\t\t\t\t\tconst atStart = deltaTime < 0;\n\t\t\t\t\t\tthis._setEndings( atStart, ! atStart, pingPong );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis._setEndings( false, false, pingPong );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._loopCount = loopCount;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'loop', action: this, loopDelta: loopDelta\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tthis.time = time;\n\n\t\t\t}\n\n\t\t\tif ( pingPong && ( loopCount & 1 ) === 1 ) {\n\n\t\t\t\t// invert time for the \"pong round\"\n\n\t\t\t\treturn duration - time;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn time;\n\n\t}\n\n\t_setEndings( atStart, atEnd, pingPong ) {\n\n\t\tconst settings = this._interpolantSettings;\n\n\t\tif ( pingPong ) {\n\n\t\t\tsettings.endingStart = ZeroSlopeEnding;\n\t\t\tsettings.endingEnd = ZeroSlopeEnding;\n\n\t\t} else {\n\n\t\t\t// assuming for LoopOnce atStart == atEnd == true\n\n\t\t\tif ( atStart ) {\n\n\t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingStart = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t\tif ( atEnd ) {\n\n\t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingEnd \t = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_scheduleFading( duration, weightNow, weightThen ) {\n\n\t\tconst mixer = this._mixer, now = mixer.time;\n\t\tlet interpolant = this._weightInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._weightInterpolant = interpolant;\n\n\t\t}\n\n\t\tconst times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\tvalues[ 0 ] = weightNow;\n\t\ttimes[ 1 ] = now + duration;\n\t\tvalues[ 1 ] = weightThen;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass AnimationMixer extends EventDispatcher {\n\n\tconstructor( root ) {\n\n\t\tsuper();\n\n\t\tthis._root = root;\n\t\tthis._initMemoryManager();\n\t\tthis._accuIndex = 0;\n\t\tthis.time = 0;\n\t\tthis.timeScale = 1.0;\n\n\t}\n\n\t_bindAction( action, prototypeAction ) {\n\n\t\tconst root = action._localRoot || this._root,\n\t\t\ttracks = action._clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tbindings = action._propertyBindings,\n\t\t\tinterpolants = action._interpolants,\n\t\t\trootUuid = root.uuid,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName;\n\n\t\tlet bindingsByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingsByName === undefined ) {\n\n\t\t\tbindingsByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingsByName;\n\n\t\t}\n\n\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tconst track = tracks[ i ],\n\t\t\t\ttrackName = track.name;\n\n\t\t\tlet binding = bindingsByName[ trackName ];\n\n\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t} else {\n\n\t\t\t\tbinding = bindings[ i ];\n\n\t\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t\t// existing binding, make sure the cache knows\n\n\t\t\t\t\tif ( binding._cacheIndex === null ) {\n\n\t\t\t\t\t\t++ binding.referenceCount;\n\t\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tconst path = prototypeAction && prototypeAction.\n\t\t\t\t\t_propertyBindings[ i ].binding.parsedPath;\n\n\t\t\t\tbinding = new PropertyMixer(\n\t\t\t\t\tPropertyBinding.create( root, trackName, path ),\n\t\t\t\t\ttrack.ValueTypeName, track.getValueSize() );\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t}\n\n\t\t\tinterpolants[ i ].resultBuffer = binding.buffer;\n\n\t\t}\n\n\t}\n\n\t_activateAction( action ) {\n\n\t\tif ( ! this._isActiveAction( action ) ) {\n\n\t\t\tif ( action._cacheIndex === null ) {\n\n\t\t\t\t// this action has been forgotten by the cache, but the user\n\t\t\t\t// appears to be still using it -> rebind\n\n\t\t\t\tconst rootUuid = ( action._localRoot || this._root ).uuid,\n\t\t\t\t\tclipUuid = action._clip.uuid,\n\t\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\t\t\tthis._bindAction( action,\n\t\t\t\t\tactionsForClip && actionsForClip.knownActions[ 0 ] );\n\n\t\t\t\tthis._addInactiveAction( action, clipUuid, rootUuid );\n\n\t\t\t}\n\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\t// increment reference counts / sort out state\n\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tconst binding = bindings[ i ];\n\n\t\t\t\tif ( binding.useCount ++ === 0 ) {\n\n\t\t\t\t\tthis._lendBinding( binding );\n\t\t\t\t\tbinding.saveOriginalState();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._lendAction( action );\n\n\t\t}\n\n\t}\n\n\t_deactivateAction( action ) {\n\n\t\tif ( this._isActiveAction( action ) ) {\n\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\t// decrement reference counts / sort out state\n\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tconst binding = bindings[ i ];\n\n\t\t\t\tif ( -- binding.useCount === 0 ) {\n\n\t\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\t\tthis._takeBackBinding( binding );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._takeBackAction( action );\n\n\t\t}\n\n\t}\n\n\t// Memory manager\n\n\t_initMemoryManager() {\n\n\t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\n\t\tthis._nActiveActions = 0;\n\n\t\tthis._actionsByClip = {};\n\t\t// inside:\n\t\t// {\n\t\t// \tknownActions: Array< AnimationAction > - used as prototypes\n\t\t// \tactionByRoot: AnimationAction - lookup\n\t\t// }\n\n\n\t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\n\t\tthis._nActiveBindings = 0;\n\n\t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n\n\t\tthis._controlInterpolants = []; // same game as above\n\t\tthis._nActiveControlInterpolants = 0;\n\n\t\tconst scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tactions: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._actions.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveActions;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tbindings: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._bindings.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveBindings;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tcontrolInterpolants: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._controlInterpolants.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveControlInterpolants;\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t// Memory management for AnimationAction objects\n\n\t_isActiveAction( action ) {\n\n\t\tconst index = action._cacheIndex;\n\t\treturn index !== null && index < this._nActiveActions;\n\n\t}\n\n\t_addInactiveAction( action, clipUuid, rootUuid ) {\n\n\t\tconst actions = this._actions,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tlet actionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip === undefined ) {\n\n\t\t\tactionsForClip = {\n\n\t\t\t\tknownActions: [ action ],\n\t\t\t\tactionByRoot: {}\n\n\t\t\t};\n\n\t\t\taction._byClipCacheIndex = 0;\n\n\t\t\tactionsByClip[ clipUuid ] = actionsForClip;\n\n\t\t} else {\n\n\t\t\tconst knownActions = actionsForClip.knownActions;\n\n\t\t\taction._byClipCacheIndex = knownActions.length;\n\t\t\tknownActions.push( action );\n\n\t\t}\n\n\t\taction._cacheIndex = actions.length;\n\t\tactions.push( action );\n\n\t\tactionsForClip.actionByRoot[ rootUuid ] = action;\n\n\t}\n\n\t_removeInactiveAction( action ) {\n\n\t\tconst actions = this._actions,\n\t\t\tlastInactiveAction = actions[ actions.length - 1 ],\n\t\t\tcacheIndex = action._cacheIndex;\n\n\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\tactions.pop();\n\n\t\taction._cacheIndex = null;\n\n\n\t\tconst clipUuid = action._clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ],\n\t\t\tknownActionsForClip = actionsForClip.knownActions,\n\n\t\t\tlastKnownAction =\n\t\t\t\tknownActionsForClip[ knownActionsForClip.length - 1 ],\n\n\t\t\tbyClipCacheIndex = action._byClipCacheIndex;\n\n\t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\n\t\tknownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\n\t\tknownActionsForClip.pop();\n\n\t\taction._byClipCacheIndex = null;\n\n\n\t\tconst actionByRoot = actionsForClip.actionByRoot,\n\t\t\trootUuid = ( action._localRoot || this._root ).uuid;\n\n\t\tdelete actionByRoot[ rootUuid ];\n\n\t\tif ( knownActionsForClip.length === 0 ) {\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t\tthis._removeInactiveBindingsForAction( action );\n\n\t}\n\n\t_removeInactiveBindingsForAction( action ) {\n\n\t\tconst bindings = action._propertyBindings;\n\n\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tconst binding = bindings[ i ];\n\n\t\t\tif ( -- binding.referenceCount === 0 ) {\n\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_lendAction( action ) {\n\n\t\t// [ active actions |  inactive actions  ]\n\t\t// [  active actions >| inactive actions ]\n\t\t//                 s        a\n\t\t//                  <-swap->\n\t\t//                 a        s\n\n\t\tconst actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveActions ++,\n\n\t\t\tfirstInactiveAction = actions[ lastActiveIndex ];\n\n\t\taction._cacheIndex = lastActiveIndex;\n\t\tactions[ lastActiveIndex ] = action;\n\n\t\tfirstInactiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = firstInactiveAction;\n\n\t}\n\n\t_takeBackAction( action ) {\n\n\t\t// [  active actions  | inactive actions ]\n\t\t// [ active actions |< inactive actions  ]\n\t\t//        a        s\n\t\t//         <-swap->\n\t\t//        s        a\n\n\t\tconst actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveActions,\n\n\t\t\tlastActiveAction = actions[ firstInactiveIndex ];\n\n\t\taction._cacheIndex = firstInactiveIndex;\n\t\tactions[ firstInactiveIndex ] = action;\n\n\t\tlastActiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = lastActiveAction;\n\n\t}\n\n\t// Memory management for PropertyMixer objects\n\n\t_addInactiveBinding( binding, rootUuid, trackName ) {\n\n\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindings = this._bindings;\n\n\t\tlet bindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName === undefined ) {\n\n\t\t\tbindingByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingByName;\n\n\t\t}\n\n\t\tbindingByName[ trackName ] = binding;\n\n\t\tbinding._cacheIndex = bindings.length;\n\t\tbindings.push( binding );\n\n\t}\n\n\t_removeInactiveBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tpropBinding = binding.binding,\n\t\t\trootUuid = propBinding.rootNode.uuid,\n\t\t\ttrackName = propBinding.path,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\tlastInactiveBinding = bindings[ bindings.length - 1 ],\n\t\t\tcacheIndex = binding._cacheIndex;\n\n\t\tlastInactiveBinding._cacheIndex = cacheIndex;\n\t\tbindings[ cacheIndex ] = lastInactiveBinding;\n\t\tbindings.pop();\n\n\t\tdelete bindingByName[ trackName ];\n\n\t\tif ( Object.keys( bindingByName ).length === 0 ) {\n\n\t\t\tdelete bindingsByRoot[ rootUuid ];\n\n\t\t}\n\n\t}\n\n\t_lendBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveBindings ++,\n\n\t\t\tfirstInactiveBinding = bindings[ lastActiveIndex ];\n\n\t\tbinding._cacheIndex = lastActiveIndex;\n\t\tbindings[ lastActiveIndex ] = binding;\n\n\t\tfirstInactiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = firstInactiveBinding;\n\n\t}\n\n\t_takeBackBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveBindings,\n\n\t\t\tlastActiveBinding = bindings[ firstInactiveIndex ];\n\n\t\tbinding._cacheIndex = firstInactiveIndex;\n\t\tbindings[ firstInactiveIndex ] = binding;\n\n\t\tlastActiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = lastActiveBinding;\n\n\t}\n\n\n\t// Memory management of Interpolants for weight and time scale\n\n\t_lendControlInterpolant() {\n\n\t\tconst interpolants = this._controlInterpolants,\n\t\t\tlastActiveIndex = this._nActiveControlInterpolants ++;\n\n\t\tlet interpolant = interpolants[ lastActiveIndex ];\n\n\t\tif ( interpolant === undefined ) {\n\n\t\t\tinterpolant = new LinearInterpolant(\n\t\t\t\tnew Float32Array( 2 ), new Float32Array( 2 ),\n\t\t\t\t1, this._controlInterpolantsResultBuffer );\n\n\t\t\tinterpolant.__cacheIndex = lastActiveIndex;\n\t\t\tinterpolants[ lastActiveIndex ] = interpolant;\n\n\t\t}\n\n\t\treturn interpolant;\n\n\t}\n\n\t_takeBackControlInterpolant( interpolant ) {\n\n\t\tconst interpolants = this._controlInterpolants,\n\t\t\tprevIndex = interpolant.__cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveControlInterpolants,\n\n\t\t\tlastActiveInterpolant = interpolants[ firstInactiveIndex ];\n\n\t\tinterpolant.__cacheIndex = firstInactiveIndex;\n\t\tinterpolants[ firstInactiveIndex ] = interpolant;\n\n\t\tlastActiveInterpolant.__cacheIndex = prevIndex;\n\t\tinterpolants[ prevIndex ] = lastActiveInterpolant;\n\n\t}\n\n\t// return an action for a clip optionally using a custom root target\n\t// object (this method allocates a lot of dynamic memory in case a\n\t// previously unknown clip/root combination is specified)\n\tclipAction( clip, optionalRoot, blendMode ) {\n\n\t\tconst root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid;\n\n\t\tlet clipObject = typeof clip === 'string' ? AnimationClip.findByName( root, clip ) : clip;\n\n\t\tconst clipUuid = clipObject !== null ? clipObject.uuid : clip;\n\n\t\tconst actionsForClip = this._actionsByClip[ clipUuid ];\n\t\tlet prototypeAction = null;\n\n\t\tif ( blendMode === undefined ) {\n\n\t\t\tif ( clipObject !== null ) {\n\n\t\t\t\tblendMode = clipObject.blendMode;\n\n\t\t\t} else {\n\n\t\t\t\tblendMode = NormalAnimationBlendMode;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\tconst existingAction = actionsForClip.actionByRoot[ rootUuid ];\n\n\t\t\tif ( existingAction !== undefined && existingAction.blendMode === blendMode ) {\n\n\t\t\t\treturn existingAction;\n\n\t\t\t}\n\n\t\t\t// we know the clip, so we don't have to parse all\n\t\t\t// the bindings again but can just copy\n\t\t\tprototypeAction = actionsForClip.knownActions[ 0 ];\n\n\t\t\t// also, take the clip from the prototype action\n\t\t\tif ( clipObject === null )\n\t\t\t\tclipObject = prototypeAction._clip;\n\n\t\t}\n\n\t\t// clip must be known when specified via string\n\t\tif ( clipObject === null ) return null;\n\n\t\t// allocate all resources required to run it\n\t\tconst newAction = new AnimationAction( this, clipObject, optionalRoot, blendMode );\n\n\t\tthis._bindAction( newAction, prototypeAction );\n\n\t\t// and make the action known to the memory manager\n\t\tthis._addInactiveAction( newAction, clipUuid, rootUuid );\n\n\t\treturn newAction;\n\n\t}\n\n\t// get an existing action\n\texistingAction( clip, optionalRoot ) {\n\n\t\tconst root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid,\n\n\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\tclipUuid = clipObject ? clipObject.uuid : clip,\n\n\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\treturn actionsForClip.actionByRoot[ rootUuid ] || null;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t// deactivates all previously scheduled actions\n\tstopAllAction() {\n\n\t\tconst actions = this._actions,\n\t\t\tnActions = this._nActiveActions;\n\n\t\tfor ( let i = nActions - 1; i >= 0; -- i ) {\n\n\t\t\tactions[ i ].stop();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// advance the time and update apply the animation\n\tupdate( deltaTime ) {\n\n\t\tdeltaTime *= this.timeScale;\n\n\t\tconst actions = this._actions,\n\t\t\tnActions = this._nActiveActions,\n\n\t\t\ttime = this.time += deltaTime,\n\t\t\ttimeDirection = Math.sign( deltaTime ),\n\n\t\t\taccuIndex = this._accuIndex ^= 1;\n\n\t\t// run active actions\n\n\t\tfor ( let i = 0; i !== nActions; ++ i ) {\n\n\t\t\tconst action = actions[ i ];\n\n\t\t\taction._update( time, deltaTime, timeDirection, accuIndex );\n\n\t\t}\n\n\t\t// update scene graph\n\n\t\tconst bindings = this._bindings,\n\t\t\tnBindings = this._nActiveBindings;\n\n\t\tfor ( let i = 0; i !== nBindings; ++ i ) {\n\n\t\t\tbindings[ i ].apply( accuIndex );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Allows you to seek to a specific time in an animation.\n\tsetTime( timeInSeconds ) {\n\n\t\tthis.time = 0; // Zero out time attribute for AnimationMixer object;\n\t\tfor ( let i = 0; i < this._actions.length; i ++ ) {\n\n\t\t\tthis._actions[ i ].time = 0; // Zero out time attribute for all associated AnimationAction objects.\n\n\t\t}\n\n\t\treturn this.update( timeInSeconds ); // Update used to set exact time. Returns \"this\" AnimationMixer object.\n\n\t}\n\n\t// return this mixer's root target object\n\tgetRoot() {\n\n\t\treturn this._root;\n\n\t}\n\n\t// free all resources specific to a particular clip\n\tuncacheClip( clip ) {\n\n\t\tconst actions = this._actions,\n\t\t\tclipUuid = clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t// note: just calling _removeInactiveAction would mess up the\n\t\t\t// iteration state and also require updating the state we can\n\t\t\t// just throw away\n\n\t\t\tconst actionsToRemove = actionsForClip.knownActions;\n\n\t\t\tfor ( let i = 0, n = actionsToRemove.length; i !== n; ++ i ) {\n\n\t\t\t\tconst action = actionsToRemove[ i ];\n\n\t\t\t\tthis._deactivateAction( action );\n\n\t\t\t\tconst cacheIndex = action._cacheIndex,\n\t\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ];\n\n\t\t\t\taction._cacheIndex = null;\n\t\t\t\taction._byClipCacheIndex = null;\n\n\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\t\t\tactions.pop();\n\n\t\t\t\tthis._removeInactiveBindingsForAction( action );\n\n\t\t\t}\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t}\n\n\t// free all resources specific to a particular root target object\n\tuncacheRoot( root ) {\n\n\t\tconst rootUuid = root.uuid,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tfor ( const clipUuid in actionsByClip ) {\n\n\t\t\tconst actionByRoot = actionsByClip[ clipUuid ].actionByRoot,\n\t\t\t\taction = actionByRoot[ rootUuid ];\n\n\t\t\tif ( action !== undefined ) {\n\n\t\t\t\tthis._deactivateAction( action );\n\t\t\t\tthis._removeInactiveAction( action );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName !== undefined ) {\n\n\t\t\tfor ( const trackName in bindingByName ) {\n\n\t\t\t\tconst binding = bindingByName[ trackName ];\n\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// remove a targeted clip from the cache\n\tuncacheAction( clip, optionalRoot ) {\n\n\t\tconst action = this.existingAction( clip, optionalRoot );\n\n\t\tif ( action !== null ) {\n\n\t\t\tthis._deactivateAction( action );\n\t\t\tthis._removeInactiveAction( action );\n\n\t\t}\n\n\t}\n\n}\n\nAnimationMixer.prototype._controlInterpolantsResultBuffer = new Float32Array( 1 );\n\nclass Uniform {\n\n\tconstructor( value ) {\n\n\t\tif ( typeof value === 'string' ) {\n\n\t\t\tconsole.warn( 'THREE.Uniform: Type parameter is no longer needed.' );\n\t\t\tvalue = arguments[ 1 ];\n\n\t\t}\n\n\t\tthis.value = value;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Uniform( this.value.clone === undefined ? this.value : this.value.clone() );\n\n\t}\n\n}\n\nclass InstancedInterleavedBuffer extends InterleavedBuffer {\n\n\tconstructor( array, stride, meshPerAttribute = 1 ) {\n\n\t\tsuper( array, stride );\n\n\t\tthis.meshPerAttribute = meshPerAttribute;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tconst ib = super.clone( data );\n\n\t\tib.meshPerAttribute = this.meshPerAttribute;\n\n\t\treturn ib;\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tconst json = super.toJSON( data );\n\n\t\tjson.isInstancedInterleavedBuffer = true;\n\t\tjson.meshPerAttribute = this.meshPerAttribute;\n\n\t\treturn json;\n\n\t}\n\n}\n\nInstancedInterleavedBuffer.prototype.isInstancedInterleavedBuffer = true;\n\nclass GLBufferAttribute {\n\n\tconstructor( buffer, type, itemSize, elementSize, count ) {\n\n\t\tthis.buffer = buffer;\n\t\tthis.type = type;\n\t\tthis.itemSize = itemSize;\n\t\tthis.elementSize = elementSize;\n\t\tthis.count = count;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetBuffer( buffer ) {\n\n\t\tthis.buffer = buffer;\n\n\t\treturn this;\n\n\t}\n\n\tsetType( type, elementSize ) {\n\n\t\tthis.type = type;\n\t\tthis.elementSize = elementSize;\n\n\t\treturn this;\n\n\t}\n\n\tsetItemSize( itemSize ) {\n\n\t\tthis.itemSize = itemSize;\n\n\t\treturn this;\n\n\t}\n\n\tsetCount( count ) {\n\n\t\tthis.count = count;\n\n\t\treturn this;\n\n\t}\n\n}\n\nGLBufferAttribute.prototype.isGLBufferAttribute = true;\n\nclass Raycaster {\n\n\tconstructor( origin, direction, near = 0, far = Infinity ) {\n\n\t\tthis.ray = new Ray( origin, direction );\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\t\tthis.camera = null;\n\t\tthis.layers = new Layers();\n\n\t\tthis.params = {\n\t\t\tMesh: {},\n\t\t\tLine: { threshold: 1 },\n\t\t\tLOD: {},\n\t\t\tPoints: { threshold: 1 },\n\t\t\tSprite: {}\n\t\t};\n\n\t}\n\n\tset( origin, direction ) {\n\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.ray.set( origin, direction );\n\n\t}\n\n\tsetFromCamera( coords, camera ) {\n\n\t\tif ( camera.isPerspectiveCamera ) {\n\n\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\n\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\n\t\t\tthis.camera = camera;\n\n\t\t} else if ( camera.isOrthographicCamera ) {\n\n\t\t\tthis.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera\n\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\n\t\t\tthis.camera = camera;\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type: ' + camera.type );\n\n\t\t}\n\n\t}\n\n\tintersectObject( object, recursive = true, intersects = [] ) {\n\n\t\tintersectObject( object, this, intersects, recursive );\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n\tintersectObjects( objects, recursive = true, intersects = [] ) {\n\n\t\tfor ( let i = 0, l = objects.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( objects[ i ], this, intersects, recursive );\n\n\t\t}\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n}\n\nfunction ascSort( a, b ) {\n\n\treturn a.distance - b.distance;\n\n}\n\nfunction intersectObject( object, raycaster, intersects, recursive ) {\n\n\tif ( object.layers.test( raycaster.layers ) ) {\n\n\t\tobject.raycast( raycaster, intersects );\n\n\t}\n\n\tif ( recursive === true ) {\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( children[ i ], raycaster, intersects, true );\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n *\n * The polar angle (phi) is measured from the positive y-axis. The positive y-axis is up.\n * The azimuthal angle (theta) is measured from the positive z-axis.\n */\n\nclass Spherical {\n\n\tconstructor( radius = 1, phi = 0, theta = 0 ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi; // polar angle\n\t\tthis.theta = theta; // azimuthal angle\n\n\t\treturn this;\n\n\t}\n\n\tset( radius, phi, theta ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi;\n\t\tthis.theta = theta;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.phi = other.phi;\n\t\tthis.theta = other.theta;\n\n\t\treturn this;\n\n\t}\n\n\t// restrict phi to be between EPS and PI-EPS\n\tmakeSafe() {\n\n\t\tconst EPS = 0.000001;\n\t\tthis.phi = Math.max( EPS, Math.min( Math.PI - EPS, this.phi ) );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t}\n\n\tsetFromCartesianCoords( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + y * y + z * z );\n\n\t\tif ( this.radius === 0 ) {\n\n\t\t\tthis.theta = 0;\n\t\t\tthis.phi = 0;\n\n\t\t} else {\n\n\t\t\tthis.theta = Math.atan2( x, z );\n\t\t\tthis.phi = Math.acos( clamp( y / this.radius, - 1, 1 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\n/**\n * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n */\n\nclass Cylindrical {\n\n\tconstructor( radius = 1, theta = 0, y = 0 ) {\n\n\t\tthis.radius = radius; // distance from the origin to a point in the x-z plane\n\t\tthis.theta = theta; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\n\t\tthis.y = y; // height above the x-z plane\n\n\t\treturn this;\n\n\t}\n\n\tset( radius, theta, y ) {\n\n\t\tthis.radius = radius;\n\t\tthis.theta = theta;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.theta = other.theta;\n\t\tthis.y = other.y;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t}\n\n\tsetFromCartesianCoords( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + z * z );\n\t\tthis.theta = Math.atan2( x, z );\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$4 = /*@__PURE__*/ new Vector2();\n\nclass Box2 {\n\n\tconstructor( min = new Vector2( + Infinity, + Infinity ), max = new Vector2( - Infinity, - Infinity ) ) {\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector$4.copy( size ).multiplyScalar( 0.5 );\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = + Infinity;\n\t\tthis.max.x = this.max.y = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ? false : true;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 4 splitting planes to rule out intersections\n\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ? false : true;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\tconst clampedPoint = _vector$4.copy( point ).clamp( this.min, this.max );\n\t\treturn clampedPoint.sub( point ).length();\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nBox2.prototype.isBox2 = true;\n\nconst _startP = /*@__PURE__*/ new Vector3();\nconst _startEnd = /*@__PURE__*/ new Vector3();\n\nclass Line3 {\n\n\tconstructor( start = new Vector3(), end = new Vector3() ) {\n\n\t\tthis.start = start;\n\t\tthis.end = end;\n\n\t}\n\n\tset( start, end ) {\n\n\t\tthis.start.copy( start );\n\t\tthis.end.copy( end );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( line ) {\n\n\t\tthis.start.copy( line.start );\n\t\tthis.end.copy( line.end );\n\n\t\treturn this;\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn target.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\n\n\t}\n\n\tdelta( target ) {\n\n\t\treturn target.subVectors( this.end, this.start );\n\n\t}\n\n\tdistanceSq() {\n\n\t\treturn this.start.distanceToSquared( this.end );\n\n\t}\n\n\tdistance() {\n\n\t\treturn this.start.distanceTo( this.end );\n\n\t}\n\n\tat( t, target ) {\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t}\n\n\tclosestPointToPointParameter( point, clampToLine ) {\n\n\t\t_startP.subVectors( point, this.start );\n\t\t_startEnd.subVectors( this.end, this.start );\n\n\t\tconst startEnd2 = _startEnd.dot( _startEnd );\n\t\tconst startEnd_startP = _startEnd.dot( _startP );\n\n\t\tlet t = startEnd_startP / startEnd2;\n\n\t\tif ( clampToLine ) {\n\n\t\t\tt = clamp( t, 0, 1 );\n\n\t\t}\n\n\t\treturn t;\n\n\t}\n\n\tclosestPointToPoint( point, clampToLine, target ) {\n\n\t\tconst t = this.closestPointToPointParameter( point, clampToLine );\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tthis.start.applyMatrix4( matrix );\n\t\tthis.end.applyMatrix4( matrix );\n\n\t\treturn this;\n\n\t}\n\n\tequals( line ) {\n\n\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$3 = /*@__PURE__*/ new Vector3();\n\nclass SpotLightHelper extends Object3D {\n\n\tconstructor( light, color ) {\n\n\t\tsuper();\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst positions = [\n\t\t\t0, 0, 0, \t0, 0, 1,\n\t\t\t0, 0, 0, \t1, 0, 1,\n\t\t\t0, 0, 0,\t- 1, 0, 1,\n\t\t\t0, 0, 0, \t0, 1, 1,\n\t\t\t0, 0, 0, \t0, - 1, 1\n\t\t];\n\n\t\tfor ( let i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {\n\n\t\t\tconst p1 = ( i / l ) * Math.PI * 2;\n\t\t\tconst p2 = ( j / l ) * Math.PI * 2;\n\n\t\t\tpositions.push(\n\t\t\t\tMath.cos( p1 ), Math.sin( p1 ), 1,\n\t\t\t\tMath.cos( p2 ), Math.sin( p2 ), 1\n\t\t\t);\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.cone = new LineSegments( geometry, material );\n\t\tthis.add( this.cone );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.cone.geometry.dispose();\n\t\tthis.cone.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateMatrixWorld();\n\n\t\tconst coneLength = this.light.distance ? this.light.distance : 1000;\n\t\tconst coneWidth = coneLength * Math.tan( this.light.angle );\n\n\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\n\n\t\t_vector$3.setFromMatrixPosition( this.light.target.matrixWorld );\n\n\t\tthis.cone.lookAt( _vector$3 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.cone.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.cone.material.color.copy( this.light.color );\n\n\t\t}\n\n\t}\n\n}\n\nconst _vector$2 = /*@__PURE__*/ new Vector3();\nconst _boneMatrix = /*@__PURE__*/ new Matrix4();\nconst _matrixWorldInv = /*@__PURE__*/ new Matrix4();\n\n\nclass SkeletonHelper extends LineSegments {\n\n\tconstructor( object ) {\n\n\t\tconst bones = getBoneList( object );\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\tconst color1 = new Color( 0, 0, 1 );\n\t\tconst color2 = new Color( 0, 1, 0 );\n\n\t\tfor ( let i = 0; i < bones.length; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tcolors.push( color1.r, color1.g, color1.b );\n\t\t\t\tcolors.push( color2.r, color2.g, color2.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, depthTest: false, depthWrite: false, toneMapped: false, transparent: true } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'SkeletonHelper';\n\t\tthis.isSkeletonHelper = true;\n\n\t\tthis.root = object;\n\t\tthis.bones = bones;\n\n\t\tthis.matrix = object.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst bones = this.bones;\n\n\t\tconst geometry = this.geometry;\n\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\t_matrixWorldInv.copy( this.root.matrixWorld ).invert();\n\n\t\tfor ( let i = 0, j = 0; i < bones.length; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.matrixWorld );\n\t\t\t\t_vector$2.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j, _vector$2.x, _vector$2.y, _vector$2.z );\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.parent.matrixWorld );\n\t\t\t\t_vector$2.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j + 1, _vector$2.x, _vector$2.y, _vector$2.z );\n\n\t\t\t\tj += 2;\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n}\n\n\nfunction getBoneList( object ) {\n\n\tconst boneList = [];\n\n\tif ( object.isBone === true ) {\n\n\t\tboneList.push( object );\n\n\t}\n\n\tfor ( let i = 0; i < object.children.length; i ++ ) {\n\n\t\tboneList.push.apply( boneList, getBoneList( object.children[ i ] ) );\n\n\t}\n\n\treturn boneList;\n\n}\n\nclass PointLightHelper extends Mesh {\n\n\tconstructor( light, sphereSize, color ) {\n\n\t\tconst geometry = new SphereGeometry( sphereSize, 4, 2 );\n\t\tconst material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'PointLightHelper';\n\n\t\tthis.matrix = this.light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\n\t\t/*\n\t// TODO: delete this comment?\n\tconst distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\n\tconst distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n\n\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n\n\tconst d = light.distance;\n\n\tif ( d === 0.0 ) {\n\n\t\tthis.lightDistance.visible = false;\n\n\t} else {\n\n\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t}\n\n\tthis.add( this.lightDistance );\n\t*/\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\t/*\n\t\tconst d = this.light.distance;\n\n\t\tif ( d === 0.0 ) {\n\n\t\t\tthis.lightDistance.visible = false;\n\n\t\t} else {\n\n\t\t\tthis.lightDistance.visible = true;\n\t\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t\t}\n\t\t*/\n\n\t}\n\n}\n\nconst _vector$1 = /*@__PURE__*/ new Vector3();\nconst _color1 = /*@__PURE__*/ new Color();\nconst _color2 = /*@__PURE__*/ new Color();\n\nclass HemisphereLightHelper extends Object3D {\n\n\tconstructor( light, size, color ) {\n\n\t\tsuper();\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tconst geometry = new OctahedronGeometry( size );\n\t\tgeometry.rotateY( Math.PI * 0.5 );\n\n\t\tthis.material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\t\tif ( this.color === undefined ) this.material.vertexColors = true;\n\n\t\tconst position = geometry.getAttribute( 'position' );\n\t\tconst colors = new Float32Array( position.count * 3 );\n\n\t\tgeometry.setAttribute( 'color', new BufferAttribute( colors, 3 ) );\n\n\t\tthis.add( new Mesh( geometry, this.material ) );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tconst mesh = this.children[ 0 ];\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tconst colors = mesh.geometry.getAttribute( 'color' );\n\n\t\t\t_color1.copy( this.light.color );\n\t\t\t_color2.copy( this.light.groundColor );\n\n\t\t\tfor ( let i = 0, l = colors.count; i < l; i ++ ) {\n\n\t\t\t\tconst color = ( i < ( l / 2 ) ) ? _color1 : _color2;\n\n\t\t\t\tcolors.setXYZ( i, color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t\tcolors.needsUpdate = true;\n\n\t\t}\n\n\t\tmesh.lookAt( _vector$1.setFromMatrixPosition( this.light.matrixWorld ).negate() );\n\n\t}\n\n}\n\nclass GridHelper extends LineSegments {\n\n\tconstructor( size = 10, divisions = 10, color1 = 0x444444, color2 = 0x888888 ) {\n\n\t\tcolor1 = new Color( color1 );\n\t\tcolor2 = new Color( color2 );\n\n\t\tconst center = divisions / 2;\n\t\tconst step = size / divisions;\n\t\tconst halfSize = size / 2;\n\n\t\tconst vertices = [], colors = [];\n\n\t\tfor ( let i = 0, j = 0, k = - halfSize; i <= divisions; i ++, k += step ) {\n\n\t\t\tvertices.push( - halfSize, 0, k, halfSize, 0, k );\n\t\t\tvertices.push( k, 0, - halfSize, k, 0, halfSize );\n\n\t\t\tconst color = i === center ? color1 : color2;\n\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\n\t\t}\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'GridHelper';\n\n\t}\n\n}\n\nclass PolarGridHelper extends LineSegments {\n\n\tconstructor( radius = 10, radials = 16, circles = 8, divisions = 64, color1 = 0x444444, color2 = 0x888888 ) {\n\n\t\tcolor1 = new Color( color1 );\n\t\tcolor2 = new Color( color2 );\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\t// create the radials\n\n\t\tfor ( let i = 0; i <= radials; i ++ ) {\n\n\t\t\tconst v = ( i / radials ) * ( Math.PI * 2 );\n\n\t\t\tconst x = Math.sin( v ) * radius;\n\t\t\tconst z = Math.cos( v ) * radius;\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tvertices.push( x, 0, z );\n\n\t\t\tconst color = ( i & 1 ) ? color1 : color2;\n\n\t\t\tcolors.push( color.r, color.g, color.b );\n\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t}\n\n\t\t// create the circles\n\n\t\tfor ( let i = 0; i <= circles; i ++ ) {\n\n\t\t\tconst color = ( i & 1 ) ? color1 : color2;\n\n\t\t\tconst r = radius - ( radius / circles * i );\n\n\t\t\tfor ( let j = 0; j < divisions; j ++ ) {\n\n\t\t\t\t// first vertex\n\n\t\t\t\tlet v = ( j / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tlet x = Math.sin( v ) * r;\n\t\t\t\tlet z = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t\t// second vertex\n\n\t\t\t\tv = ( ( j + 1 ) / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tx = Math.sin( v ) * r;\n\t\t\t\tz = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'PolarGridHelper';\n\n\t}\n\n}\n\nconst _v1 = /*@__PURE__*/ new Vector3();\nconst _v2 = /*@__PURE__*/ new Vector3();\nconst _v3 = /*@__PURE__*/ new Vector3();\n\nclass DirectionalLightHelper extends Object3D {\n\n\tconstructor( light, size, color ) {\n\n\t\tsuper();\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tif ( size === undefined ) size = 1;\n\n\t\tlet geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [\n\t\t\t- size, size, 0,\n\t\t\tsize, size, 0,\n\t\t\tsize, - size, 0,\n\t\t\t- size, - size, 0,\n\t\t\t- size, size, 0\n\t\t], 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.lightPlane = new Line( geometry, material );\n\t\tthis.add( this.lightPlane );\n\n\t\tgeometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\n\n\t\tthis.targetLine = new Line( geometry, material );\n\t\tthis.add( this.targetLine );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.lightPlane.geometry.dispose();\n\t\tthis.lightPlane.material.dispose();\n\t\tthis.targetLine.geometry.dispose();\n\t\tthis.targetLine.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\t_v1.setFromMatrixPosition( this.light.matrixWorld );\n\t\t_v2.setFromMatrixPosition( this.light.target.matrixWorld );\n\t\t_v3.subVectors( _v2, _v1 );\n\n\t\tthis.lightPlane.lookAt( _v2 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.lightPlane.material.color.set( this.color );\n\t\t\tthis.targetLine.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.lightPlane.material.color.copy( this.light.color );\n\t\t\tthis.targetLine.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\tthis.targetLine.lookAt( _v2 );\n\t\tthis.targetLine.scale.z = _v3.length();\n\n\t}\n\n}\n\nconst _vector = /*@__PURE__*/ new Vector3();\nconst _camera = /*@__PURE__*/ new Camera();\n\n/**\n *\t- shows frustum, line of sight and up of the camera\n *\t- suitable for fast updates\n * \t- based on frustum visualization in lightgl.js shadowmap example\n *\t\thttps://github.com/evanw/lightgl.js/blob/master/tests/shadowmap.html\n */\n\nclass CameraHelper extends LineSegments {\n\n\tconstructor( camera ) {\n\n\t\tconst geometry = new BufferGeometry();\n\t\tconst material = new LineBasicMaterial( { color: 0xffffff, vertexColors: true, toneMapped: false } );\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\tconst pointMap = {};\n\n\t\t// colors\n\n\t\tconst colorFrustum = new Color( 0xffaa00 );\n\t\tconst colorCone = new Color( 0xff0000 );\n\t\tconst colorUp = new Color( 0x00aaff );\n\t\tconst colorTarget = new Color( 0xffffff );\n\t\tconst colorCross = new Color( 0x333333 );\n\n\t\t// near\n\n\t\taddLine( 'n1', 'n2', colorFrustum );\n\t\taddLine( 'n2', 'n4', colorFrustum );\n\t\taddLine( 'n4', 'n3', colorFrustum );\n\t\taddLine( 'n3', 'n1', colorFrustum );\n\n\t\t// far\n\n\t\taddLine( 'f1', 'f2', colorFrustum );\n\t\taddLine( 'f2', 'f4', colorFrustum );\n\t\taddLine( 'f4', 'f3', colorFrustum );\n\t\taddLine( 'f3', 'f1', colorFrustum );\n\n\t\t// sides\n\n\t\taddLine( 'n1', 'f1', colorFrustum );\n\t\taddLine( 'n2', 'f2', colorFrustum );\n\t\taddLine( 'n3', 'f3', colorFrustum );\n\t\taddLine( 'n4', 'f4', colorFrustum );\n\n\t\t// cone\n\n\t\taddLine( 'p', 'n1', colorCone );\n\t\taddLine( 'p', 'n2', colorCone );\n\t\taddLine( 'p', 'n3', colorCone );\n\t\taddLine( 'p', 'n4', colorCone );\n\n\t\t// up\n\n\t\taddLine( 'u1', 'u2', colorUp );\n\t\taddLine( 'u2', 'u3', colorUp );\n\t\taddLine( 'u3', 'u1', colorUp );\n\n\t\t// target\n\n\t\taddLine( 'c', 't', colorTarget );\n\t\taddLine( 'p', 'c', colorCross );\n\n\t\t// cross\n\n\t\taddLine( 'cn1', 'cn2', colorCross );\n\t\taddLine( 'cn3', 'cn4', colorCross );\n\n\t\taddLine( 'cf1', 'cf2', colorCross );\n\t\taddLine( 'cf3', 'cf4', colorCross );\n\n\t\tfunction addLine( a, b, color ) {\n\n\t\t\taddPoint( a, color );\n\t\t\taddPoint( b, color );\n\n\t\t}\n\n\t\tfunction addPoint( id, color ) {\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\tif ( pointMap[ id ] === undefined ) {\n\n\t\t\t\tpointMap[ id ] = [];\n\n\t\t\t}\n\n\t\t\tpointMap[ id ].push( ( vertices.length / 3 ) - 1 );\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'CameraHelper';\n\n\t\tthis.camera = camera;\n\t\tif ( this.camera.updateProjectionMatrix ) this.camera.updateProjectionMatrix();\n\n\t\tthis.matrix = camera.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.pointMap = pointMap;\n\n\t\tthis.update();\n\n\t}\n\n\tupdate() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst pointMap = this.pointMap;\n\n\t\tconst w = 1, h = 1;\n\n\t\t// we need just camera projection matrix inverse\n\t\t// world matrix must be identity\n\n\t\t_camera.projectionMatrixInverse.copy( this.camera.projectionMatrixInverse );\n\n\t\t// center / target\n\n\t\tsetPoint( 'c', pointMap, geometry, _camera, 0, 0, - 1 );\n\t\tsetPoint( 't', pointMap, geometry, _camera, 0, 0, 1 );\n\n\t\t// near\n\n\t\tsetPoint( 'n1', pointMap, geometry, _camera, - w, - h, - 1 );\n\t\tsetPoint( 'n2', pointMap, geometry, _camera, w, - h, - 1 );\n\t\tsetPoint( 'n3', pointMap, geometry, _camera, - w, h, - 1 );\n\t\tsetPoint( 'n4', pointMap, geometry, _camera, w, h, - 1 );\n\n\t\t// far\n\n\t\tsetPoint( 'f1', pointMap, geometry, _camera, - w, - h, 1 );\n\t\tsetPoint( 'f2', pointMap, geometry, _camera, w, - h, 1 );\n\t\tsetPoint( 'f3', pointMap, geometry, _camera, - w, h, 1 );\n\t\tsetPoint( 'f4', pointMap, geometry, _camera, w, h, 1 );\n\n\t\t// up\n\n\t\tsetPoint( 'u1', pointMap, geometry, _camera, w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u2', pointMap, geometry, _camera, - w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u3', pointMap, geometry, _camera, 0, h * 2, - 1 );\n\n\t\t// cross\n\n\t\tsetPoint( 'cf1', pointMap, geometry, _camera, - w, 0, 1 );\n\t\tsetPoint( 'cf2', pointMap, geometry, _camera, w, 0, 1 );\n\t\tsetPoint( 'cf3', pointMap, geometry, _camera, 0, - h, 1 );\n\t\tsetPoint( 'cf4', pointMap, geometry, _camera, 0, h, 1 );\n\n\t\tsetPoint( 'cn1', pointMap, geometry, _camera, - w, 0, - 1 );\n\t\tsetPoint( 'cn2', pointMap, geometry, _camera, w, 0, - 1 );\n\t\tsetPoint( 'cn3', pointMap, geometry, _camera, 0, - h, - 1 );\n\t\tsetPoint( 'cn4', pointMap, geometry, _camera, 0, h, - 1 );\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\n\nfunction setPoint( point, pointMap, geometry, camera, x, y, z ) {\n\n\t_vector.set( x, y, z ).unproject( camera );\n\n\tconst points = pointMap[ point ];\n\n\tif ( points !== undefined ) {\n\n\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tposition.setXYZ( points[ i ], _vector.x, _vector.y, _vector.z );\n\n\t\t}\n\n\t}\n\n}\n\nconst _box = /*@__PURE__*/ new Box3();\n\nclass BoxHelper extends LineSegments {\n\n\tconstructor( object, color = 0xffff00 ) {\n\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\t\tconst positions = new Float32Array( 8 * 3 );\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\t\tgeometry.setAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.object = object;\n\t\tthis.type = 'BoxHelper';\n\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\t}\n\n\tupdate( object ) {\n\n\t\tif ( object !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.BoxHelper: .update() has no longer arguments.' );\n\n\t\t}\n\n\t\tif ( this.object !== undefined ) {\n\n\t\t\t_box.setFromObject( this.object );\n\n\t\t}\n\n\t\tif ( _box.isEmpty() ) return;\n\n\t\tconst min = _box.min;\n\t\tconst max = _box.max;\n\n\t\t/*\n\t\t\t5____4\n\t\t1/___0/|\n\t\t| 6__|_7\n\t\t2/___3/\n\n\t\t0: max.x, max.y, max.z\n\t\t1: min.x, max.y, max.z\n\t\t2: min.x, min.y, max.z\n\t\t3: max.x, min.y, max.z\n\t\t4: max.x, max.y, min.z\n\t\t5: min.x, max.y, min.z\n\t\t6: min.x, min.y, min.z\n\t\t7: max.x, min.y, min.z\n\t\t*/\n\n\t\tconst position = this.geometry.attributes.position;\n\t\tconst array = position.array;\n\n\t\tarray[ 0 ] = max.x; array[ 1 ] = max.y; array[ 2 ] = max.z;\n\t\tarray[ 3 ] = min.x; array[ 4 ] = max.y; array[ 5 ] = max.z;\n\t\tarray[ 6 ] = min.x; array[ 7 ] = min.y; array[ 8 ] = max.z;\n\t\tarray[ 9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\n\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\n\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\n\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\n\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\n\n\t\tposition.needsUpdate = true;\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\n\t}\n\n\tsetFromObject( object ) {\n\n\t\tthis.object = object;\n\t\tthis.update();\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tLineSegments.prototype.copy.call( this, source );\n\n\t\tthis.object = source.object;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Box3Helper extends LineSegments {\n\n\tconstructor( box, color = 0xffff00 ) {\n\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\n\t\tconst positions = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 1, - 1, 1, - 1, - 1 ];\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.box = box;\n\n\t\tthis.type = 'Box3Helper';\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst box = this.box;\n\n\t\tif ( box.isEmpty() ) return;\n\n\t\tbox.getCenter( this.position );\n\n\t\tbox.getSize( this.scale );\n\n\t\tthis.scale.multiplyScalar( 0.5 );\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n}\n\nclass PlaneHelper extends Line {\n\n\tconstructor( plane, size = 1, hex = 0xffff00 ) {\n\n\t\tconst color = hex;\n\n\t\tconst positions = [ 1, - 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0 ];\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\t\tgeometry.computeBoundingSphere();\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.type = 'PlaneHelper';\n\n\t\tthis.plane = plane;\n\n\t\tthis.size = size;\n\n\t\tconst positions2 = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, 1, 1, - 1, - 1, 1, 1, - 1, 1 ];\n\n\t\tconst geometry2 = new BufferGeometry();\n\t\tgeometry2.setAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) );\n\t\tgeometry2.computeBoundingSphere();\n\n\t\tthis.add( new Mesh( geometry2, new MeshBasicMaterial( { color: color, opacity: 0.2, transparent: true, depthWrite: false, toneMapped: false } ) ) );\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tlet scale = - this.plane.constant;\n\n\t\tif ( Math.abs( scale ) < 1e-8 ) scale = 1e-8; // sign does not matter\n\n\t\tthis.scale.set( 0.5 * this.size, 0.5 * this.size, scale );\n\n\t\tthis.children[ 0 ].material.side = ( scale < 0 ) ? BackSide : FrontSide; // renderer flips side when determinant < 0; flipping not wanted here\n\n\t\tthis.lookAt( this.plane.normal );\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n}\n\nconst _axis = /*@__PURE__*/ new Vector3();\nlet _lineGeometry, _coneGeometry;\n\nclass ArrowHelper extends Object3D {\n\n\t// dir is assumed to be normalized\n\n\tconstructor( dir = new Vector3( 0, 0, 1 ), origin = new Vector3( 0, 0, 0 ), length = 1, color = 0xffff00, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ArrowHelper';\n\n\t\tif ( _lineGeometry === undefined ) {\n\n\t\t\t_lineGeometry = new BufferGeometry();\n\t\t\t_lineGeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );\n\n\t\t\t_coneGeometry = new CylinderGeometry( 0, 0.5, 1, 5, 1 );\n\t\t\t_coneGeometry.translate( 0, - 0.5, 0 );\n\n\t\t}\n\n\t\tthis.position.copy( origin );\n\n\t\tthis.line = new Line( _lineGeometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.line.matrixAutoUpdate = false;\n\t\tthis.add( this.line );\n\n\t\tthis.cone = new Mesh( _coneGeometry, new MeshBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.cone.matrixAutoUpdate = false;\n\t\tthis.add( this.cone );\n\n\t\tthis.setDirection( dir );\n\t\tthis.setLength( length, headLength, headWidth );\n\n\t}\n\n\tsetDirection( dir ) {\n\n\t\t// dir is assumed to be normalized\n\n\t\tif ( dir.y > 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\n\n\t\t} else if ( dir.y < - 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\n\n\t\t} else {\n\n\t\t\t_axis.set( dir.z, 0, - dir.x ).normalize();\n\n\t\t\tconst radians = Math.acos( dir.y );\n\n\t\t\tthis.quaternion.setFromAxisAngle( _axis, radians );\n\n\t\t}\n\n\t}\n\n\tsetLength( length, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n\n\t\tthis.line.scale.set( 1, Math.max( 0.0001, length - headLength ), 1 ); // see #17458\n\t\tthis.line.updateMatrix();\n\n\t\tthis.cone.scale.set( headWidth, headLength, headWidth );\n\t\tthis.cone.position.y = length;\n\t\tthis.cone.updateMatrix();\n\n\t}\n\n\tsetColor( color ) {\n\n\t\tthis.line.material.color.set( color );\n\t\tthis.cone.material.color.set( color );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source, false );\n\n\t\tthis.line.copy( source.line );\n\t\tthis.cone.copy( source.cone );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass AxesHelper extends LineSegments {\n\n\tconstructor( size = 1 ) {\n\n\t\tconst vertices = [\n\t\t\t0, 0, 0,\tsize, 0, 0,\n\t\t\t0, 0, 0,\t0, size, 0,\n\t\t\t0, 0, 0,\t0, 0, size\n\t\t];\n\n\t\tconst colors = [\n\t\t\t1, 0, 0,\t1, 0.6, 0,\n\t\t\t0, 1, 0,\t0.6, 1, 0,\n\t\t\t0, 0, 1,\t0, 0.6, 1\n\t\t];\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'AxesHelper';\n\n\t}\n\n\tsetColors( xAxisColor, yAxisColor, zAxisColor ) {\n\n\t\tconst color = new Color();\n\t\tconst array = this.geometry.attributes.color.array;\n\n\t\tcolor.set( xAxisColor );\n\t\tcolor.toArray( array, 0 );\n\t\tcolor.toArray( array, 3 );\n\n\t\tcolor.set( yAxisColor );\n\t\tcolor.toArray( array, 6 );\n\t\tcolor.toArray( array, 9 );\n\n\t\tcolor.set( zAxisColor );\n\t\tcolor.toArray( array, 12 );\n\t\tcolor.toArray( array, 15 );\n\n\t\tthis.geometry.attributes.color.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass ShapePath {\n\n\tconstructor() {\n\n\t\tthis.type = 'ShapePath';\n\n\t\tthis.color = new Color();\n\n\t\tthis.subPaths = [];\n\t\tthis.currentPath = null;\n\n\t}\n\n\tmoveTo( x, y ) {\n\n\t\tthis.currentPath = new Path();\n\t\tthis.subPaths.push( this.currentPath );\n\t\tthis.currentPath.moveTo( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tlineTo( x, y ) {\n\n\t\tthis.currentPath.lineTo( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tquadraticCurveTo( aCPx, aCPy, aX, aY ) {\n\n\t\tthis.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tbezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tthis.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tsplineThru( pts ) {\n\n\t\tthis.currentPath.splineThru( pts );\n\n\t\treturn this;\n\n\t}\n\n\ttoShapes( isCCW, noHoles ) {\n\n\t\tfunction toShapesNoHoles( inSubpaths ) {\n\n\t\t\tconst shapes = [];\n\n\t\t\tfor ( let i = 0, l = inSubpaths.length; i < l; i ++ ) {\n\n\t\t\t\tconst tmpPath = inSubpaths[ i ];\n\n\t\t\t\tconst tmpShape = new Shape();\n\t\t\t\ttmpShape.curves = tmpPath.curves;\n\n\t\t\t\tshapes.push( tmpShape );\n\n\t\t\t}\n\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tfunction isPointInsidePolygon( inPt, inPolygon ) {\n\n\t\t\tconst polyLen = inPolygon.length;\n\n\t\t\t// inPt on polygon contour => immediate success    or\n\t\t\t// toggling of inside/outside at every single! intersection point of an edge\n\t\t\t//  with the horizontal line through inPt, left of inPt\n\t\t\t//  not counting lowerY endpoints of edges and whole edges on that line\n\t\t\tlet inside = false;\n\t\t\tfor ( let p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\n\n\t\t\t\tlet edgeLowPt = inPolygon[ p ];\n\t\t\t\tlet edgeHighPt = inPolygon[ q ];\n\n\t\t\t\tlet edgeDx = edgeHighPt.x - edgeLowPt.x;\n\t\t\t\tlet edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n\t\t\t\tif ( Math.abs( edgeDy ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not parallel\n\t\t\t\t\tif ( edgeDy < 0 ) {\n\n\t\t\t\t\t\tedgeLowPt = inPolygon[ q ]; edgeDx = - edgeDx;\n\t\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\n\n\t\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\n\n\t\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\n\t\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\n\t\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// parallel or collinear\n\t\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\n\t\t\t\t\t// edge lies on the same horizontal line as inPt\n\t\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\n\t\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\n\t\t\t\t\t// continue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn\tinside;\n\n\t\t}\n\n\t\tconst isClockWise = ShapeUtils.isClockWise;\n\n\t\tconst subPaths = this.subPaths;\n\t\tif ( subPaths.length === 0 ) return [];\n\n\t\tif ( noHoles === true )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tlet solid, tmpPath, tmpShape;\n\t\tconst shapes = [];\n\n\t\tif ( subPaths.length === 1 ) {\n\n\t\t\ttmpPath = subPaths[ 0 ];\n\t\t\ttmpShape = new Shape();\n\t\t\ttmpShape.curves = tmpPath.curves;\n\t\t\tshapes.push( tmpShape );\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tlet holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\n\t\tholesFirst = isCCW ? ! holesFirst : holesFirst;\n\n\t\t// console.log(\"Holes first\", holesFirst);\n\n\t\tconst betterShapeHoles = [];\n\t\tconst newShapes = [];\n\t\tlet newShapeHoles = [];\n\t\tlet mainIdx = 0;\n\t\tlet tmpPoints;\n\n\t\tnewShapes[ mainIdx ] = undefined;\n\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\tfor ( let i = 0, l = subPaths.length; i < l; i ++ ) {\n\n\t\t\ttmpPath = subPaths[ i ];\n\t\t\ttmpPoints = tmpPath.getPoints();\n\t\t\tsolid = isClockWise( tmpPoints );\n\t\t\tsolid = isCCW ? ! solid : solid;\n\n\t\t\tif ( solid ) {\n\n\t\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\n\n\t\t\t\tnewShapes[ mainIdx ] = { s: new Shape(), p: tmpPoints };\n\t\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\n\n\t\t\t\tif ( holesFirst )\tmainIdx ++;\n\t\t\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\t\t\t//console.log('cw', i);\n\n\t\t\t} else {\n\n\t\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\n\n\t\t\t\t//console.log('ccw', i);\n\n\t\t\t}\n\n\t\t}\n\n\t\t// only Holes? -> probably all Shapes with wrong orientation\n\t\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tif ( newShapes.length > 1 ) {\n\n\t\t\tlet ambiguous = false;\n\t\t\tlet toChange = 0;\n\n\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tbetterShapeHoles[ sIdx ] = [];\n\n\t\t\t}\n\n\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tconst sho = newShapeHoles[ sIdx ];\n\n\t\t\t\tfor ( let hIdx = 0; hIdx < sho.length; hIdx ++ ) {\n\n\t\t\t\t\tconst ho = sho[ hIdx ];\n\t\t\t\t\tlet hole_unassigned = true;\n\n\t\t\t\t\tfor ( let s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\n\n\t\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\n\n\t\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange ++;\n\n\t\t\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\t\t\thole_unassigned = false;\n\t\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tambiguous = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( toChange > 0 && ambiguous === false ) {\n\n\t\t\t\tnewShapeHoles = betterShapeHoles;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet tmpHoles;\n\n\t\tfor ( let i = 0, il = newShapes.length; i < il; i ++ ) {\n\n\t\t\ttmpShape = newShapes[ i ].s;\n\t\t\tshapes.push( tmpShape );\n\t\t\ttmpHoles = newShapeHoles[ i ];\n\n\t\t\tfor ( let j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\n\n\t\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//console.log(\"shape\", shapes);\n\n\t\treturn shapes;\n\n\t}\n\n}\n\n// Fast Half Float Conversions, http://www.fox-toolkit.org/ftp/fasthalffloatconversion.pdf\n\nclass DataUtils {\n\n\t// float32 to float16\n\n\tstatic toHalfFloat( val ) {\n\n\t\tif ( Math.abs( val ) > 65504 ) console.warn( 'THREE.DataUtils.toHalfFloat(): Value out of range.' );\n\n\t\tval = clamp( val, - 65504, 65504 );\n\n\t\t_floatView[ 0 ] = val;\n\t\tconst f = _uint32View[ 0 ];\n\t\tconst e = ( f >> 23 ) & 0x1ff;\n\t\treturn _baseTable[ e ] + ( ( f & 0x007fffff ) >> _shiftTable[ e ] );\n\n\t}\n\n\t// float16 to float32\n\n\tstatic fromHalfFloat( val ) {\n\n\t\tconst m = val >> 10;\n\t\t_uint32View[ 0 ] = _mantissaTable[ _offsetTable[ m ] + ( val & 0x3ff ) ] + _exponentTable[ m ];\n\t\treturn _floatView[ 0 ];\n\n\t}\n\n}\n\n// float32 to float16 helpers\n\nconst _buffer = new ArrayBuffer( 4 );\nconst _floatView = new Float32Array( _buffer );\nconst _uint32View = new Uint32Array( _buffer );\n\nconst _baseTable = new Uint32Array( 512 );\nconst _shiftTable = new Uint32Array( 512 );\n\nfor ( let i = 0; i < 256; ++ i ) {\n\n\tconst e = i - 127;\n\n\t// very small number (0, -0)\n\n\tif ( e < - 27 ) {\n\n\t\t_baseTable[ i ] = 0x0000;\n\t\t_baseTable[ i | 0x100 ] = 0x8000;\n\t\t_shiftTable[ i ] = 24;\n\t\t_shiftTable[ i | 0x100 ] = 24;\n\n\t\t// small number (denorm)\n\n\t} else if ( e < - 14 ) {\n\n\t\t_baseTable[ i ] = 0x0400 >> ( - e - 14 );\n\t\t_baseTable[ i | 0x100 ] = ( 0x0400 >> ( - e - 14 ) ) | 0x8000;\n\t\t_shiftTable[ i ] = - e - 1;\n\t\t_shiftTable[ i | 0x100 ] = - e - 1;\n\n\t\t// normal number\n\n\t} else if ( e <= 15 ) {\n\n\t\t_baseTable[ i ] = ( e + 15 ) << 10;\n\t\t_baseTable[ i | 0x100 ] = ( ( e + 15 ) << 10 ) | 0x8000;\n\t\t_shiftTable[ i ] = 13;\n\t\t_shiftTable[ i | 0x100 ] = 13;\n\n\t\t// large number (Infinity, -Infinity)\n\n\t} else if ( e < 128 ) {\n\n\t\t_baseTable[ i ] = 0x7c00;\n\t\t_baseTable[ i | 0x100 ] = 0xfc00;\n\t\t_shiftTable[ i ] = 24;\n\t\t_shiftTable[ i | 0x100 ] = 24;\n\n\t\t// stay (NaN, Infinity, -Infinity)\n\n\t} else {\n\n\t\t_baseTable[ i ] = 0x7c00;\n\t\t_baseTable[ i | 0x100 ] = 0xfc00;\n\t\t_shiftTable[ i ] = 13;\n\t\t_shiftTable[ i | 0x100 ] = 13;\n\n\t}\n\n}\n\n// float16 to float32 helpers\n\nconst _mantissaTable = new Uint32Array( 2048 );\nconst _exponentTable = new Uint32Array( 64 );\nconst _offsetTable = new Uint32Array( 64 );\n\nfor ( let i = 1; i < 1024; ++ i ) {\n\n\tlet m = i << 13; // zero pad mantissa bits\n\tlet e = 0; // zero exponent\n\n\t// normalized\n\twhile ( ( m & 0x00800000 ) === 0 ) {\n\n\t\tm <<= 1;\n\t\te -= 0x00800000; // decrement exponent\n\n\t}\n\n\tm &= ~ 0x00800000; // clear leading 1 bit\n\te += 0x38800000; // adjust bias\n\n\t_mantissaTable[ i ] = m | e;\n\n}\n\nfor ( let i = 1024; i < 2048; ++ i ) {\n\n\t_mantissaTable[ i ] = 0x38000000 + ( ( i - 1024 ) << 13 );\n\n}\n\nfor ( let i = 1; i < 31; ++ i ) {\n\n\t_exponentTable[ i ] = i << 23;\n\n}\n\n_exponentTable[ 31 ] = 0x47800000;\n_exponentTable[ 32 ] = 0x80000000;\nfor ( let i = 33; i < 63; ++ i ) {\n\n\t_exponentTable[ i ] = 0x80000000 + ( ( i - 32 ) << 23 );\n\n}\n\n_exponentTable[ 63 ] = 0xc7800000;\n\nfor ( let i = 1; i < 64; ++ i ) {\n\n\tif ( i !== 32 ) {\n\n\t\t_offsetTable[ i ] = 1024;\n\n\t}\n\n}\n\nconst LineStrip = 0;\nconst LinePieces = 1;\nconst NoColors = 0;\nconst FaceColors = 1;\nconst VertexColors = 2;\n\nfunction MeshFaceMaterial( materials ) {\n\n\tconsole.warn( 'THREE.MeshFaceMaterial has been removed. Use an Array instead.' );\n\treturn materials;\n\n}\n\nfunction MultiMaterial( materials = [] ) {\n\n\tconsole.warn( 'THREE.MultiMaterial has been removed. Use an Array instead.' );\n\tmaterials.isMultiMaterial = true;\n\tmaterials.materials = materials;\n\tmaterials.clone = function () {\n\n\t\treturn materials.slice();\n\n\t};\n\n\treturn materials;\n\n}\n\nclass PointCloud extends Points {\n\n\tconstructor( geometry, material ) {\n\n\t\tconsole.warn( 'THREE.PointCloud has been renamed to THREE.Points.' );\n\t\tsuper( geometry, material );\n\n\t}\n\n}\n\nclass Particle extends Sprite {\n\n\tconstructor( material ) {\n\n\t\tconsole.warn( 'THREE.Particle has been renamed to THREE.Sprite.' );\n\t\tsuper( material );\n\n\t}\n\n}\n\nclass ParticleSystem extends Points {\n\n\tconstructor( geometry, material ) {\n\n\t\tconsole.warn( 'THREE.ParticleSystem has been renamed to THREE.Points.' );\n\t\tsuper( geometry, material );\n\n\t}\n\n}\n\nclass PointCloudMaterial extends PointsMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tconsole.warn( 'THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.' );\n\t\tsuper( parameters );\n\n\t}\n\n}\n\nclass ParticleBasicMaterial extends PointsMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tconsole.warn( 'THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.' );\n\t\tsuper( parameters );\n\n\t}\n\n}\n\nclass ParticleSystemMaterial extends PointsMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tconsole.warn( 'THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.' );\n\t\tsuper( parameters );\n\n\t}\n\n}\n\nclass Vertex extends Vector3 {\n\n\tconstructor( x, y, z ) {\n\n\t\tconsole.warn( 'THREE.Vertex has been removed. Use THREE.Vector3 instead.' );\n\t\tsuper( x, y, z );\n\n\t}\n\n}\n\n//\n\nclass DynamicBufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setUsage( THREE.DynamicDrawUsage ) instead.' );\n\t\tsuper( array, itemSize );\n\t\tthis.setUsage( DynamicDrawUsage );\n\n\t}\n\n}\n\nclass Int8Attribute extends Int8BufferAttribute {\n\n\tconstructor( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead.' );\n\t\tsuper( array, itemSize );\n\n\t}\n\n}\n\nclass Uint8Attribute extends Uint8BufferAttribute {\n\n\tconstructor( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead.' );\n\t\tsuper( array, itemSize );\n\n\t}\n\n}\n\nclass Uint8ClampedAttribute extends Uint8ClampedBufferAttribute {\n\n\tconstructor( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead.' );\n\t\tsuper( array, itemSize );\n\n\t}\n\n}\n\nclass Int16Attribute extends Int16BufferAttribute {\n\n\tconstructor( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead.' );\n\t\tsuper( array, itemSize );\n\n\t}\n\n}\n\nclass Uint16Attribute extends Uint16BufferAttribute {\n\n\tconstructor( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead.' );\n\t\tsuper( array, itemSize );\n\n\t}\n\n}\n\nclass Int32Attribute extends Int32BufferAttribute {\n\n\tconstructor( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead.' );\n\t\tsuper( array, itemSize );\n\n\t}\n\n}\n\nclass Uint32Attribute extends Uint32BufferAttribute {\n\n\tconstructor( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead.' );\n\t\tsuper( array, itemSize );\n\n\t}\n\n}\n\nclass Float32Attribute extends Float32BufferAttribute {\n\n\tconstructor( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead.' );\n\t\tsuper( array, itemSize );\n\n\t}\n\n}\n\nclass Float64Attribute extends Float64BufferAttribute {\n\n\tconstructor( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead.' );\n\t\tsuper( array, itemSize );\n\n\t}\n\n}\n\n//\n\nCurve.create = function ( construct, getPoint ) {\n\n\tconsole.log( 'THREE.Curve.create() has been deprecated' );\n\n\tconstruct.prototype = Object.create( Curve.prototype );\n\tconstruct.prototype.constructor = construct;\n\tconstruct.prototype.getPoint = getPoint;\n\n\treturn construct;\n\n};\n\n//\n\nPath.prototype.fromPoints = function ( points ) {\n\n\tconsole.warn( 'THREE.Path: .fromPoints() has been renamed to .setFromPoints().' );\n\treturn this.setFromPoints( points );\n\n};\n\n//\n\nclass AxisHelper extends AxesHelper {\n\n\tconstructor( size ) {\n\n\t\tconsole.warn( 'THREE.AxisHelper has been renamed to THREE.AxesHelper.' );\n\t\tsuper( size );\n\n\t}\n\n}\n\nclass BoundingBoxHelper extends BoxHelper {\n\n\tconstructor( object, color ) {\n\n\t\tconsole.warn( 'THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead.' );\n\t\tsuper( object, color );\n\n\t}\n\n}\n\nclass EdgesHelper extends LineSegments {\n\n\tconstructor( object, hex ) {\n\n\t\tconsole.warn( 'THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead.' );\n\t\tsuper( new EdgesGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );\n\n\t}\n\n}\n\nGridHelper.prototype.setColors = function () {\n\n\tconsole.error( 'THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.' );\n\n};\n\nSkeletonHelper.prototype.update = function () {\n\n\tconsole.error( 'THREE.SkeletonHelper: update() no longer needs to be called.' );\n\n};\n\nclass WireframeHelper extends LineSegments {\n\n\tconstructor( object, hex ) {\n\n\t\tconsole.warn( 'THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead.' );\n\t\tsuper( new WireframeGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );\n\n\t}\n\n}\n\n//\n\nLoader.prototype.extractUrlBase = function ( url ) {\n\n\tconsole.warn( 'THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead.' );\n\treturn LoaderUtils.extractUrlBase( url );\n\n};\n\nLoader.Handlers = {\n\n\tadd: function ( /* regex, loader */ ) {\n\n\t\tconsole.error( 'THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.' );\n\n\t},\n\n\tget: function ( /* file */ ) {\n\n\t\tconsole.error( 'THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.' );\n\n\t}\n\n};\n\nclass XHRLoader extends FileLoader {\n\n\tconstructor( manager ) {\n\n\t\tconsole.warn( 'THREE.XHRLoader has been renamed to THREE.FileLoader.' );\n\t\tsuper( manager );\n\n\t}\n\n}\n\nclass BinaryTextureLoader extends DataTextureLoader {\n\n\tconstructor( manager ) {\n\n\t\tconsole.warn( 'THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader.' );\n\t\tsuper( manager );\n\n\t}\n\n}\n\n//\n\nBox2.prototype.center = function ( optionalTarget ) {\n\n\tconsole.warn( 'THREE.Box2: .center() has been renamed to .getCenter().' );\n\treturn this.getCenter( optionalTarget );\n\n};\n\nBox2.prototype.empty = function () {\n\n\tconsole.warn( 'THREE.Box2: .empty() has been renamed to .isEmpty().' );\n\treturn this.isEmpty();\n\n};\n\nBox2.prototype.isIntersectionBox = function ( box ) {\n\n\tconsole.warn( 'THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\treturn this.intersectsBox( box );\n\n};\n\nBox2.prototype.size = function ( optionalTarget ) {\n\n\tconsole.warn( 'THREE.Box2: .size() has been renamed to .getSize().' );\n\treturn this.getSize( optionalTarget );\n\n};\n\n//\n\nBox3.prototype.center = function ( optionalTarget ) {\n\n\tconsole.warn( 'THREE.Box3: .center() has been renamed to .getCenter().' );\n\treturn this.getCenter( optionalTarget );\n\n};\n\nBox3.prototype.empty = function () {\n\n\tconsole.warn( 'THREE.Box3: .empty() has been renamed to .isEmpty().' );\n\treturn this.isEmpty();\n\n};\n\nBox3.prototype.isIntersectionBox = function ( box ) {\n\n\tconsole.warn( 'THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\treturn this.intersectsBox( box );\n\n};\n\nBox3.prototype.isIntersectionSphere = function ( sphere ) {\n\n\tconsole.warn( 'THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\n\treturn this.intersectsSphere( sphere );\n\n};\n\nBox3.prototype.size = function ( optionalTarget ) {\n\n\tconsole.warn( 'THREE.Box3: .size() has been renamed to .getSize().' );\n\treturn this.getSize( optionalTarget );\n\n};\n\n//\n\nEuler.prototype.toVector3 = function () {\n\n\tconsole.error( 'THREE.Euler: .toVector3() has been removed. Use Vector3.setFromEuler() instead' );\n\n};\n\n\n//\n\nSphere.prototype.empty = function () {\n\n\tconsole.warn( 'THREE.Sphere: .empty() has been renamed to .isEmpty().' );\n\treturn this.isEmpty();\n\n};\n\n//\n\nFrustum.prototype.setFromMatrix = function ( m ) {\n\n\tconsole.warn( 'THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix().' );\n\treturn this.setFromProjectionMatrix( m );\n\n};\n\n//\n\nLine3.prototype.center = function ( optionalTarget ) {\n\n\tconsole.warn( 'THREE.Line3: .center() has been renamed to .getCenter().' );\n\treturn this.getCenter( optionalTarget );\n\n};\n\n//\n\nMatrix3.prototype.flattenToArrayOffset = function ( array, offset ) {\n\n\tconsole.warn( 'THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.' );\n\treturn this.toArray( array, offset );\n\n};\n\nMatrix3.prototype.multiplyVector3 = function ( vector ) {\n\n\tconsole.warn( 'THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.' );\n\treturn vector.applyMatrix3( this );\n\n};\n\nMatrix3.prototype.multiplyVector3Array = function ( /* a */ ) {\n\n\tconsole.error( 'THREE.Matrix3: .multiplyVector3Array() has been removed.' );\n\n};\n\nMatrix3.prototype.applyToBufferAttribute = function ( attribute ) {\n\n\tconsole.warn( 'THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead.' );\n\treturn attribute.applyMatrix3( this );\n\n};\n\nMatrix3.prototype.applyToVector3Array = function ( /* array, offset, length */ ) {\n\n\tconsole.error( 'THREE.Matrix3: .applyToVector3Array() has been removed.' );\n\n};\n\nMatrix3.prototype.getInverse = function ( matrix ) {\n\n\tconsole.warn( 'THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead.' );\n\treturn this.copy( matrix ).invert();\n\n};\n\n//\n\nMatrix4.prototype.extractPosition = function ( m ) {\n\n\tconsole.warn( 'THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().' );\n\treturn this.copyPosition( m );\n\n};\n\nMatrix4.prototype.flattenToArrayOffset = function ( array, offset ) {\n\n\tconsole.warn( 'THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.' );\n\treturn this.toArray( array, offset );\n\n};\n\nMatrix4.prototype.getPosition = function () {\n\n\tconsole.warn( 'THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.' );\n\treturn new Vector3().setFromMatrixColumn( this, 3 );\n\n};\n\nMatrix4.prototype.setRotationFromQuaternion = function ( q ) {\n\n\tconsole.warn( 'THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().' );\n\treturn this.makeRotationFromQuaternion( q );\n\n};\n\nMatrix4.prototype.multiplyToArray = function () {\n\n\tconsole.warn( 'THREE.Matrix4: .multiplyToArray() has been removed.' );\n\n};\n\nMatrix4.prototype.multiplyVector3 = function ( vector ) {\n\n\tconsole.warn( 'THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\treturn vector.applyMatrix4( this );\n\n};\n\nMatrix4.prototype.multiplyVector4 = function ( vector ) {\n\n\tconsole.warn( 'THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\treturn vector.applyMatrix4( this );\n\n};\n\nMatrix4.prototype.multiplyVector3Array = function ( /* a */ ) {\n\n\tconsole.error( 'THREE.Matrix4: .multiplyVector3Array() has been removed.' );\n\n};\n\nMatrix4.prototype.rotateAxis = function ( v ) {\n\n\tconsole.warn( 'THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.' );\n\tv.transformDirection( this );\n\n};\n\nMatrix4.prototype.crossVector = function ( vector ) {\n\n\tconsole.warn( 'THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\treturn vector.applyMatrix4( this );\n\n};\n\nMatrix4.prototype.translate = function () {\n\n\tconsole.error( 'THREE.Matrix4: .translate() has been removed.' );\n\n};\n\nMatrix4.prototype.rotateX = function () {\n\n\tconsole.error( 'THREE.Matrix4: .rotateX() has been removed.' );\n\n};\n\nMatrix4.prototype.rotateY = function () {\n\n\tconsole.error( 'THREE.Matrix4: .rotateY() has been removed.' );\n\n};\n\nMatrix4.prototype.rotateZ = function () {\n\n\tconsole.error( 'THREE.Matrix4: .rotateZ() has been removed.' );\n\n};\n\nMatrix4.prototype.rotateByAxis = function () {\n\n\tconsole.error( 'THREE.Matrix4: .rotateByAxis() has been removed.' );\n\n};\n\nMatrix4.prototype.applyToBufferAttribute = function ( attribute ) {\n\n\tconsole.warn( 'THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead.' );\n\treturn attribute.applyMatrix4( this );\n\n};\n\nMatrix4.prototype.applyToVector3Array = function ( /* array, offset, length */ ) {\n\n\tconsole.error( 'THREE.Matrix4: .applyToVector3Array() has been removed.' );\n\n};\n\nMatrix4.prototype.makeFrustum = function ( left, right, bottom, top, near, far ) {\n\n\tconsole.warn( 'THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead.' );\n\treturn this.makePerspective( left, right, top, bottom, near, far );\n\n};\n\nMatrix4.prototype.getInverse = function ( matrix ) {\n\n\tconsole.warn( 'THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead.' );\n\treturn this.copy( matrix ).invert();\n\n};\n\n//\n\nPlane.prototype.isIntersectionLine = function ( line ) {\n\n\tconsole.warn( 'THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().' );\n\treturn this.intersectsLine( line );\n\n};\n\n//\n\nQuaternion.prototype.multiplyVector3 = function ( vector ) {\n\n\tconsole.warn( 'THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.' );\n\treturn vector.applyQuaternion( this );\n\n};\n\nQuaternion.prototype.inverse = function ( ) {\n\n\tconsole.warn( 'THREE.Quaternion: .inverse() has been renamed to invert().' );\n\treturn this.invert();\n\n};\n\n//\n\nRay.prototype.isIntersectionBox = function ( box ) {\n\n\tconsole.warn( 'THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\treturn this.intersectsBox( box );\n\n};\n\nRay.prototype.isIntersectionPlane = function ( plane ) {\n\n\tconsole.warn( 'THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().' );\n\treturn this.intersectsPlane( plane );\n\n};\n\nRay.prototype.isIntersectionSphere = function ( sphere ) {\n\n\tconsole.warn( 'THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\n\treturn this.intersectsSphere( sphere );\n\n};\n\n//\n\nTriangle.prototype.area = function () {\n\n\tconsole.warn( 'THREE.Triangle: .area() has been renamed to .getArea().' );\n\treturn this.getArea();\n\n};\n\nTriangle.prototype.barycoordFromPoint = function ( point, target ) {\n\n\tconsole.warn( 'THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().' );\n\treturn this.getBarycoord( point, target );\n\n};\n\nTriangle.prototype.midpoint = function ( target ) {\n\n\tconsole.warn( 'THREE.Triangle: .midpoint() has been renamed to .getMidpoint().' );\n\treturn this.getMidpoint( target );\n\n};\n\nTriangle.prototypenormal = function ( target ) {\n\n\tconsole.warn( 'THREE.Triangle: .normal() has been renamed to .getNormal().' );\n\treturn this.getNormal( target );\n\n};\n\nTriangle.prototype.plane = function ( target ) {\n\n\tconsole.warn( 'THREE.Triangle: .plane() has been renamed to .getPlane().' );\n\treturn this.getPlane( target );\n\n};\n\nTriangle.barycoordFromPoint = function ( point, a, b, c, target ) {\n\n\tconsole.warn( 'THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().' );\n\treturn Triangle.getBarycoord( point, a, b, c, target );\n\n};\n\nTriangle.normal = function ( a, b, c, target ) {\n\n\tconsole.warn( 'THREE.Triangle: .normal() has been renamed to .getNormal().' );\n\treturn Triangle.getNormal( a, b, c, target );\n\n};\n\n//\n\nShape.prototype.extractAllPoints = function ( divisions ) {\n\n\tconsole.warn( 'THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead.' );\n\treturn this.extractPoints( divisions );\n\n};\n\nShape.prototype.extrude = function ( options ) {\n\n\tconsole.warn( 'THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead.' );\n\treturn new ExtrudeGeometry( this, options );\n\n};\n\nShape.prototype.makeGeometry = function ( options ) {\n\n\tconsole.warn( 'THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead.' );\n\treturn new ShapeGeometry( this, options );\n\n};\n\n//\n\nVector2.prototype.fromAttribute = function ( attribute, index, offset ) {\n\n\tconsole.warn( 'THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\treturn this.fromBufferAttribute( attribute, index, offset );\n\n};\n\nVector2.prototype.distanceToManhattan = function ( v ) {\n\n\tconsole.warn( 'THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo().' );\n\treturn this.manhattanDistanceTo( v );\n\n};\n\nVector2.prototype.lengthManhattan = function () {\n\n\tconsole.warn( 'THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength().' );\n\treturn this.manhattanLength();\n\n};\n\n//\n\nVector3.prototype.setEulerFromRotationMatrix = function () {\n\n\tconsole.error( 'THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.' );\n\n};\n\nVector3.prototype.setEulerFromQuaternion = function () {\n\n\tconsole.error( 'THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.' );\n\n};\n\nVector3.prototype.getPositionFromMatrix = function ( m ) {\n\n\tconsole.warn( 'THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().' );\n\treturn this.setFromMatrixPosition( m );\n\n};\n\nVector3.prototype.getScaleFromMatrix = function ( m ) {\n\n\tconsole.warn( 'THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().' );\n\treturn this.setFromMatrixScale( m );\n\n};\n\nVector3.prototype.getColumnFromMatrix = function ( index, matrix ) {\n\n\tconsole.warn( 'THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().' );\n\treturn this.setFromMatrixColumn( matrix, index );\n\n};\n\nVector3.prototype.applyProjection = function ( m ) {\n\n\tconsole.warn( 'THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead.' );\n\treturn this.applyMatrix4( m );\n\n};\n\nVector3.prototype.fromAttribute = function ( attribute, index, offset ) {\n\n\tconsole.warn( 'THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\treturn this.fromBufferAttribute( attribute, index, offset );\n\n};\n\nVector3.prototype.distanceToManhattan = function ( v ) {\n\n\tconsole.warn( 'THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo().' );\n\treturn this.manhattanDistanceTo( v );\n\n};\n\nVector3.prototype.lengthManhattan = function () {\n\n\tconsole.warn( 'THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength().' );\n\treturn this.manhattanLength();\n\n};\n\n//\n\nVector4.prototype.fromAttribute = function ( attribute, index, offset ) {\n\n\tconsole.warn( 'THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\treturn this.fromBufferAttribute( attribute, index, offset );\n\n};\n\nVector4.prototype.lengthManhattan = function () {\n\n\tconsole.warn( 'THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength().' );\n\treturn this.manhattanLength();\n\n};\n\n//\n\nObject3D.prototype.getChildByName = function ( name ) {\n\n\tconsole.warn( 'THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().' );\n\treturn this.getObjectByName( name );\n\n};\n\nObject3D.prototype.renderDepth = function () {\n\n\tconsole.warn( 'THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.' );\n\n};\n\nObject3D.prototype.translate = function ( distance, axis ) {\n\n\tconsole.warn( 'THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.' );\n\treturn this.translateOnAxis( axis, distance );\n\n};\n\nObject3D.prototype.getWorldRotation = function () {\n\n\tconsole.error( 'THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.' );\n\n};\n\nObject3D.prototype.applyMatrix = function ( matrix ) {\n\n\tconsole.warn( 'THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4().' );\n\treturn this.applyMatrix4( matrix );\n\n};\n\nObject.defineProperties( Object3D.prototype, {\n\n\teulerOrder: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\n\t\t\treturn this.rotation.order;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\n\t\t\tthis.rotation.order = value;\n\n\t\t}\n\t},\n\tuseQuaternion: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\n\n\t\t}\n\t}\n\n} );\n\nMesh.prototype.setDrawMode = function () {\n\n\tconsole.error( 'THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.' );\n\n};\n\nObject.defineProperties( Mesh.prototype, {\n\n\tdrawMode: {\n\t\tget: function () {\n\n\t\t\tconsole.error( 'THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode.' );\n\t\t\treturn TrianglesDrawMode;\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.error( 'THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.' );\n\n\t\t}\n\t}\n\n} );\n\nSkinnedMesh.prototype.initBones = function () {\n\n\tconsole.error( 'THREE.SkinnedMesh: initBones() has been removed.' );\n\n};\n\n//\n\nPerspectiveCamera.prototype.setLens = function ( focalLength, filmGauge ) {\n\n\tconsole.warn( 'THREE.PerspectiveCamera.setLens is deprecated. ' +\n\t\t\t'Use .setFocalLength and .filmGauge for a photographic setup.' );\n\n\tif ( filmGauge !== undefined ) this.filmGauge = filmGauge;\n\tthis.setFocalLength( focalLength );\n\n};\n\n//\n\nObject.defineProperties( Light.prototype, {\n\tonlyShadow: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Light: .onlyShadow has been removed.' );\n\n\t\t}\n\t},\n\tshadowCameraFov: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraFov is now .shadow.camera.fov.' );\n\t\t\tthis.shadow.camera.fov = value;\n\n\t\t}\n\t},\n\tshadowCameraLeft: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraLeft is now .shadow.camera.left.' );\n\t\t\tthis.shadow.camera.left = value;\n\n\t\t}\n\t},\n\tshadowCameraRight: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraRight is now .shadow.camera.right.' );\n\t\t\tthis.shadow.camera.right = value;\n\n\t\t}\n\t},\n\tshadowCameraTop: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraTop is now .shadow.camera.top.' );\n\t\t\tthis.shadow.camera.top = value;\n\n\t\t}\n\t},\n\tshadowCameraBottom: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.' );\n\t\t\tthis.shadow.camera.bottom = value;\n\n\t\t}\n\t},\n\tshadowCameraNear: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraNear is now .shadow.camera.near.' );\n\t\t\tthis.shadow.camera.near = value;\n\n\t\t}\n\t},\n\tshadowCameraFar: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraFar is now .shadow.camera.far.' );\n\t\t\tthis.shadow.camera.far = value;\n\n\t\t}\n\t},\n\tshadowCameraVisible: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.' );\n\n\t\t}\n\t},\n\tshadowBias: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowBias is now .shadow.bias.' );\n\t\t\tthis.shadow.bias = value;\n\n\t\t}\n\t},\n\tshadowDarkness: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowDarkness has been removed.' );\n\n\t\t}\n\t},\n\tshadowMapWidth: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.' );\n\t\t\tthis.shadow.mapSize.width = value;\n\n\t\t}\n\t},\n\tshadowMapHeight: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.' );\n\t\t\tthis.shadow.mapSize.height = value;\n\n\t\t}\n\t}\n} );\n\n//\n\nObject.defineProperties( BufferAttribute.prototype, {\n\n\tlength: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.BufferAttribute: .length has been deprecated. Use .count instead.' );\n\t\t\treturn this.array.length;\n\n\t\t}\n\t},\n\tdynamic: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead.' );\n\t\t\treturn this.usage === DynamicDrawUsage;\n\n\t\t},\n\t\tset: function ( /* value */ ) {\n\n\t\t\tconsole.warn( 'THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead.' );\n\t\t\tthis.setUsage( DynamicDrawUsage );\n\n\t\t}\n\t}\n\n} );\n\nBufferAttribute.prototype.setDynamic = function ( value ) {\n\n\tconsole.warn( 'THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead.' );\n\tthis.setUsage( value === true ? DynamicDrawUsage : StaticDrawUsage );\n\treturn this;\n\n};\n\nBufferAttribute.prototype.copyIndicesArray = function ( /* indices */ ) {\n\n\tconsole.error( 'THREE.BufferAttribute: .copyIndicesArray() has been removed.' );\n\n},\n\nBufferAttribute.prototype.setArray = function ( /* array */ ) {\n\n\tconsole.error( 'THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers' );\n\n};\n\n//\n\nBufferGeometry.prototype.addIndex = function ( index ) {\n\n\tconsole.warn( 'THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().' );\n\tthis.setIndex( index );\n\n};\n\nBufferGeometry.prototype.addAttribute = function ( name, attribute ) {\n\n\tconsole.warn( 'THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute().' );\n\n\tif ( ! ( attribute && attribute.isBufferAttribute ) && ! ( attribute && attribute.isInterleavedBufferAttribute ) ) {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).' );\n\n\t\treturn this.setAttribute( name, new BufferAttribute( arguments[ 1 ], arguments[ 2 ] ) );\n\n\t}\n\n\tif ( name === 'index' ) {\n\n\t\tconsole.warn( 'THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.' );\n\t\tthis.setIndex( attribute );\n\n\t\treturn this;\n\n\t}\n\n\treturn this.setAttribute( name, attribute );\n\n};\n\nBufferGeometry.prototype.addDrawCall = function ( start, count, indexOffset ) {\n\n\tif ( indexOffset !== undefined ) {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.' );\n\n\t}\n\n\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() is now .addGroup().' );\n\tthis.addGroup( start, count );\n\n};\n\nBufferGeometry.prototype.clearDrawCalls = function () {\n\n\tconsole.warn( 'THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().' );\n\tthis.clearGroups();\n\n};\n\nBufferGeometry.prototype.computeOffsets = function () {\n\n\tconsole.warn( 'THREE.BufferGeometry: .computeOffsets() has been removed.' );\n\n};\n\nBufferGeometry.prototype.removeAttribute = function ( name ) {\n\n\tconsole.warn( 'THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute().' );\n\n\treturn this.deleteAttribute( name );\n\n};\n\nBufferGeometry.prototype.applyMatrix = function ( matrix ) {\n\n\tconsole.warn( 'THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4().' );\n\treturn this.applyMatrix4( matrix );\n\n};\n\nObject.defineProperties( BufferGeometry.prototype, {\n\n\tdrawcalls: {\n\t\tget: function () {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry: .drawcalls has been renamed to .groups.' );\n\t\t\treturn this.groups;\n\n\t\t}\n\t},\n\toffsets: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .offsets has been renamed to .groups.' );\n\t\t\treturn this.groups;\n\n\t\t}\n\t}\n\n} );\n\nInterleavedBuffer.prototype.setDynamic = function ( value ) {\n\n\tconsole.warn( 'THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead.' );\n\tthis.setUsage( value === true ? DynamicDrawUsage : StaticDrawUsage );\n\treturn this;\n\n};\n\nInterleavedBuffer.prototype.setArray = function ( /* array */ ) {\n\n\tconsole.error( 'THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers' );\n\n};\n\n//\n\nExtrudeGeometry.prototype.getArrays = function () {\n\n\tconsole.error( 'THREE.ExtrudeGeometry: .getArrays() has been removed.' );\n\n};\n\nExtrudeGeometry.prototype.addShapeList = function () {\n\n\tconsole.error( 'THREE.ExtrudeGeometry: .addShapeList() has been removed.' );\n\n};\n\nExtrudeGeometry.prototype.addShape = function () {\n\n\tconsole.error( 'THREE.ExtrudeGeometry: .addShape() has been removed.' );\n\n};\n\n//\n\nScene.prototype.dispose = function () {\n\n\tconsole.error( 'THREE.Scene: .dispose() has been removed.' );\n\n};\n\n//\n\nUniform.prototype.onUpdate = function () {\n\n\tconsole.warn( 'THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead.' );\n\treturn this;\n\n};\n\n//\n\nObject.defineProperties( Material.prototype, {\n\n\twrapAround: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .wrapAround has been removed.' );\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .wrapAround has been removed.' );\n\n\t\t}\n\t},\n\n\toverdraw: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .overdraw has been removed.' );\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .overdraw has been removed.' );\n\n\t\t}\n\t},\n\n\twrapRGB: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .wrapRGB has been removed.' );\n\t\t\treturn new Color();\n\n\t\t}\n\t},\n\n\tshading: {\n\t\tget: function () {\n\n\t\t\tconsole.error( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\t\t\tthis.flatShading = ( value === FlatShading );\n\n\t\t}\n\t},\n\n\tstencilMask: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.' + this.type + ': .stencilMask has been removed. Use .stencilFuncMask instead.' );\n\t\t\treturn this.stencilFuncMask;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.' + this.type + ': .stencilMask has been removed. Use .stencilFuncMask instead.' );\n\t\t\tthis.stencilFuncMask = value;\n\n\t\t}\n\t},\n\n\tvertexTangents: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.' + this.type + ': .vertexTangents has been removed.' );\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.' + this.type + ': .vertexTangents has been removed.' );\n\n\t\t}\n\t},\n\n} );\n\nObject.defineProperties( ShaderMaterial.prototype, {\n\n\tderivatives: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\n\t\t\treturn this.extensions.derivatives;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\n\t\t\tthis.extensions.derivatives = value;\n\n\t\t}\n\t}\n\n} );\n\n//\n\nWebGLRenderer.prototype.clearTarget = function ( renderTarget, color, depth, stencil ) {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead.' );\n\tthis.setRenderTarget( renderTarget );\n\tthis.clear( color, depth, stencil );\n\n};\n\nWebGLRenderer.prototype.animate = function ( callback ) {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .animate() is now .setAnimationLoop().' );\n\tthis.setAnimationLoop( callback );\n\n};\n\nWebGLRenderer.prototype.getCurrentRenderTarget = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget().' );\n\treturn this.getRenderTarget();\n\n};\n\nWebGLRenderer.prototype.getMaxAnisotropy = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy().' );\n\treturn this.capabilities.getMaxAnisotropy();\n\n};\n\nWebGLRenderer.prototype.getPrecision = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision.' );\n\treturn this.capabilities.precision;\n\n};\n\nWebGLRenderer.prototype.resetGLState = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .resetGLState() is now .state.reset().' );\n\treturn this.state.reset();\n\n};\n\nWebGLRenderer.prototype.supportsFloatTextures = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \\'OES_texture_float\\' ).' );\n\treturn this.extensions.get( 'OES_texture_float' );\n\n};\n\nWebGLRenderer.prototype.supportsHalfFloatTextures = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \\'OES_texture_half_float\\' ).' );\n\treturn this.extensions.get( 'OES_texture_half_float' );\n\n};\n\nWebGLRenderer.prototype.supportsStandardDerivatives = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \\'OES_standard_derivatives\\' ).' );\n\treturn this.extensions.get( 'OES_standard_derivatives' );\n\n};\n\nWebGLRenderer.prototype.supportsCompressedTextureS3TC = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \\'WEBGL_compressed_texture_s3tc\\' ).' );\n\treturn this.extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n};\n\nWebGLRenderer.prototype.supportsCompressedTexturePVRTC = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \\'WEBGL_compressed_texture_pvrtc\\' ).' );\n\treturn this.extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n};\n\nWebGLRenderer.prototype.supportsBlendMinMax = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \\'EXT_blend_minmax\\' ).' );\n\treturn this.extensions.get( 'EXT_blend_minmax' );\n\n};\n\nWebGLRenderer.prototype.supportsVertexTextures = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures.' );\n\treturn this.capabilities.vertexTextures;\n\n};\n\nWebGLRenderer.prototype.supportsInstancedArrays = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \\'ANGLE_instanced_arrays\\' ).' );\n\treturn this.extensions.get( 'ANGLE_instanced_arrays' );\n\n};\n\nWebGLRenderer.prototype.enableScissorTest = function ( boolean ) {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().' );\n\tthis.setScissorTest( boolean );\n\n};\n\nWebGLRenderer.prototype.initMaterial = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .initMaterial() has been removed.' );\n\n};\n\nWebGLRenderer.prototype.addPrePlugin = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .addPrePlugin() has been removed.' );\n\n};\n\nWebGLRenderer.prototype.addPostPlugin = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .addPostPlugin() has been removed.' );\n\n};\n\nWebGLRenderer.prototype.updateShadowMap = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .updateShadowMap() has been removed.' );\n\n};\n\nWebGLRenderer.prototype.setFaceCulling = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .setFaceCulling() has been removed.' );\n\n};\n\nWebGLRenderer.prototype.allocTextureUnit = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .allocTextureUnit() has been removed.' );\n\n};\n\nWebGLRenderer.prototype.setTexture = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .setTexture() has been removed.' );\n\n};\n\nWebGLRenderer.prototype.setTexture2D = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .setTexture2D() has been removed.' );\n\n};\n\nWebGLRenderer.prototype.setTextureCube = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .setTextureCube() has been removed.' );\n\n};\n\nWebGLRenderer.prototype.getActiveMipMapLevel = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel().' );\n\treturn this.getActiveMipmapLevel();\n\n};\n\nObject.defineProperties( WebGLRenderer.prototype, {\n\n\tshadowMapEnabled: {\n\t\tget: function () {\n\n\t\t\treturn this.shadowMap.enabled;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.' );\n\t\t\tthis.shadowMap.enabled = value;\n\n\t\t}\n\t},\n\tshadowMapType: {\n\t\tget: function () {\n\n\t\t\treturn this.shadowMap.type;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.' );\n\t\t\tthis.shadowMap.type = value;\n\n\t\t}\n\t},\n\tshadowMapCullFace: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.' );\n\t\t\treturn undefined;\n\n\t\t},\n\t\tset: function ( /* value */ ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.' );\n\n\t\t}\n\t},\n\tcontext: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .context has been removed. Use .getContext() instead.' );\n\t\t\treturn this.getContext();\n\n\t\t}\n\t},\n\tvr: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .vr has been renamed to .xr' );\n\t\t\treturn this.xr;\n\n\t\t}\n\t},\n\tgammaInput: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.' );\n\t\t\treturn false;\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.' );\n\n\t\t}\n\t},\n\tgammaOutput: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead.' );\n\t\t\treturn false;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead.' );\n\t\t\tthis.outputEncoding = ( value === true ) ? sRGBEncoding : LinearEncoding;\n\n\t\t}\n\t},\n\ttoneMappingWhitePoint: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.' );\n\t\t\treturn 1.0;\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.' );\n\n\t\t}\n\t},\n\tgammaFactor: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .gammaFactor has been removed.' );\n\t\t\treturn 2;\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .gammaFactor has been removed.' );\n\n\t\t}\n\t}\n} );\n\nObject.defineProperties( WebGLShadowMap.prototype, {\n\n\tcullFace: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.' );\n\t\t\treturn undefined;\n\n\t\t},\n\t\tset: function ( /* cullFace */ ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.' );\n\n\t\t}\n\t},\n\trenderReverseSided: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.' );\n\t\t\treturn undefined;\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.' );\n\n\t\t}\n\t},\n\trenderSingleSided: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.' );\n\t\t\treturn undefined;\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.' );\n\n\t\t}\n\t}\n\n} );\n\nclass WebGLRenderTargetCube extends WebGLCubeRenderTarget {\n\n\tconstructor( width, height, options ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderTargetCube( width, height, options ) is now WebGLCubeRenderTarget( size, options ).' );\n\t\tsuper( width, options );\n\n\t}\n\n}\n\n//\n\nObject.defineProperties( WebGLRenderTarget.prototype, {\n\n\twrapS: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\n\t\t\treturn this.texture.wrapS;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\n\t\t\tthis.texture.wrapS = value;\n\n\t\t}\n\t},\n\twrapT: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\n\t\t\treturn this.texture.wrapT;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\n\t\t\tthis.texture.wrapT = value;\n\n\t\t}\n\t},\n\tmagFilter: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\n\t\t\treturn this.texture.magFilter;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\n\t\t\tthis.texture.magFilter = value;\n\n\t\t}\n\t},\n\tminFilter: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\n\t\t\treturn this.texture.minFilter;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\n\t\t\tthis.texture.minFilter = value;\n\n\t\t}\n\t},\n\tanisotropy: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\n\t\t\treturn this.texture.anisotropy;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\n\t\t\tthis.texture.anisotropy = value;\n\n\t\t}\n\t},\n\toffset: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\n\t\t\treturn this.texture.offset;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\n\t\t\tthis.texture.offset = value;\n\n\t\t}\n\t},\n\trepeat: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\n\t\t\treturn this.texture.repeat;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\n\t\t\tthis.texture.repeat = value;\n\n\t\t}\n\t},\n\tformat: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\n\t\t\treturn this.texture.format;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\n\t\t\tthis.texture.format = value;\n\n\t\t}\n\t},\n\ttype: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\n\t\t\treturn this.texture.type;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\n\t\t\tthis.texture.type = value;\n\n\t\t}\n\t},\n\tgenerateMipmaps: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\n\t\t\treturn this.texture.generateMipmaps;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\n\t\t\tthis.texture.generateMipmaps = value;\n\n\t\t}\n\t}\n\n} );\n\n//\n\nAudio.prototype.load = function ( file ) {\n\n\tconsole.warn( 'THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.' );\n\tconst scope = this;\n\tconst audioLoader = new AudioLoader();\n\taudioLoader.load( file, function ( buffer ) {\n\n\t\tscope.setBuffer( buffer );\n\n\t} );\n\treturn this;\n\n};\n\n\nAudioAnalyser.prototype.getData = function () {\n\n\tconsole.warn( 'THREE.AudioAnalyser: .getData() is now .getFrequencyData().' );\n\treturn this.getFrequencyData();\n\n};\n\n//\n\nCubeCamera.prototype.updateCubeMap = function ( renderer, scene ) {\n\n\tconsole.warn( 'THREE.CubeCamera: .updateCubeMap() is now .update().' );\n\treturn this.update( renderer, scene );\n\n};\n\nCubeCamera.prototype.clear = function ( renderer, color, depth, stencil ) {\n\n\tconsole.warn( 'THREE.CubeCamera: .clear() is now .renderTarget.clear().' );\n\treturn this.renderTarget.clear( renderer, color, depth, stencil );\n\n};\n\nImageUtils.crossOrigin = undefined;\n\nImageUtils.loadTexture = function ( url, mapping, onLoad, onError ) {\n\n\tconsole.warn( 'THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.' );\n\n\tconst loader = new TextureLoader();\n\tloader.setCrossOrigin( this.crossOrigin );\n\n\tconst texture = loader.load( url, onLoad, undefined, onError );\n\n\tif ( mapping ) texture.mapping = mapping;\n\n\treturn texture;\n\n};\n\nImageUtils.loadTextureCube = function ( urls, mapping, onLoad, onError ) {\n\n\tconsole.warn( 'THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.' );\n\n\tconst loader = new CubeTextureLoader();\n\tloader.setCrossOrigin( this.crossOrigin );\n\n\tconst texture = loader.load( urls, onLoad, undefined, onError );\n\n\tif ( mapping ) texture.mapping = mapping;\n\n\treturn texture;\n\n};\n\nImageUtils.loadCompressedTexture = function () {\n\n\tconsole.error( 'THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.' );\n\n};\n\nImageUtils.loadCompressedTextureCube = function () {\n\n\tconsole.error( 'THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.' );\n\n};\n\n//\n\nfunction CanvasRenderer() {\n\n\tconsole.error( 'THREE.CanvasRenderer has been removed' );\n\n}\n\n//\n\nfunction JSONLoader() {\n\n\tconsole.error( 'THREE.JSONLoader has been removed.' );\n\n}\n\n//\n\nconst SceneUtils = {\n\n\tcreateMultiMaterialObject: function ( /* geometry, materials */ ) {\n\n\t\tconsole.error( 'THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js' );\n\n\t},\n\n\tdetach: function ( /* child, parent, scene */ ) {\n\n\t\tconsole.error( 'THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js' );\n\n\t},\n\n\tattach: function ( /* child, scene, parent */ ) {\n\n\t\tconsole.error( 'THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js' );\n\n\t}\n\n};\n\n//\n\nfunction LensFlare() {\n\n\tconsole.error( 'THREE.LensFlare has been moved to /examples/jsm/objects/Lensflare.js' );\n\n}\n\n//\n\nclass ParametricGeometry extends BufferGeometry {\n\n\tconstructor() {\n\n\t\tconsole.error( 'THREE.ParametricGeometry has been moved to /examples/jsm/geometries/ParametricGeometry.js' );\n\t\tsuper();\n\n\t}\n\n}\n\nclass TextGeometry extends BufferGeometry {\n\n\tconstructor() {\n\n\t\tconsole.error( 'THREE.TextGeometry has been moved to /examples/jsm/geometries/TextGeometry.js' );\n\t\tsuper();\n\n\t}\n\n}\n\nfunction FontLoader() {\n\n\tconsole.error( 'THREE.FontLoader has been moved to /examples/jsm/loaders/FontLoader.js' );\n\n}\n\nfunction Font() {\n\n\tconsole.error( 'THREE.Font has been moved to /examples/jsm/loaders/FontLoader.js' );\n\n}\n\nfunction ImmediateRenderObject() {\n\n\tconsole.error( 'THREE.ImmediateRenderObject has been removed.' );\n\n}\n\nclass WebGLMultisampleRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width, height, options ) {\n\n\t\tconsole.error( 'THREE.WebGLMultisampleRenderTarget has been removed. Use a normal render target and set the \"samples\" property to greater 0 to enable multisampling.' );\n\t\tsuper( width, height, options );\n\t\tthis.samples = 4;\n\n\t}\n\n}\n\nclass DataTexture2DArray extends DataArrayTexture {\n\n\tconstructor( data, width, height, depth ) {\n\n\t\tconsole.warn( 'THREE.DataTexture2DArray has been renamed to DataArrayTexture.' );\n\t\tsuper( data, width, height, depth );\n\n\t}\n\n}\n\nclass DataTexture3D extends Data3DTexture {\n\n\tconstructor( data, width, height, depth ) {\n\n\t\tconsole.warn( 'THREE.DataTexture3D has been renamed to Data3DTexture.' );\n\t\tsuper( data, width, height, depth );\n\n\t}\n\n}\n\nif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'register', { detail: {\n\t\trevision: REVISION,\n\t} } ) );\n\n}\n\nif ( typeof window !== 'undefined' ) {\n\n\tif ( window.__THREE__ ) {\n\n\t\tconsole.warn( 'WARNING: Multiple instances of Three.js being imported.' );\n\n\t} else {\n\n\t\twindow.__THREE__ = REVISION;\n\n\t}\n\n}\n\nexport { ACESFilmicToneMapping, AddEquation, AddOperation, AdditiveAnimationBlendMode, AdditiveBlending, AlphaFormat, AlwaysDepth, AlwaysStencilFunc, AmbientLight, AmbientLightProbe, AnimationClip, AnimationLoader, AnimationMixer, AnimationObjectGroup, AnimationUtils, ArcCurve, ArrayCamera, ArrowHelper, Audio, AudioAnalyser, AudioContext, AudioListener, AudioLoader, AxesHelper, AxisHelper, BackSide, BasicDepthPacking, BasicShadowMap, BinaryTextureLoader, Bone, BooleanKeyframeTrack, BoundingBoxHelper, Box2, Box3, Box3Helper, BoxGeometry as BoxBufferGeometry, BoxGeometry, BoxHelper, BufferAttribute, BufferGeometry, BufferGeometryLoader, ByteType, Cache, Camera, CameraHelper, CanvasRenderer, CanvasTexture, CapsuleGeometry as CapsuleBufferGeometry, CapsuleGeometry, CatmullRomCurve3, CineonToneMapping, CircleGeometry as CircleBufferGeometry, CircleGeometry, ClampToEdgeWrapping, Clock, Color, ColorKeyframeTrack, ColorManagement, CompressedTexture, CompressedTextureLoader, ConeGeometry as ConeBufferGeometry, ConeGeometry, CubeCamera, CubeReflectionMapping, CubeRefractionMapping, CubeTexture, CubeTextureLoader, CubeUVReflectionMapping, CubicBezierCurve, CubicBezierCurve3, CubicInterpolant, CullFaceBack, CullFaceFront, CullFaceFrontBack, CullFaceNone, Curve, CurvePath, CustomBlending, CustomToneMapping, CylinderGeometry as CylinderBufferGeometry, CylinderGeometry, Cylindrical, Data3DTexture, DataArrayTexture, DataTexture, DataTexture2DArray, DataTexture3D, DataTextureLoader, DataUtils, DecrementStencilOp, DecrementWrapStencilOp, DefaultLoadingManager, DepthFormat, DepthStencilFormat, DepthTexture, DirectionalLight, DirectionalLightHelper, DiscreteInterpolant, DodecahedronGeometry as DodecahedronBufferGeometry, DodecahedronGeometry, DoubleSide, DstAlphaFactor, DstColorFactor, DynamicBufferAttribute, DynamicCopyUsage, DynamicDrawUsage, DynamicReadUsage, EdgesGeometry, EdgesHelper, EllipseCurve, EqualDepth, EqualStencilFunc, EquirectangularReflectionMapping, EquirectangularRefractionMapping, Euler, EventDispatcher, ExtrudeGeometry as ExtrudeBufferGeometry, ExtrudeGeometry, FaceColors, FileLoader, FlatShading, Float16BufferAttribute, Float32Attribute, Float32BufferAttribute, Float64Attribute, Float64BufferAttribute, FloatType, Fog, FogExp2, Font, FontLoader, FramebufferTexture, FrontSide, Frustum, GLBufferAttribute, GLSL1, GLSL3, GreaterDepth, GreaterEqualDepth, GreaterEqualStencilFunc, GreaterStencilFunc, GridHelper, Group, HalfFloatType, HemisphereLight, HemisphereLightHelper, HemisphereLightProbe, IcosahedronGeometry as IcosahedronBufferGeometry, IcosahedronGeometry, ImageBitmapLoader, ImageLoader, ImageUtils, ImmediateRenderObject, IncrementStencilOp, IncrementWrapStencilOp, InstancedBufferAttribute, InstancedBufferGeometry, InstancedInterleavedBuffer, InstancedMesh, Int16Attribute, Int16BufferAttribute, Int32Attribute, Int32BufferAttribute, Int8Attribute, Int8BufferAttribute, IntType, InterleavedBuffer, InterleavedBufferAttribute, Interpolant, InterpolateDiscrete, InterpolateLinear, InterpolateSmooth, InvertStencilOp, JSONLoader, KeepStencilOp, KeyframeTrack, LOD, LatheGeometry as LatheBufferGeometry, LatheGeometry, Layers, LensFlare, LessDepth, LessEqualDepth, LessEqualStencilFunc, LessStencilFunc, Light, LightProbe, Line, Line3, LineBasicMaterial, LineCurve, LineCurve3, LineDashedMaterial, LineLoop, LinePieces, LineSegments, LineStrip, LinearEncoding, LinearFilter, LinearInterpolant, LinearMipMapLinearFilter, LinearMipMapNearestFilter, LinearMipmapLinearFilter, LinearMipmapNearestFilter, LinearSRGBColorSpace, LinearToneMapping, Loader, LoaderUtils, LoadingManager, LoopOnce, LoopPingPong, LoopRepeat, LuminanceAlphaFormat, LuminanceFormat, MOUSE, Material, MaterialLoader, MathUtils as Math, MathUtils, Matrix3, Matrix4, MaxEquation, Mesh, MeshBasicMaterial, MeshDepthMaterial, MeshDistanceMaterial, MeshFaceMaterial, MeshLambertMaterial, MeshMatcapMaterial, MeshNormalMaterial, MeshPhongMaterial, MeshPhysicalMaterial, MeshStandardMaterial, MeshToonMaterial, MinEquation, MirroredRepeatWrapping, MixOperation, MultiMaterial, MultiplyBlending, MultiplyOperation, NearestFilter, NearestMipMapLinearFilter, NearestMipMapNearestFilter, NearestMipmapLinearFilter, NearestMipmapNearestFilter, NeverDepth, NeverStencilFunc, NoBlending, NoColorSpace, NoColors, NoToneMapping, NormalAnimationBlendMode, NormalBlending, NotEqualDepth, NotEqualStencilFunc, NumberKeyframeTrack, Object3D, ObjectLoader, ObjectSpaceNormalMap, OctahedronGeometry as OctahedronBufferGeometry, OctahedronGeometry, OneFactor, OneMinusDstAlphaFactor, OneMinusDstColorFactor, OneMinusSrcAlphaFactor, OneMinusSrcColorFactor, OrthographicCamera, PCFShadowMap, PCFSoftShadowMap, PMREMGenerator, ParametricGeometry, Particle, ParticleBasicMaterial, ParticleSystem, ParticleSystemMaterial, Path, PerspectiveCamera, Plane, PlaneGeometry as PlaneBufferGeometry, PlaneGeometry, PlaneHelper, PointCloud, PointCloudMaterial, PointLight, PointLightHelper, Points, PointsMaterial, PolarGridHelper, PolyhedronGeometry as PolyhedronBufferGeometry, PolyhedronGeometry, PositionalAudio, PropertyBinding, PropertyMixer, QuadraticBezierCurve, QuadraticBezierCurve3, Quaternion, QuaternionKeyframeTrack, QuaternionLinearInterpolant, REVISION, RGBADepthPacking, RGBAFormat, RGBAIntegerFormat, RGBA_ASTC_10x10_Format, RGBA_ASTC_10x5_Format, RGBA_ASTC_10x6_Format, RGBA_ASTC_10x8_Format, RGBA_ASTC_12x10_Format, RGBA_ASTC_12x12_Format, RGBA_ASTC_4x4_Format, RGBA_ASTC_5x4_Format, RGBA_ASTC_5x5_Format, RGBA_ASTC_6x5_Format, RGBA_ASTC_6x6_Format, RGBA_ASTC_8x5_Format, RGBA_ASTC_8x6_Format, RGBA_ASTC_8x8_Format, RGBA_BPTC_Format, RGBA_ETC2_EAC_Format, RGBA_PVRTC_2BPPV1_Format, RGBA_PVRTC_4BPPV1_Format, RGBA_S3TC_DXT1_Format, RGBA_S3TC_DXT3_Format, RGBA_S3TC_DXT5_Format, RGBFormat, RGB_ETC1_Format, RGB_ETC2_Format, RGB_PVRTC_2BPPV1_Format, RGB_PVRTC_4BPPV1_Format, RGB_S3TC_DXT1_Format, RGFormat, RGIntegerFormat, RawShaderMaterial, Ray, Raycaster, RectAreaLight, RedFormat, RedIntegerFormat, ReinhardToneMapping, RepeatWrapping, ReplaceStencilOp, ReverseSubtractEquation, RingGeometry as RingBufferGeometry, RingGeometry, SRGBColorSpace, Scene, SceneUtils, ShaderChunk, ShaderLib, ShaderMaterial, ShadowMaterial, Shape, ShapeGeometry as ShapeBufferGeometry, ShapeGeometry, ShapePath, ShapeUtils, ShortType, Skeleton, SkeletonHelper, SkinnedMesh, SmoothShading, Source, Sphere, SphereGeometry as SphereBufferGeometry, SphereGeometry, Spherical, SphericalHarmonics3, SplineCurve, SpotLight, SpotLightHelper, Sprite, SpriteMaterial, SrcAlphaFactor, SrcAlphaSaturateFactor, SrcColorFactor, StaticCopyUsage, StaticDrawUsage, StaticReadUsage, StereoCamera, StreamCopyUsage, StreamDrawUsage, StreamReadUsage, StringKeyframeTrack, SubtractEquation, SubtractiveBlending, TOUCH, TangentSpaceNormalMap, TetrahedronGeometry as TetrahedronBufferGeometry, TetrahedronGeometry, TextGeometry, Texture, TextureLoader, TorusGeometry as TorusBufferGeometry, TorusGeometry, TorusKnotGeometry as TorusKnotBufferGeometry, TorusKnotGeometry, Triangle, TriangleFanDrawMode, TriangleStripDrawMode, TrianglesDrawMode, TubeGeometry as TubeBufferGeometry, TubeGeometry, UVMapping, Uint16Attribute, Uint16BufferAttribute, Uint32Attribute, Uint32BufferAttribute, Uint8Attribute, Uint8BufferAttribute, Uint8ClampedAttribute, Uint8ClampedBufferAttribute, Uniform, UniformsLib, UniformsUtils, UnsignedByteType, UnsignedInt248Type, UnsignedIntType, UnsignedShort4444Type, UnsignedShort5551Type, UnsignedShortType, VSMShadowMap, Vector2, Vector3, Vector4, VectorKeyframeTrack, Vertex, VertexColors, VideoTexture, WebGL1Renderer, WebGL3DRenderTarget, WebGLArrayRenderTarget, WebGLCubeRenderTarget, WebGLMultipleRenderTargets, WebGLMultisampleRenderTarget, WebGLRenderTarget, WebGLRenderTargetCube, WebGLRenderer, WebGLUtils, WireframeGeometry, WireframeHelper, WrapAroundEnding, XHRLoader, ZeroCurvatureEnding, ZeroFactor, ZeroSlopeEnding, ZeroStencilOp, _SRGBAFormat, sRGBEncoding };\n","import * as THREE from \"three\";\r\n\r\n// init\r\n\r\nexport default class Sketch {\r\n  constructor() {\r\n    this.renderer = new THREE.WebGLRenderer({ antialias: true });\r\n    this.renderer.setSize(window.innerWidth, window.innerHeight);\r\n    this.renderer.setAnimationLoop(animation);\r\n    document.getElementById(\"container\").appendChild(this.renderer.domElement);\r\n\r\n    this.camera = new THREE.PerspectiveCamera(\r\n      70,\r\n      window.innerWidth / window.innerHeight,\r\n      0.01,\r\n      10\r\n    );\r\n    this.camera.position.z = 1;\r\n    this.scene = new THREE.Scene();\r\n    this.addMesh();\r\n    this.time = 0;\r\n    this.render();\r\n  }\r\n  addMesh() {\r\n    this.geometry = new THREE.PlaneBufferGeometry(1, 1, 1);\r\n    this.material = new THREE.MeshNormalMaterial();\r\n\r\n    this.mesh = new THREE.Mesh(this.geometry, this.material);\r\n    this.scene.add(this.mesh);\r\n  }\r\n  render() {\r\n    this.time++;\r\n    this.mesh.rotation.x += 0.01;\r\n    this.mesh.rotation.y += 0.02;\r\n    console.log(this.time);\r\n    this.renderer.render(this.scene, this.camera);\r\n    window.requestAnimationFrame(this.render.bind(this));\r\n  }\r\n}\r\n\r\nnew Sketch();\r\n"]}